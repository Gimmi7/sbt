{
	"id": "93809251b5d9f02b1ebad2630cf82df4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/MyTokenProxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport \"@openzeppelin/contracts/proxy/Proxy.sol\";\nimport \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\";\n\ncontract MyTokenProxy is Proxy, ERC1967Upgrade {\n    /**\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\n     *\n     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\n     * function call, and allows initializing the storage of the proxy like a Solidity constructor.\n     */\n    constructor(address _logic, bytes memory _data) payable {\n        _upgradeToAndCall(_logic, _data, false);\n    }\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _implementation()\n        internal\n        view\n        virtual\n        override\n        returns (address impl)\n    {\n        return ERC1967Upgrade._getImplementation();\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (proxy/ERC1967/ERC1967Upgrade.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../beacon/IBeacon.sol\";\nimport \"../../interfaces/draft-IERC1822.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n *\n * _Available since v4.1._\n *\n * @custom:oz-upgrades-unsafe-allow delegatecall\n */\nabstract contract ERC1967Upgrade {\n    // This is the keccak-256 hash of \"eip1967.proxy.rollback\" subtracted by 1\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Perform implementation upgrade\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeTo(address newImplementation) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n    }\n\n    /**\n     * @dev Perform implementation upgrade with additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCall(\n        address newImplementation,\n        bytes memory data,\n        bool forceCall\n    ) internal {\n        _upgradeTo(newImplementation);\n        if (data.length > 0 || forceCall) {\n            Address.functionDelegateCall(newImplementation, data);\n        }\n    }\n\n    /**\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(\n        address newImplementation,\n        bytes memory data,\n        bool forceCall\n    ) internal {\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\n            _setImplementation(newImplementation);\n        } else {\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n                require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\");\n            } catch {\n                revert(\"ERC1967Upgrade: new implementation is not UUPS\");\n            }\n            _upgradeToAndCall(newImplementation, data, forceCall);\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Returns the current admin.\n     */\n    function _getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        require(newAdmin != address(0), \"ERC1967: new admin is the zero address\");\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {AdminChanged} event.\n     */\n    function _changeAdmin(address newAdmin) internal {\n        emit AdminChanged(_getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\n     */\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Emitted when the beacon is upgraded.\n     */\n    event BeaconUpgraded(address indexed beacon);\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function _getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        require(Address.isContract(newBeacon), \"ERC1967: new beacon is not a contract\");\n        require(\n            Address.isContract(IBeacon(newBeacon).implementation()),\n            \"ERC1967: beacon implementation is not a contract\"\n        );\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\n    }\n\n    /**\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n     *\n     * Emits a {BeaconUpgraded} event.\n     */\n    function _upgradeBeaconToAndCall(\n        address newBeacon,\n        bytes memory data,\n        bool forceCall\n    ) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n        if (data.length > 0 || forceCall) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/Proxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n * be specified by overriding the virtual {_implementation} function.\n *\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n * different contract through the {_delegate} function.\n *\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\n */\nabstract contract Proxy {\n    /**\n     * @dev Delegates the current call to `implementation`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _delegate(address implementation) internal virtual {\n        assembly {\n            // Copy msg.data. We take full control of memory in this inline assembly\n            // block because it will not return to Solidity code. We overwrite the\n            // Solidity scratch pad at memory position 0.\n            calldatacopy(0, 0, calldatasize())\n\n            // Call the implementation.\n            // out and outsize are 0 because we don't know the size yet.\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n\n            // Copy the returned data.\n            returndatacopy(0, 0, returndatasize())\n\n            switch result\n            // delegatecall returns 0 on error.\n            case 0 {\n                revert(0, returndatasize())\n            }\n            default {\n                return(0, returndatasize())\n            }\n        }\n    }\n\n    /**\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\n     * and {_fallback} should delegate.\n     */\n    function _implementation() internal view virtual returns (address);\n\n    /**\n     * @dev Delegates the current call to the address returned by `_implementation()`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _fallback() internal virtual {\n        _beforeFallback();\n        _delegate(_implementation());\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n     * function in the contract matches the call data.\n     */\n    fallback() external payable virtual {\n        _fallback();\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\n     * is empty.\n     */\n    receive() external payable virtual {\n        _fallback();\n    }\n\n    /**\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\n     * call, or as part of the Solidity `fallback` or `receive` functions.\n     *\n     * If overridden should call `super._beforeFallback()`.\n     */\n    function _beforeFallback() internal virtual {}\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/StorageSlot.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                /// @solidity memory-safe-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {BeaconProxy} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"IERC1822Proxiable": {
					"abi": [
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
				"ERC1967Upgrade": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "delegatecall",
						"details": "This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is upgraded."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is validated in the constructor."
							},
							"_BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."
							},
							"_IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is validated in the constructor."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"delegatecall\",\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is upgraded.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is validated in the constructor.\"},\"_BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\"},\"_IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is validated in the constructor.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":\"ERC1967Upgrade\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0xabf3f59bc0e5423eae45e459dbe92e7052c6983628d39008590edc852a62f94a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89c2a0f70157c13845be5cb49b078a6374fee3a78fa950052a3af26190255da8\",\"dweb:/ipfs/QmUcvMEQH1oMM2pUyMuDiBUKdvvnTz1NRB8bmPHrVq8725\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xd5c50c54bf02740ebd122ff06832546cb5fa84486d52695a9ccfd11666e0c81d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39e096c60a6eb1c6a257122d515496bd92d0c6a693a8f07acb6aa4b1263e95d4\",\"dweb:/ipfs/QmPs5trJBacCiSkezP6tpevapuRYWNY6mqSFzsMCJj7e6B\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/Proxy.sol": {
				"Proxy": {
					"abi": [
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"IBeacon": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:8305  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:8305  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205bc043d74995c745c5eb4bc39c4b63bcadd4bb71d1794837c0faf5c955640a4664736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205bc043d74995c745c5eb4bc39c4b63bcadd4bb71d1794837c0faf5c955640a4664736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST 0xC0 NUMBER 0xD7 0x49 SWAP6 0xC7 GASLIMIT 0xC5 0xEB 0x4B 0xC3 SWAP13 0x4B PUSH4 0xBCADD4BB PUSH18 0xD1794837C0FAF5C955640A4664736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "194:8111:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205bc043d74995c745c5eb4bc39c4b63bcadd4bb71d1794837c0faf5c955640a4664736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST 0xC0 NUMBER 0xD7 0x49 SWAP6 0xC7 GASLIMIT 0xC5 0xEB 0x4B 0xC3 SWAP13 0x4B PUSH4 0xBCADD4BB PUSH18 0xD1794837C0FAF5C955640A4664736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "194:8111:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205bc043d74995c745c5eb4bc39c4b63bcadd4bb71d1794837c0faf5c955640a4664736f6c63430008070033",
									".code": [
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ``` contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1279:2670  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1279:2670  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c77f96944d61649906c0b18a7af5aebd8e10855b745d5e676f72e99df8824c6e64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c77f96944d61649906c0b18a7af5aebd8e10855b745d5e676f72e99df8824c6e64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 PUSH32 0x96944D61649906C0B18A7AF5AEBD8E10855B745D5E676F72E99DF8824C6E6473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "1279:1391:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c77f96944d61649906c0b18a7af5aebd8e10855b745d5e676f72e99df8824c6e64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 PUSH32 0x96944D61649906C0B18A7AF5AEBD8E10855B745D5E676F72E99DF8824C6E6473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "1279:1391:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1279,
									"end": 2670,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1279,
									"end": 2670,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1279,
									"end": 2670,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 1279,
									"end": 2670,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1279,
									"end": 2670,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1279,
									"end": 2670,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1279,
									"end": 2670,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 1279,
									"end": 2670,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1279,
									"end": 2670,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1279,
									"end": 2670,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1279,
									"end": 2670,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 1279,
									"end": 2670,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 1279,
									"end": 2670,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 1279,
									"end": 2670,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1279,
									"end": 2670,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1279,
									"end": 2670,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1279,
									"end": 2670,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1279,
									"end": 2670,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1279,
									"end": 2670,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1279,
									"end": 2670,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1279,
									"end": 2670,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1279,
									"end": 2670,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1279,
									"end": 2670,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1279,
									"end": 2670,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1279,
									"end": 2670,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1279,
									"end": 2670,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1279,
									"end": 2670,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 1279,
									"end": 2670,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1279,
									"end": 2670,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1279,
									"end": 2670,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 1279,
									"end": 2670,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1279,
									"end": 2670,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 1279,
									"end": 2670,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1279,
									"end": 2670,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1279,
									"end": 2670,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c77f96944d61649906c0b18a7af5aebd8e10855b745d5e676f72e99df8824c6e64736f6c63430008070033",
									".code": [
										{
											"begin": 1279,
											"end": 2670,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 1279,
											"end": 2670,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1279,
											"end": 2670,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1279,
											"end": 2670,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1279,
											"end": 2670,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1279,
											"end": 2670,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1279,
											"end": 2670,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1279,
											"end": 2670,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1279,
											"end": 2670,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ``` contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xd5c50c54bf02740ebd122ff06832546cb5fa84486d52695a9ccfd11666e0c81d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39e096c60a6eb1c6a257122d515496bd92d0c6a693a8f07acb6aa4b1263e95d4\",\"dweb:/ipfs/QmPs5trJBacCiSkezP6tpevapuRYWNY6mqSFzsMCJj7e6B\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/MyTokenProxy.sol": {
				"MyTokenProxy": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_logic",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the upgradeable proxy with an initial implementation specified by `_logic`. If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MyTokenProxy.sol\":175:942  contract MyTokenProxy is Proxy, ERC1967Upgrade {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/MyTokenProxy.sol\":566:678  constructor(address _logic, bytes memory _data) payable {... */\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_1\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"contracts/MyTokenProxy.sol\":632:671  _upgradeToAndCall(_logic, _data, false) */\n  tag_5\n    /* \"contracts/MyTokenProxy.sol\":650:656  _logic */\n  dup3\n    /* \"contracts/MyTokenProxy.sol\":658:663  _data */\n  dup3\n    /* \"contracts/MyTokenProxy.sol\":665:670  false */\n  0x00\n    /* \"contracts/MyTokenProxy.sol\":632:649  _upgradeToAndCall */\n  shl(0x20, tag_6)\n    /* \"contracts/MyTokenProxy.sol\":632:671  _upgradeToAndCall(_logic, _data, false) */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"contracts/MyTokenProxy.sol\":566:678  constructor(address _logic, bytes memory _data) payable {... */\n  pop\n  pop\n    /* \"contracts/MyTokenProxy.sol\":175:942  contract MyTokenProxy is Proxy, ERC1967Upgrade {... */\n  jump(tag_7)\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2183:2478  function _upgradeToAndCall(... */\ntag_6:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2321:2350  _upgradeTo(newImplementation) */\n  tag_9\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2332:2349  newImplementation */\n  dup4\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2321:2331  _upgradeTo */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2321:2350  _upgradeTo(newImplementation) */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2378:2379  0 */\n  0x00\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2364:2368  data */\n  dup3\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2364:2375  data.length */\n  mload\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2364:2379  data.length > 0 */\n  gt\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2364:2392  data.length > 0 || forceCall */\n  dup1\n  tag_11\n  jumpi\n  pop\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2383:2392  forceCall */\n  dup1\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2364:2392  data.length > 0 || forceCall */\ntag_11:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2360:2472  if (data.length > 0 || forceCall) {... */\n  iszero\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2408:2461  Address.functionDelegateCall(newImplementation, data) */\n  tag_13\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2437:2454  newImplementation */\n  dup4\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2456:2460  data */\n  dup4\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2408:2436  Address.functionDelegateCall */\n  or(tag_0_10, shl(0x20, tag_14))\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2408:2461  Address.functionDelegateCall(newImplementation, data) */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n  pop\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2360:2472  if (data.length > 0 || forceCall) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2183:2478  function _upgradeToAndCall(... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1897:2049  function _upgradeTo(address newImplementation) internal {... */\ntag_10:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1963:2000  _setImplementation(newImplementation) */\n  tag_16\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1982:1999  newImplementation */\n  dup2\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1963:1981  _setImplementation */\n  shl(0x20, tag_17)\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1963:2000  _setImplementation(newImplementation) */\n  0x20\n  shr\n  jump\t// in\ntag_16:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2024:2041  newImplementation */\n  dup1\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2015:2042  Upgraded(newImplementation) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log2\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1897:2049  function _upgradeTo(address newImplementation) internal {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Address.sol\":6570:6768  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\ntag_14:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":6653:6665  bytes memory */\n  0x60\n    /* \"@openzeppelin/contracts/utils/Address.sol\":6684:6761  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n  tag_19\n    /* \"@openzeppelin/contracts/utils/Address.sol\":6705:6711  target */\n  dup4\n    /* \"@openzeppelin/contracts/utils/Address.sol\":6713:6717  data */\n  dup4\n    /* \"@openzeppelin/contracts/utils/Address.sol\":6684:6761  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  0x27\n  dup2\n  mstore\n  0x20\n  add\n  data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398\n  0x27\n  swap2\n  codecopy\n    /* \"@openzeppelin/contracts/utils/Address.sol\":6684:6704  functionDelegateCall */\n  shl(0x20, tag_20)\n    /* \"@openzeppelin/contracts/utils/Address.sol\":6684:6761  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n  0x20\n  shr\n  jump\t// in\ntag_19:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":6677:6761  return functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Address.sol\":6570:6768  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1532:1791  function _setImplementation(address newImplementation) private {... */\ntag_17:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1613:1650  Address.isContract(newImplementation) */\n  tag_22\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1632:1649  newImplementation */\n  dup2\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1613:1631  Address.isContract */\n  or(tag_0_11, shl(0x20, tag_23))\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1613:1650  Address.isContract(newImplementation) */\n  0x20\n  shr\n  jump\t// in\ntag_22:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1605:1700  require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\n  tag_24\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_25\n  swap1\n  tag_26\n  jump\t// in\ntag_25:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_24:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1767:1784  newImplementation */\n  dup1\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1710:1758  StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT) */\n  tag_27\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1030:1096  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1737:1757  _IMPLEMENTATION_SLOT */\n  0x00\n  shl\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1710:1736  StorageSlot.getAddressSlot */\n  or(tag_0_12, shl(0x20, tag_28))\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1710:1758  StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT) */\n  0x20\n  shr\n  jump\t// in\ntag_27:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1710:1764  StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value */\n  0x00\n  add\n  0x00\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1710:1784  StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1532:1791  function _setImplementation(address newImplementation) private {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Address.sol\":6954:7341  function functionDelegateCall(... */\ntag_20:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7095:7107  bytes memory */\n  0x60\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7127:7145  isContract(target) */\n  tag_30\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7138:7144  target */\n  dup5\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7127:7137  isContract */\n  shl(0x20, tag_23)\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7127:7145  isContract(target) */\n  0x20\n  shr\n  jump\t// in\ntag_30:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7119:7188  require(isContract(target), \"Address: delegate call to non-contract\") */\n  tag_31\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_32\n  swap1\n  tag_33\n  jump\t// in\ntag_32:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_31:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7200:7212  bool success */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7214:7237  bytes memory returndata */\n  dup1\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7241:7247  target */\n  dup6\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7241:7260  target.delegatecall */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7261:7265  data */\n  dup6\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7241:7266  target.delegatecall(data) */\n  mload(0x40)\n  tag_34\n  swap2\n  swap1\n  tag_35\n  jump\t// in\ntag_34:\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup6\n  gas\n  delegatecall\n  swap2\n  pop\n  pop\n  returndatasize\n  dup1\n  0x00\n  dup2\n  eq\n  tag_38\n  jumpi\n  mload(0x40)\n  swap2\n  pop\n  and(add(returndatasize, 0x3f), not(0x1f))\n  dup3\n  add\n  0x40\n  mstore\n  returndatasize\n  dup3\n  mstore\n  returndatasize\n  0x00\n  0x20\n  dup5\n  add\n  returndatacopy\n  jump(tag_37)\ntag_38:\n  0x60\n  swap2\n  pop\ntag_37:\n  pop\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7199:7266  (bool success, bytes memory returndata) = target.delegatecall(data) */\n  swap2\n  pop\n  swap2\n  pop\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7283:7334  verifyCallResult(success, returndata, errorMessage) */\n  tag_39\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7300:7307  success */\n  dup3\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7309:7319  returndata */\n  dup3\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7321:7333  errorMessage */\n  dup7\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7283:7299  verifyCallResult */\n  shl(0x20, tag_40)\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7283:7334  verifyCallResult(success, returndata, errorMessage) */\n  0x20\n  shr\n  jump\t// in\ntag_39:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7276:7334  return verifyCallResult(success, returndata, errorMessage) */\n  swap3\n  pop\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/Address.sol\":6954:7341  function functionDelegateCall(... */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\ntag_23:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":1235:1239  bool */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Address.sol\":1487:1488  0 */\n  dup1\n    /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1472  account */\n  dup3\n    /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  extcodesize\n    /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n  gt\n    /* \"@openzeppelin/contracts/utils/Address.sol\":1458:1488  return account.code.length > 0 */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1614:1804  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\ntag_28:\n    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1675:1696  AddressSlot storage r */\n  0x00\n    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1784:1788  slot */\n  dup2\n    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1774:1788  r.slot := slot */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1614:1804  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7561:8303  function verifyCallResult(... */\ntag_40:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7707:7719  bytes memory */\n  0x60\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7735:7742  success */\n  dup4\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8297  if (success) {... */\n  iszero\n  tag_44\n  jumpi\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7765:7775  returndata */\n  dup3\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7758:7775  return returndata */\n  swap1\n  pop\n  jump(tag_43)\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8297  if (success) {... */\ntag_44:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7896:7897  0 */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7886  returndata */\n  dup4\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7893  returndata.length */\n  mload\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7897  returndata.length > 0 */\n  gt\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8287  if (returndata.length > 0) {... */\n  iszero\n  tag_46\n  jumpi\n    /* \"@openzeppelin/contracts/utils/Address.sol\":8120:8130  returndata */\n  dup3\n    /* \"@openzeppelin/contracts/utils/Address.sol\":8114:8131  mload(returndata) */\n  mload\n    /* \"@openzeppelin/contracts/utils/Address.sol\":8180:8195  returndata_size */\n  dup1\n    /* \"@openzeppelin/contracts/utils/Address.sol\":8167:8177  returndata */\n  dup5\n    /* \"@openzeppelin/contracts/utils/Address.sol\":8163:8165  32 */\n  0x20\n    /* \"@openzeppelin/contracts/utils/Address.sol\":8159:8178  add(32, returndata) */\n  add\n    /* \"@openzeppelin/contracts/utils/Address.sol\":8152:8196  revert(add(32, returndata), returndata_size) */\n  revert\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8287  if (returndata.length > 0) {... */\ntag_46:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":8259:8271  errorMessage */\n  dup2\n    /* \"@openzeppelin/contracts/utils/Address.sol\":8252:8272  revert(errorMessage) */\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_48\n  swap2\n  swap1\n  tag_49\n  jump\t// in\ntag_48:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/utils/Address.sol\":7561:8303  function verifyCallResult(... */\ntag_43:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:426   */\ntag_51:\n    /* \"#utility.yul\":95:100   */\n  0x00\n    /* \"#utility.yul\":120:185   */\n  tag_53\n    /* \"#utility.yul\":136:184   */\n  tag_54\n    /* \"#utility.yul\":177:183   */\n  dup5\n    /* \"#utility.yul\":136:184   */\n  tag_55\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":120:185   */\n  tag_56\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":111:185   */\n  swap1\n  pop\n    /* \"#utility.yul\":208:214   */\n  dup3\n    /* \"#utility.yul\":201:206   */\n  dup2\n    /* \"#utility.yul\":194:215   */\n  mstore\n    /* \"#utility.yul\":246:250   */\n  0x20\n    /* \"#utility.yul\":239:244   */\n  dup2\n    /* \"#utility.yul\":235:251   */\n  add\n    /* \"#utility.yul\":284:287   */\n  dup5\n    /* \"#utility.yul\":275:281   */\n  dup5\n    /* \"#utility.yul\":270:273   */\n  dup5\n    /* \"#utility.yul\":266:282   */\n  add\n    /* \"#utility.yul\":263:288   */\n  gt\n    /* \"#utility.yul\":260:372   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":291:370   */\n  tag_58\n  tag_59\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":260:372   */\ntag_57:\n    /* \"#utility.yul\":381:420   */\n  tag_60\n    /* \"#utility.yul\":413:419   */\n  dup5\n    /* \"#utility.yul\":408:411   */\n  dup3\n    /* \"#utility.yul\":403:406   */\n  dup6\n    /* \"#utility.yul\":381:420   */\n  tag_61\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":101:426   */\n  pop\n    /* \"#utility.yul\":7:426   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":432:575   */\ntag_62:\n    /* \"#utility.yul\":489:494   */\n  0x00\n    /* \"#utility.yul\":520:526   */\n  dup2\n    /* \"#utility.yul\":514:527   */\n  mload\n    /* \"#utility.yul\":505:527   */\n  swap1\n  pop\n    /* \"#utility.yul\":536:569   */\n  tag_64\n    /* \"#utility.yul\":563:568   */\n  dup2\n    /* \"#utility.yul\":536:569   */\n  tag_65\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":432:575   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":594:947   */\ntag_66:\n    /* \"#utility.yul\":660:665   */\n  0x00\n    /* \"#utility.yul\":709:712   */\n  dup3\n    /* \"#utility.yul\":702:706   */\n  0x1f\n    /* \"#utility.yul\":694:700   */\n  dup4\n    /* \"#utility.yul\":690:707   */\n  add\n    /* \"#utility.yul\":686:713   */\n  slt\n    /* \"#utility.yul\":676:798   */\n  tag_68\n  jumpi\n    /* \"#utility.yul\":717:796   */\n  tag_69\n  tag_70\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":676:798   */\ntag_68:\n    /* \"#utility.yul\":827:833   */\n  dup2\n    /* \"#utility.yul\":821:834   */\n  mload\n    /* \"#utility.yul\":852:941   */\n  tag_71\n    /* \"#utility.yul\":937:940   */\n  dup5\n    /* \"#utility.yul\":929:935   */\n  dup3\n    /* \"#utility.yul\":922:926   */\n  0x20\n    /* \"#utility.yul\":914:920   */\n  dup7\n    /* \"#utility.yul\":910:927   */\n  add\n    /* \"#utility.yul\":852:941   */\n  tag_51\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":843:941   */\n  swap2\n  pop\n    /* \"#utility.yul\":666:947   */\n  pop\n    /* \"#utility.yul\":594:947   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":953:1631   */\ntag_2:\n    /* \"#utility.yul\":1041:1047   */\n  0x00\n    /* \"#utility.yul\":1049:1055   */\n  dup1\n    /* \"#utility.yul\":1098:1100   */\n  0x40\n    /* \"#utility.yul\":1086:1095   */\n  dup4\n    /* \"#utility.yul\":1077:1084   */\n  dup6\n    /* \"#utility.yul\":1073:1096   */\n  sub\n    /* \"#utility.yul\":1069:1101   */\n  slt\n    /* \"#utility.yul\":1066:1185   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":1104:1183   */\n  tag_74\n  tag_75\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":1066:1185   */\ntag_73:\n    /* \"#utility.yul\":1224:1225   */\n  0x00\n    /* \"#utility.yul\":1249:1313   */\n  tag_76\n    /* \"#utility.yul\":1305:1312   */\n  dup6\n    /* \"#utility.yul\":1296:1302   */\n  dup3\n    /* \"#utility.yul\":1285:1294   */\n  dup7\n    /* \"#utility.yul\":1281:1303   */\n  add\n    /* \"#utility.yul\":1249:1313   */\n  tag_62\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":1239:1313   */\n  swap3\n  pop\n    /* \"#utility.yul\":1195:1323   */\n  pop\n    /* \"#utility.yul\":1383:1385   */\n  0x20\n    /* \"#utility.yul\":1372:1381   */\n  dup4\n    /* \"#utility.yul\":1368:1386   */\n  add\n    /* \"#utility.yul\":1362:1387   */\n  mload\n    /* \"#utility.yul\":1414:1432   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1406:1412   */\n  dup2\n    /* \"#utility.yul\":1403:1433   */\n  gt\n    /* \"#utility.yul\":1400:1517   */\n  iszero\n  tag_77\n  jumpi\n    /* \"#utility.yul\":1436:1515   */\n  tag_78\n  tag_79\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":1400:1517   */\ntag_77:\n    /* \"#utility.yul\":1541:1614   */\n  tag_80\n    /* \"#utility.yul\":1606:1613   */\n  dup6\n    /* \"#utility.yul\":1597:1603   */\n  dup3\n    /* \"#utility.yul\":1586:1595   */\n  dup7\n    /* \"#utility.yul\":1582:1604   */\n  add\n    /* \"#utility.yul\":1541:1614   */\n  tag_66\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":1531:1614   */\n  swap2\n  pop\n    /* \"#utility.yul\":1333:1624   */\n  pop\n    /* \"#utility.yul\":953:1631   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1637:2010   */\ntag_81:\n    /* \"#utility.yul\":1741:1744   */\n  0x00\n    /* \"#utility.yul\":1769:1807   */\n  tag_83\n    /* \"#utility.yul\":1801:1806   */\n  dup3\n    /* \"#utility.yul\":1769:1807   */\n  tag_84\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":1823:1911   */\n  tag_85\n    /* \"#utility.yul\":1904:1910   */\n  dup2\n    /* \"#utility.yul\":1899:1902   */\n  dup6\n    /* \"#utility.yul\":1823:1911   */\n  tag_86\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":1816:1911   */\n  swap4\n  pop\n    /* \"#utility.yul\":1920:1972   */\n  tag_87\n    /* \"#utility.yul\":1965:1971   */\n  dup2\n    /* \"#utility.yul\":1960:1963   */\n  dup6\n    /* \"#utility.yul\":1953:1957   */\n  0x20\n    /* \"#utility.yul\":1946:1951   */\n  dup7\n    /* \"#utility.yul\":1942:1958   */\n  add\n    /* \"#utility.yul\":1920:1972   */\n  tag_61\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":1997:2003   */\n  dup1\n    /* \"#utility.yul\":1992:1995   */\n  dup5\n    /* \"#utility.yul\":1988:2004   */\n  add\n    /* \"#utility.yul\":1981:2004   */\n  swap2\n  pop\n    /* \"#utility.yul\":1745:2010   */\n  pop\n    /* \"#utility.yul\":1637:2010   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2016:2380   */\ntag_88:\n    /* \"#utility.yul\":2104:2107   */\n  0x00\n    /* \"#utility.yul\":2132:2171   */\n  tag_90\n    /* \"#utility.yul\":2165:2170   */\n  dup3\n    /* \"#utility.yul\":2132:2171   */\n  tag_91\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":2187:2258   */\n  tag_92\n    /* \"#utility.yul\":2251:2257   */\n  dup2\n    /* \"#utility.yul\":2246:2249   */\n  dup6\n    /* \"#utility.yul\":2187:2258   */\n  tag_93\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":2180:2258   */\n  swap4\n  pop\n    /* \"#utility.yul\":2267:2319   */\n  tag_94\n    /* \"#utility.yul\":2312:2318   */\n  dup2\n    /* \"#utility.yul\":2307:2310   */\n  dup6\n    /* \"#utility.yul\":2300:2304   */\n  0x20\n    /* \"#utility.yul\":2293:2298   */\n  dup7\n    /* \"#utility.yul\":2289:2305   */\n  add\n    /* \"#utility.yul\":2267:2319   */\n  tag_61\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":2344:2373   */\n  tag_95\n    /* \"#utility.yul\":2366:2372   */\n  dup2\n    /* \"#utility.yul\":2344:2373   */\n  tag_96\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":2339:2342   */\n  dup5\n    /* \"#utility.yul\":2335:2374   */\n  add\n    /* \"#utility.yul\":2328:2374   */\n  swap2\n  pop\n    /* \"#utility.yul\":2108:2380   */\n  pop\n    /* \"#utility.yul\":2016:2380   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2386:2752   */\ntag_97:\n    /* \"#utility.yul\":2528:2531   */\n  0x00\n    /* \"#utility.yul\":2549:2616   */\n  tag_99\n    /* \"#utility.yul\":2613:2615   */\n  0x2d\n    /* \"#utility.yul\":2608:2611   */\n  dup4\n    /* \"#utility.yul\":2549:2616   */\n  tag_93\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":2542:2616   */\n  swap2\n  pop\n    /* \"#utility.yul\":2625:2718   */\n  tag_100\n    /* \"#utility.yul\":2714:2717   */\n  dup3\n    /* \"#utility.yul\":2625:2718   */\n  tag_101\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":2743:2745   */\n  0x40\n    /* \"#utility.yul\":2738:2741   */\n  dup3\n    /* \"#utility.yul\":2734:2746   */\n  add\n    /* \"#utility.yul\":2727:2746   */\n  swap1\n  pop\n    /* \"#utility.yul\":2386:2752   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2758:3124   */\ntag_102:\n    /* \"#utility.yul\":2900:2903   */\n  0x00\n    /* \"#utility.yul\":2921:2988   */\n  tag_104\n    /* \"#utility.yul\":2985:2987   */\n  0x26\n    /* \"#utility.yul\":2980:2983   */\n  dup4\n    /* \"#utility.yul\":2921:2988   */\n  tag_93\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":2914:2988   */\n  swap2\n  pop\n    /* \"#utility.yul\":2997:3090   */\n  tag_105\n    /* \"#utility.yul\":3086:3089   */\n  dup3\n    /* \"#utility.yul\":2997:3090   */\n  tag_106\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":3115:3117   */\n  0x40\n    /* \"#utility.yul\":3110:3113   */\n  dup3\n    /* \"#utility.yul\":3106:3118   */\n  add\n    /* \"#utility.yul\":3099:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":2758:3124   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3130:3401   */\ntag_35:\n    /* \"#utility.yul\":3260:3263   */\n  0x00\n    /* \"#utility.yul\":3282:3375   */\n  tag_108\n    /* \"#utility.yul\":3371:3374   */\n  dup3\n    /* \"#utility.yul\":3362:3368   */\n  dup5\n    /* \"#utility.yul\":3282:3375   */\n  tag_81\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":3275:3375   */\n  swap2\n  pop\n    /* \"#utility.yul\":3392:3395   */\n  dup2\n    /* \"#utility.yul\":3385:3395   */\n  swap1\n  pop\n    /* \"#utility.yul\":3130:3401   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3407:3720   */\ntag_49:\n    /* \"#utility.yul\":3520:3524   */\n  0x00\n    /* \"#utility.yul\":3558:3560   */\n  0x20\n    /* \"#utility.yul\":3547:3556   */\n  dup3\n    /* \"#utility.yul\":3543:3561   */\n  add\n    /* \"#utility.yul\":3535:3561   */\n  swap1\n  pop\n    /* \"#utility.yul\":3607:3616   */\n  dup2\n    /* \"#utility.yul\":3601:3605   */\n  dup2\n    /* \"#utility.yul\":3597:3617   */\n  sub\n    /* \"#utility.yul\":3593:3594   */\n  0x00\n    /* \"#utility.yul\":3582:3591   */\n  dup4\n    /* \"#utility.yul\":3578:3595   */\n  add\n    /* \"#utility.yul\":3571:3618   */\n  mstore\n    /* \"#utility.yul\":3635:3713   */\n  tag_110\n    /* \"#utility.yul\":3708:3712   */\n  dup2\n    /* \"#utility.yul\":3699:3705   */\n  dup5\n    /* \"#utility.yul\":3635:3713   */\n  tag_88\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":3627:3713   */\n  swap1\n  pop\n    /* \"#utility.yul\":3407:3720   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3726:4145   */\ntag_26:\n    /* \"#utility.yul\":3892:3896   */\n  0x00\n    /* \"#utility.yul\":3930:3932   */\n  0x20\n    /* \"#utility.yul\":3919:3928   */\n  dup3\n    /* \"#utility.yul\":3915:3933   */\n  add\n    /* \"#utility.yul\":3907:3933   */\n  swap1\n  pop\n    /* \"#utility.yul\":3979:3988   */\n  dup2\n    /* \"#utility.yul\":3973:3977   */\n  dup2\n    /* \"#utility.yul\":3969:3989   */\n  sub\n    /* \"#utility.yul\":3965:3966   */\n  0x00\n    /* \"#utility.yul\":3954:3963   */\n  dup4\n    /* \"#utility.yul\":3950:3967   */\n  add\n    /* \"#utility.yul\":3943:3990   */\n  mstore\n    /* \"#utility.yul\":4007:4138   */\n  tag_112\n    /* \"#utility.yul\":4133:4137   */\n  dup2\n    /* \"#utility.yul\":4007:4138   */\n  tag_97\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":3999:4138   */\n  swap1\n  pop\n    /* \"#utility.yul\":3726:4145   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4151:4570   */\ntag_33:\n    /* \"#utility.yul\":4317:4321   */\n  0x00\n    /* \"#utility.yul\":4355:4357   */\n  0x20\n    /* \"#utility.yul\":4344:4353   */\n  dup3\n    /* \"#utility.yul\":4340:4358   */\n  add\n    /* \"#utility.yul\":4332:4358   */\n  swap1\n  pop\n    /* \"#utility.yul\":4404:4413   */\n  dup2\n    /* \"#utility.yul\":4398:4402   */\n  dup2\n    /* \"#utility.yul\":4394:4414   */\n  sub\n    /* \"#utility.yul\":4390:4391   */\n  0x00\n    /* \"#utility.yul\":4379:4388   */\n  dup4\n    /* \"#utility.yul\":4375:4392   */\n  add\n    /* \"#utility.yul\":4368:4415   */\n  mstore\n    /* \"#utility.yul\":4432:4563   */\n  tag_114\n    /* \"#utility.yul\":4558:4562   */\n  dup2\n    /* \"#utility.yul\":4432:4563   */\n  tag_102\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":4424:4563   */\n  swap1\n  pop\n    /* \"#utility.yul\":4151:4570   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4576:4705   */\ntag_56:\n    /* \"#utility.yul\":4610:4616   */\n  0x00\n    /* \"#utility.yul\":4637:4657   */\n  tag_116\n  tag_117\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":4627:4657   */\n  swap1\n  pop\n    /* \"#utility.yul\":4666:4699   */\n  tag_118\n    /* \"#utility.yul\":4694:4698   */\n  dup3\n    /* \"#utility.yul\":4686:4692   */\n  dup3\n    /* \"#utility.yul\":4666:4699   */\n  tag_119\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":4576:4705   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4711:4786   */\ntag_117:\n    /* \"#utility.yul\":4744:4750   */\n  0x00\n    /* \"#utility.yul\":4777:4779   */\n  0x40\n    /* \"#utility.yul\":4771:4780   */\n  mload\n    /* \"#utility.yul\":4761:4780   */\n  swap1\n  pop\n    /* \"#utility.yul\":4711:4786   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":4792:5099   */\ntag_55:\n    /* \"#utility.yul\":4853:4857   */\n  0x00\n    /* \"#utility.yul\":4943:4961   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4935:4941   */\n  dup3\n    /* \"#utility.yul\":4932:4962   */\n  gt\n    /* \"#utility.yul\":4929:4985   */\n  iszero\n  tag_122\n  jumpi\n    /* \"#utility.yul\":4965:4983   */\n  tag_123\n  tag_124\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":4929:4985   */\ntag_122:\n    /* \"#utility.yul\":5003:5032   */\n  tag_125\n    /* \"#utility.yul\":5025:5031   */\n  dup3\n    /* \"#utility.yul\":5003:5032   */\n  tag_96\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":4995:5032   */\n  swap1\n  pop\n    /* \"#utility.yul\":5087:5091   */\n  0x20\n    /* \"#utility.yul\":5081:5085   */\n  dup2\n    /* \"#utility.yul\":5077:5092   */\n  add\n    /* \"#utility.yul\":5069:5092   */\n  swap1\n  pop\n    /* \"#utility.yul\":4792:5099   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5105:5203   */\ntag_84:\n    /* \"#utility.yul\":5156:5162   */\n  0x00\n    /* \"#utility.yul\":5190:5195   */\n  dup2\n    /* \"#utility.yul\":5184:5196   */\n  mload\n    /* \"#utility.yul\":5174:5196   */\n  swap1\n  pop\n    /* \"#utility.yul\":5105:5203   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5209:5308   */\ntag_91:\n    /* \"#utility.yul\":5261:5267   */\n  0x00\n    /* \"#utility.yul\":5295:5300   */\n  dup2\n    /* \"#utility.yul\":5289:5301   */\n  mload\n    /* \"#utility.yul\":5279:5301   */\n  swap1\n  pop\n    /* \"#utility.yul\":5209:5308   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5314:5461   */\ntag_86:\n    /* \"#utility.yul\":5415:5426   */\n  0x00\n    /* \"#utility.yul\":5452:5455   */\n  dup2\n    /* \"#utility.yul\":5437:5455   */\n  swap1\n  pop\n    /* \"#utility.yul\":5314:5461   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5467:5636   */\ntag_93:\n    /* \"#utility.yul\":5551:5562   */\n  0x00\n    /* \"#utility.yul\":5585:5591   */\n  dup3\n    /* \"#utility.yul\":5580:5583   */\n  dup3\n    /* \"#utility.yul\":5573:5592   */\n  mstore\n    /* \"#utility.yul\":5625:5629   */\n  0x20\n    /* \"#utility.yul\":5620:5623   */\n  dup3\n    /* \"#utility.yul\":5616:5630   */\n  add\n    /* \"#utility.yul\":5601:5630   */\n  swap1\n  pop\n    /* \"#utility.yul\":5467:5636   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5642:5738   */\ntag_130:\n    /* \"#utility.yul\":5679:5686   */\n  0x00\n    /* \"#utility.yul\":5708:5732   */\n  tag_132\n    /* \"#utility.yul\":5726:5731   */\n  dup3\n    /* \"#utility.yul\":5708:5732   */\n  tag_133\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":5697:5732   */\n  swap1\n  pop\n    /* \"#utility.yul\":5642:5738   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5744:5870   */\ntag_133:\n    /* \"#utility.yul\":5781:5788   */\n  0x00\n    /* \"#utility.yul\":5821:5863   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5814:5819   */\n  dup3\n    /* \"#utility.yul\":5810:5864   */\n  and\n    /* \"#utility.yul\":5799:5864   */\n  swap1\n  pop\n    /* \"#utility.yul\":5744:5870   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5876:6183   */\ntag_61:\n    /* \"#utility.yul\":5944:5945   */\n  0x00\n    /* \"#utility.yul\":5954:6067   */\ntag_136:\n    /* \"#utility.yul\":5968:5974   */\n  dup4\n    /* \"#utility.yul\":5965:5966   */\n  dup2\n    /* \"#utility.yul\":5962:5975   */\n  lt\n    /* \"#utility.yul\":5954:6067   */\n  iszero\n  tag_138\n  jumpi\n    /* \"#utility.yul\":6053:6054   */\n  dup1\n    /* \"#utility.yul\":6048:6051   */\n  dup3\n    /* \"#utility.yul\":6044:6055   */\n  add\n    /* \"#utility.yul\":6038:6056   */\n  mload\n    /* \"#utility.yul\":6034:6035   */\n  dup2\n    /* \"#utility.yul\":6029:6032   */\n  dup5\n    /* \"#utility.yul\":6025:6036   */\n  add\n    /* \"#utility.yul\":6018:6057   */\n  mstore\n    /* \"#utility.yul\":5990:5992   */\n  0x20\n    /* \"#utility.yul\":5987:5988   */\n  dup2\n    /* \"#utility.yul\":5983:5993   */\n  add\n    /* \"#utility.yul\":5978:5993   */\n  swap1\n  pop\n    /* \"#utility.yul\":5954:6067   */\n  jump(tag_136)\ntag_138:\n    /* \"#utility.yul\":6085:6091   */\n  dup4\n    /* \"#utility.yul\":6082:6083   */\n  dup2\n    /* \"#utility.yul\":6079:6092   */\n  gt\n    /* \"#utility.yul\":6076:6177   */\n  iszero\n  tag_139\n  jumpi\n    /* \"#utility.yul\":6165:6166   */\n  0x00\n    /* \"#utility.yul\":6156:6162   */\n  dup5\n    /* \"#utility.yul\":6151:6154   */\n  dup5\n    /* \"#utility.yul\":6147:6163   */\n  add\n    /* \"#utility.yul\":6140:6167   */\n  mstore\n    /* \"#utility.yul\":6076:6177   */\ntag_139:\n    /* \"#utility.yul\":5925:6183   */\n  pop\n    /* \"#utility.yul\":5876:6183   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6189:6470   */\ntag_119:\n    /* \"#utility.yul\":6272:6299   */\n  tag_141\n    /* \"#utility.yul\":6294:6298   */\n  dup3\n    /* \"#utility.yul\":6272:6299   */\n  tag_96\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":6264:6270   */\n  dup2\n    /* \"#utility.yul\":6260:6300   */\n  add\n    /* \"#utility.yul\":6402:6408   */\n  dup2\n    /* \"#utility.yul\":6390:6400   */\n  dup2\n    /* \"#utility.yul\":6387:6409   */\n  lt\n    /* \"#utility.yul\":6366:6384   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":6354:6364   */\n  dup3\n    /* \"#utility.yul\":6351:6385   */\n  gt\n    /* \"#utility.yul\":6348:6410   */\n  or\n    /* \"#utility.yul\":6345:6433   */\n  iszero\n  tag_142\n  jumpi\n    /* \"#utility.yul\":6413:6431   */\n  tag_143\n  tag_124\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":6345:6433   */\ntag_142:\n    /* \"#utility.yul\":6453:6463   */\n  dup1\n    /* \"#utility.yul\":6449:6451   */\n  0x40\n    /* \"#utility.yul\":6442:6464   */\n  mstore\n    /* \"#utility.yul\":6232:6470   */\n  pop\n    /* \"#utility.yul\":6189:6470   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6476:6656   */\ntag_124:\n    /* \"#utility.yul\":6524:6601   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":6521:6522   */\n  0x00\n    /* \"#utility.yul\":6514:6602   */\n  mstore\n    /* \"#utility.yul\":6621:6625   */\n  0x41\n    /* \"#utility.yul\":6618:6619   */\n  0x04\n    /* \"#utility.yul\":6611:6626   */\n  mstore\n    /* \"#utility.yul\":6645:6649   */\n  0x24\n    /* \"#utility.yul\":6642:6643   */\n  0x00\n    /* \"#utility.yul\":6635:6650   */\n  revert\n    /* \"#utility.yul\":6662:6779   */\ntag_70:\n    /* \"#utility.yul\":6771:6772   */\n  0x00\n    /* \"#utility.yul\":6768:6769   */\n  dup1\n    /* \"#utility.yul\":6761:6773   */\n  revert\n    /* \"#utility.yul\":6785:6902   */\ntag_59:\n    /* \"#utility.yul\":6894:6895   */\n  0x00\n    /* \"#utility.yul\":6891:6892   */\n  dup1\n    /* \"#utility.yul\":6884:6896   */\n  revert\n    /* \"#utility.yul\":6908:7025   */\ntag_79:\n    /* \"#utility.yul\":7017:7018   */\n  0x00\n    /* \"#utility.yul\":7014:7015   */\n  dup1\n    /* \"#utility.yul\":7007:7019   */\n  revert\n    /* \"#utility.yul\":7031:7148   */\ntag_75:\n    /* \"#utility.yul\":7140:7141   */\n  0x00\n    /* \"#utility.yul\":7137:7138   */\n  dup1\n    /* \"#utility.yul\":7130:7142   */\n  revert\n    /* \"#utility.yul\":7154:7256   */\ntag_96:\n    /* \"#utility.yul\":7195:7201   */\n  0x00\n    /* \"#utility.yul\":7246:7248   */\n  0x1f\n    /* \"#utility.yul\":7242:7249   */\n  not\n    /* \"#utility.yul\":7237:7239   */\n  0x1f\n    /* \"#utility.yul\":7230:7235   */\n  dup4\n    /* \"#utility.yul\":7226:7240   */\n  add\n    /* \"#utility.yul\":7222:7250   */\n  and\n    /* \"#utility.yul\":7212:7250   */\n  swap1\n  pop\n    /* \"#utility.yul\":7154:7256   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7262:7494   */\ntag_101:\n    /* \"#utility.yul\":7402:7436   */\n  0x455243313936373a206e657720696d706c656d656e746174696f6e206973206e\n    /* \"#utility.yul\":7398:7399   */\n  0x00\n    /* \"#utility.yul\":7390:7396   */\n  dup3\n    /* \"#utility.yul\":7386:7400   */\n  add\n    /* \"#utility.yul\":7379:7437   */\n  mstore\n    /* \"#utility.yul\":7471:7486   */\n  0x6f74206120636f6e747261637400000000000000000000000000000000000000\n    /* \"#utility.yul\":7466:7468   */\n  0x20\n    /* \"#utility.yul\":7458:7464   */\n  dup3\n    /* \"#utility.yul\":7454:7469   */\n  add\n    /* \"#utility.yul\":7447:7487   */\n  mstore\n    /* \"#utility.yul\":7262:7494   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7500:7725   */\ntag_106:\n    /* \"#utility.yul\":7640:7674   */\n  0x416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f\n    /* \"#utility.yul\":7636:7637   */\n  0x00\n    /* \"#utility.yul\":7628:7634   */\n  dup3\n    /* \"#utility.yul\":7624:7638   */\n  add\n    /* \"#utility.yul\":7617:7675   */\n  mstore\n    /* \"#utility.yul\":7709:7717   */\n  0x6e74726163740000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":7704:7706   */\n  0x20\n    /* \"#utility.yul\":7696:7702   */\n  dup3\n    /* \"#utility.yul\":7692:7707   */\n  add\n    /* \"#utility.yul\":7685:7718   */\n  mstore\n    /* \"#utility.yul\":7500:7725   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7731:7853   */\ntag_65:\n    /* \"#utility.yul\":7804:7828   */\n  tag_153\n    /* \"#utility.yul\":7822:7827   */\n  dup2\n    /* \"#utility.yul\":7804:7828   */\n  tag_130\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":7797:7802   */\n  dup2\n    /* \"#utility.yul\":7794:7829   */\n  eq\n    /* \"#utility.yul\":7784:7847   */\n  tag_154\n  jumpi\n    /* \"#utility.yul\":7843:7844   */\n  0x00\n    /* \"#utility.yul\":7840:7841   */\n  dup1\n    /* \"#utility.yul\":7833:7845   */\n  revert\n    /* \"#utility.yul\":7784:7847   */\ntag_154:\n    /* \"#utility.yul\":7731:7853   */\n  pop\n  jump\t// out\n    /* \"contracts/MyTokenProxy.sol\":175:942  contract MyTokenProxy is Proxy, ERC1967Upgrade {... */\ntag_7:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398 416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564\n\nsub_0: assembly {\n        /* \"contracts/MyTokenProxy.sol\":175:942  contract MyTokenProxy is Proxy, ERC1967Upgrade {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_2, calldatasize)\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2898:2909  _fallback() */\n      tag_5\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2898:2907  _fallback */\n      tag_6\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2898:2909  _fallback() */\n      jump\t// in\n    tag_5:\n        /* \"contracts/MyTokenProxy.sol\":175:942  contract MyTokenProxy is Proxy, ERC1967Upgrade {... */\n      stop\n    tag_2:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2675:2686  _fallback() */\n      tag_9\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2675:2684  _fallback */\n      tag_6\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2675:2686  _fallback() */\n      jump\t// in\n    tag_9:\n        /* \"contracts/MyTokenProxy.sol\":175:942  contract MyTokenProxy is Proxy, ERC1967Upgrade {... */\n      stop\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2322:2432  function _fallback() internal virtual {... */\n    tag_6:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2370:2387  _beforeFallback() */\n      tag_14\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2370:2385  _beforeFallback */\n      tag_15\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2370:2387  _beforeFallback() */\n      jump\t// in\n    tag_14:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2397:2425  _delegate(_implementation()) */\n      tag_16\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2407:2424  _implementation() */\n      tag_17\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2407:2422  _implementation */\n      tag_18\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2407:2424  _implementation() */\n      jump\t// in\n    tag_17:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2397:2406  _delegate */\n      tag_19\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2397:2425  _delegate(_implementation()) */\n      jump\t// in\n    tag_16:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2322:2432  function _fallback() internal virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6570:6768  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_10:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6653:6665  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6684:6761  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      tag_21\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6705:6711  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6713:6717  data */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6684:6761  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x27\n      dup2\n      mstore\n      0x20\n      add\n      data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398\n      0x27\n      swap2\n      codecopy\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6684:6704  functionDelegateCall */\n      tag_22\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6684:6761  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      jump\t// in\n    tag_21:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6677:6761  return functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6570:6768  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n    tag_11:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1235:1239  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1487:1488  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1472  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1458:1488  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1614:1804  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n    tag_12:\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1675:1696  AddressSlot storage r */\n      0x00\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1784:1788  slot */\n      dup2\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1774:1788  r.slot := slot */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1614:1804  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":3198:3244  function _beforeFallback() internal virtual {} */\n    tag_15:\n      jump\t// out\n        /* \"contracts/MyTokenProxy.sol\":756:940  function _implementation()... */\n    tag_18:\n        /* \"contracts/MyTokenProxy.sol\":863:875  address impl */\n      0x00\n        /* \"contracts/MyTokenProxy.sol\":898:933  ERC1967Upgrade._getImplementation() */\n      tag_27\n        /* \"contracts/MyTokenProxy.sol\":898:931  ERC1967Upgrade._getImplementation */\n      tag_28\n        /* \"contracts/MyTokenProxy.sol\":898:933  ERC1967Upgrade._getImplementation() */\n      jump\t// in\n    tag_27:\n        /* \"contracts/MyTokenProxy.sol\":891:933  return ERC1967Upgrade._getImplementation() */\n      swap1\n      pop\n        /* \"contracts/MyTokenProxy.sol\":756:940  function _implementation()... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":948:1843  function _delegate(address implementation) internal virtual {... */\n    tag_19:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1286:1300  calldatasize() */\n      calldatasize\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1283:1284  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1280:1281  0 */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1267:1301  calldatacopy(0, 0, calldatasize()) */\n      calldatacopy\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1500:1501  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1497:1498  0 */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1481:1495  calldatasize() */\n      calldatasize\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1478:1479  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1462:1476  implementation */\n      dup5\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1455:1460  gas() */\n      gas\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1442:1502  delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) */\n      delegatecall\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1576:1592  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1573:1574  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1570:1571  0 */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1555:1593  returndatacopy(0, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1614:1620  result */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1686:1687  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1681:1747  case 0 {... */\n      dup2\n      eq\n      tag_31\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1796:1812  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1793:1794  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1786:1813  return(0, returndatasize()) */\n      return\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1681:1747  case 0 {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1716:1732  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1713:1714  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1706:1733  revert(0, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6954:7341  function functionDelegateCall(... */\n    tag_22:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7095:7107  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7127:7145  isContract(target) */\n      tag_33\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7138:7144  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7127:7137  isContract */\n      tag_11\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7127:7145  isContract(target) */\n      jump\t// in\n    tag_33:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7119:7188  require(isContract(target), \"Address: delegate call to non-contract\") */\n      tag_34\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_35\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_34:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7200:7212  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7214:7237  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7241:7247  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7241:7260  target.delegatecall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7261:7265  data */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7241:7266  target.delegatecall(data) */\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_41\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_40)\n    tag_41:\n      0x60\n      swap2\n      pop\n    tag_40:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7199:7266  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7283:7334  verifyCallResult(success, returndata, errorMessage) */\n      tag_42\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7300:7307  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7309:7319  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7321:7333  errorMessage */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7283:7299  verifyCallResult */\n      tag_43\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7283:7334  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_42:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7276:7334  return verifyCallResult(success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6954:7341  function functionDelegateCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1301:1441  function _getImplementation() internal view returns (address) {... */\n    tag_28:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1354:1361  address */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1380:1428  StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT) */\n      tag_45\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1030:1096  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1407:1427  _IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1380:1406  StorageSlot.getAddressSlot */\n      tag_12\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1380:1428  StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT) */\n      jump\t// in\n    tag_45:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1380:1434  StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1373:1434  return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1301:1441  function _getImplementation() internal view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7561:8303  function verifyCallResult(... */\n    tag_43:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7707:7719  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7735:7742  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8297  if (success) {... */\n      iszero\n      tag_47\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7765:7775  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7758:7775  return returndata */\n      swap1\n      pop\n      jump(tag_46)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8297  if (success) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7896:7897  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7886  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7893  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7897  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8287  if (returndata.length > 0) {... */\n      iszero\n      tag_49\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8120:8130  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8114:8131  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8180:8195  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8167:8177  returndata */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8163:8165  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8159:8178  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8152:8196  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8287  if (returndata.length > 0) {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8259:8271  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8252:8272  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7561:8303  function verifyCallResult(... */\n    tag_46:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:380   */\n    tag_54:\n        /* \"#utility.yul\":111:114   */\n      0x00\n        /* \"#utility.yul\":139:177   */\n      tag_56\n        /* \"#utility.yul\":171:176   */\n      dup3\n        /* \"#utility.yul\":139:177   */\n      tag_57\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":193:281   */\n      tag_58\n        /* \"#utility.yul\":274:280   */\n      dup2\n        /* \"#utility.yul\":269:272   */\n      dup6\n        /* \"#utility.yul\":193:281   */\n      tag_59\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":186:281   */\n      swap4\n      pop\n        /* \"#utility.yul\":290:342   */\n      tag_60\n        /* \"#utility.yul\":335:341   */\n      dup2\n        /* \"#utility.yul\":330:333   */\n      dup6\n        /* \"#utility.yul\":323:327   */\n      0x20\n        /* \"#utility.yul\":316:321   */\n      dup7\n        /* \"#utility.yul\":312:328   */\n      add\n        /* \"#utility.yul\":290:342   */\n      tag_61\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":367:373   */\n      dup1\n        /* \"#utility.yul\":362:365   */\n      dup5\n        /* \"#utility.yul\":358:374   */\n      add\n        /* \"#utility.yul\":351:374   */\n      swap2\n      pop\n        /* \"#utility.yul\":115:380   */\n      pop\n        /* \"#utility.yul\":7:380   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":386:750   */\n    tag_62:\n        /* \"#utility.yul\":474:477   */\n      0x00\n        /* \"#utility.yul\":502:541   */\n      tag_64\n        /* \"#utility.yul\":535:540   */\n      dup3\n        /* \"#utility.yul\":502:541   */\n      tag_65\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":557:628   */\n      tag_66\n        /* \"#utility.yul\":621:627   */\n      dup2\n        /* \"#utility.yul\":616:619   */\n      dup6\n        /* \"#utility.yul\":557:628   */\n      tag_67\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":550:628   */\n      swap4\n      pop\n        /* \"#utility.yul\":637:689   */\n      tag_68\n        /* \"#utility.yul\":682:688   */\n      dup2\n        /* \"#utility.yul\":677:680   */\n      dup6\n        /* \"#utility.yul\":670:674   */\n      0x20\n        /* \"#utility.yul\":663:668   */\n      dup7\n        /* \"#utility.yul\":659:675   */\n      add\n        /* \"#utility.yul\":637:689   */\n      tag_61\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":714:743   */\n      tag_69\n        /* \"#utility.yul\":736:742   */\n      dup2\n        /* \"#utility.yul\":714:743   */\n      tag_70\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":709:712   */\n      dup5\n        /* \"#utility.yul\":705:744   */\n      add\n        /* \"#utility.yul\":698:744   */\n      swap2\n      pop\n        /* \"#utility.yul\":478:750   */\n      pop\n        /* \"#utility.yul\":386:750   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":756:1122   */\n    tag_71:\n        /* \"#utility.yul\":898:901   */\n      0x00\n        /* \"#utility.yul\":919:986   */\n      tag_73\n        /* \"#utility.yul\":983:985   */\n      0x26\n        /* \"#utility.yul\":978:981   */\n      dup4\n        /* \"#utility.yul\":919:986   */\n      tag_67\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":912:986   */\n      swap2\n      pop\n        /* \"#utility.yul\":995:1088   */\n      tag_74\n        /* \"#utility.yul\":1084:1087   */\n      dup3\n        /* \"#utility.yul\":995:1088   */\n      tag_75\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":1113:1115   */\n      0x40\n        /* \"#utility.yul\":1108:1111   */\n      dup3\n        /* \"#utility.yul\":1104:1116   */\n      add\n        /* \"#utility.yul\":1097:1116   */\n      swap1\n      pop\n        /* \"#utility.yul\":756:1122   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1128:1399   */\n    tag_38:\n        /* \"#utility.yul\":1258:1261   */\n      0x00\n        /* \"#utility.yul\":1280:1373   */\n      tag_77\n        /* \"#utility.yul\":1369:1372   */\n      dup3\n        /* \"#utility.yul\":1360:1366   */\n      dup5\n        /* \"#utility.yul\":1280:1373   */\n      tag_54\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":1273:1373   */\n      swap2\n      pop\n        /* \"#utility.yul\":1390:1393   */\n      dup2\n        /* \"#utility.yul\":1383:1393   */\n      swap1\n      pop\n        /* \"#utility.yul\":1128:1399   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1405:1718   */\n    tag_52:\n        /* \"#utility.yul\":1518:1522   */\n      0x00\n        /* \"#utility.yul\":1556:1558   */\n      0x20\n        /* \"#utility.yul\":1545:1554   */\n      dup3\n        /* \"#utility.yul\":1541:1559   */\n      add\n        /* \"#utility.yul\":1533:1559   */\n      swap1\n      pop\n        /* \"#utility.yul\":1605:1614   */\n      dup2\n        /* \"#utility.yul\":1599:1603   */\n      dup2\n        /* \"#utility.yul\":1595:1615   */\n      sub\n        /* \"#utility.yul\":1591:1592   */\n      0x00\n        /* \"#utility.yul\":1580:1589   */\n      dup4\n        /* \"#utility.yul\":1576:1593   */\n      add\n        /* \"#utility.yul\":1569:1616   */\n      mstore\n        /* \"#utility.yul\":1633:1711   */\n      tag_79\n        /* \"#utility.yul\":1706:1710   */\n      dup2\n        /* \"#utility.yul\":1697:1703   */\n      dup5\n        /* \"#utility.yul\":1633:1711   */\n      tag_62\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":1625:1711   */\n      swap1\n      pop\n        /* \"#utility.yul\":1405:1718   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1724:2143   */\n    tag_36:\n        /* \"#utility.yul\":1890:1894   */\n      0x00\n        /* \"#utility.yul\":1928:1930   */\n      0x20\n        /* \"#utility.yul\":1917:1926   */\n      dup3\n        /* \"#utility.yul\":1913:1931   */\n      add\n        /* \"#utility.yul\":1905:1931   */\n      swap1\n      pop\n        /* \"#utility.yul\":1977:1986   */\n      dup2\n        /* \"#utility.yul\":1971:1975   */\n      dup2\n        /* \"#utility.yul\":1967:1987   */\n      sub\n        /* \"#utility.yul\":1963:1964   */\n      0x00\n        /* \"#utility.yul\":1952:1961   */\n      dup4\n        /* \"#utility.yul\":1948:1965   */\n      add\n        /* \"#utility.yul\":1941:1988   */\n      mstore\n        /* \"#utility.yul\":2005:2136   */\n      tag_81\n        /* \"#utility.yul\":2131:2135   */\n      dup2\n        /* \"#utility.yul\":2005:2136   */\n      tag_71\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":1997:2136   */\n      swap1\n      pop\n        /* \"#utility.yul\":1724:2143   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2149:2247   */\n    tag_57:\n        /* \"#utility.yul\":2200:2206   */\n      0x00\n        /* \"#utility.yul\":2234:2239   */\n      dup2\n        /* \"#utility.yul\":2228:2240   */\n      mload\n        /* \"#utility.yul\":2218:2240   */\n      swap1\n      pop\n        /* \"#utility.yul\":2149:2247   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2253:2352   */\n    tag_65:\n        /* \"#utility.yul\":2305:2311   */\n      0x00\n        /* \"#utility.yul\":2339:2344   */\n      dup2\n        /* \"#utility.yul\":2333:2345   */\n      mload\n        /* \"#utility.yul\":2323:2345   */\n      swap1\n      pop\n        /* \"#utility.yul\":2253:2352   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2358:2505   */\n    tag_59:\n        /* \"#utility.yul\":2459:2470   */\n      0x00\n        /* \"#utility.yul\":2496:2499   */\n      dup2\n        /* \"#utility.yul\":2481:2499   */\n      swap1\n      pop\n        /* \"#utility.yul\":2358:2505   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2511:2680   */\n    tag_67:\n        /* \"#utility.yul\":2595:2606   */\n      0x00\n        /* \"#utility.yul\":2629:2635   */\n      dup3\n        /* \"#utility.yul\":2624:2627   */\n      dup3\n        /* \"#utility.yul\":2617:2636   */\n      mstore\n        /* \"#utility.yul\":2669:2673   */\n      0x20\n        /* \"#utility.yul\":2664:2667   */\n      dup3\n        /* \"#utility.yul\":2660:2674   */\n      add\n        /* \"#utility.yul\":2645:2674   */\n      swap1\n      pop\n        /* \"#utility.yul\":2511:2680   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2686:2993   */\n    tag_61:\n        /* \"#utility.yul\":2754:2755   */\n      0x00\n        /* \"#utility.yul\":2764:2877   */\n    tag_87:\n        /* \"#utility.yul\":2778:2784   */\n      dup4\n        /* \"#utility.yul\":2775:2776   */\n      dup2\n        /* \"#utility.yul\":2772:2785   */\n      lt\n        /* \"#utility.yul\":2764:2877   */\n      iszero\n      tag_89\n      jumpi\n        /* \"#utility.yul\":2863:2864   */\n      dup1\n        /* \"#utility.yul\":2858:2861   */\n      dup3\n        /* \"#utility.yul\":2854:2865   */\n      add\n        /* \"#utility.yul\":2848:2866   */\n      mload\n        /* \"#utility.yul\":2844:2845   */\n      dup2\n        /* \"#utility.yul\":2839:2842   */\n      dup5\n        /* \"#utility.yul\":2835:2846   */\n      add\n        /* \"#utility.yul\":2828:2867   */\n      mstore\n        /* \"#utility.yul\":2800:2802   */\n      0x20\n        /* \"#utility.yul\":2797:2798   */\n      dup2\n        /* \"#utility.yul\":2793:2803   */\n      add\n        /* \"#utility.yul\":2788:2803   */\n      swap1\n      pop\n        /* \"#utility.yul\":2764:2877   */\n      jump(tag_87)\n    tag_89:\n        /* \"#utility.yul\":2895:2901   */\n      dup4\n        /* \"#utility.yul\":2892:2893   */\n      dup2\n        /* \"#utility.yul\":2889:2902   */\n      gt\n        /* \"#utility.yul\":2886:2987   */\n      iszero\n      tag_90\n      jumpi\n        /* \"#utility.yul\":2975:2976   */\n      0x00\n        /* \"#utility.yul\":2966:2972   */\n      dup5\n        /* \"#utility.yul\":2961:2964   */\n      dup5\n        /* \"#utility.yul\":2957:2973   */\n      add\n        /* \"#utility.yul\":2950:2977   */\n      mstore\n        /* \"#utility.yul\":2886:2987   */\n    tag_90:\n        /* \"#utility.yul\":2735:2993   */\n      pop\n        /* \"#utility.yul\":2686:2993   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2999:3101   */\n    tag_70:\n        /* \"#utility.yul\":3040:3046   */\n      0x00\n        /* \"#utility.yul\":3091:3093   */\n      0x1f\n        /* \"#utility.yul\":3087:3094   */\n      not\n        /* \"#utility.yul\":3082:3084   */\n      0x1f\n        /* \"#utility.yul\":3075:3080   */\n      dup4\n        /* \"#utility.yul\":3071:3085   */\n      add\n        /* \"#utility.yul\":3067:3095   */\n      and\n        /* \"#utility.yul\":3057:3095   */\n      swap1\n      pop\n        /* \"#utility.yul\":2999:3101   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3107:3332   */\n    tag_75:\n        /* \"#utility.yul\":3247:3281   */\n      0x416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f\n        /* \"#utility.yul\":3243:3244   */\n      0x00\n        /* \"#utility.yul\":3235:3241   */\n      dup3\n        /* \"#utility.yul\":3231:3245   */\n      add\n        /* \"#utility.yul\":3224:3282   */\n      mstore\n        /* \"#utility.yul\":3316:3324   */\n      0x6e74726163740000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3311:3313   */\n      0x20\n        /* \"#utility.yul\":3303:3309   */\n      dup3\n        /* \"#utility.yul\":3299:3314   */\n      add\n        /* \"#utility.yul\":3292:3325   */\n      mstore\n        /* \"#utility.yul\":3107:3332   */\n      pop\n      jump\t// out\n    stop\n    data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398 416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564\n\n    auxdata: 0xa26469706673582212207b30847ed0cc4b1818e297a773da5a21b9d1d00bb609df74b2ee14e9fb8398c864736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_767": {
									"entryPoint": null,
									"id": 767,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_setImplementation_65": {
									"entryPoint": 277,
									"id": 65,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_upgradeToAndCall_110": {
									"entryPoint": 69,
									"id": 110,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_upgradeTo_80": {
									"entryPoint": 136,
									"id": 80,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@functionDelegateCall_617": {
									"entryPoint": 223,
									"id": 617,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@functionDelegateCall_652": {
									"entryPoint": 491,
									"id": 652,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getAddressSlot_710": {
									"entryPoint": 754,
									"id": 710,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isContract_407": {
									"entryPoint": 719,
									"id": 407,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@verifyCallResult_683": {
									"entryPoint": 764,
									"id": 683,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr_fromMemory": {
									"entryPoint": 872,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 947,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr_fromMemory": {
									"entryPoint": 970,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory": {
									"entryPoint": 1021,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 1123,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1178,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1243,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1282,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1321,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1346,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1382,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1416,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1450,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1481,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 1491,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 1545,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1556,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 1567,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1578,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1595,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1615,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 1647,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 1701,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1755,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1802,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1807,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1812,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1817,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1822,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65": {
									"entryPoint": 1839,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520": {
									"entryPoint": 1918,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1997,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7856:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "101:325:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "111:74:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "177:6:7"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "136:40:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "136:48:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "120:15:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:65:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "111:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "201:5:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "208:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "194:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "194:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "194:21:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "224:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "239:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "246:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "235:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "235:16:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "228:3:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "289:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "291:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "291:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "291:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "270:3:7"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "275:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "266:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "266:16:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "284:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "263:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "263:25:7"
															},
															"nodeType": "YulIf",
															"src": "260:112:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "403:3:7"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "408:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "413:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "381:21:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "381:39:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "381:39:7"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "74:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "79:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "87:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "95:5:7",
														"type": ""
													}
												],
												"src": "7:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "495:80:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "505:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "520:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "514:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "514:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "505:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "563:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "536:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "536:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "536:33:7"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "473:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "481:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "489:5:7",
														"type": ""
													}
												],
												"src": "432:143:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:281:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "715:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "717:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "717:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "717:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "694:6:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "702:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "690:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "690:17:7"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "709:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "686:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "686:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "679:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "679:35:7"
															},
															"nodeType": "YulIf",
															"src": "676:122:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "807:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "827:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "821:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "821:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "811:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "843:98:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "914:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "922:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "910:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "910:17:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "929:6:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "937:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "852:57:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "852:89:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "843:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "660:5:7",
														"type": ""
													}
												],
												"src": "594:353:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1056:575:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1102:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1104:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1104:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1104:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1077:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1086:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1073:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1073:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1098:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1069:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1069:32:7"
															},
															"nodeType": "YulIf",
															"src": "1066:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "1195:128:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1210:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1224:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1214:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1239:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1285:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1296:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1281:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1281:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1305:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1249:31:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1249:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1239:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1333:291:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1348:39:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1372:9:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1383:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1368:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1368:18:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1362:5:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1362:25:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1352:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1434:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "1436:77:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1436:79:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1436:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1406:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1414:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1403:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1403:30:7"
																	},
																	"nodeType": "YulIf",
																	"src": "1400:117:7"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1531:83:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1586:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1597:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1582:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1582:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1606:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1541:40:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1541:73:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1531:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1018:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1029:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1041:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1049:6:7",
														"type": ""
													}
												],
												"src": "953:678:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1745:265:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1755:52:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1801:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1769:31:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1769:38:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1759:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1816:95:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1899:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1904:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1823:75:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1823:88:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1816:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1946:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1953:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1942:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1942:16:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1960:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1965:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1920:21:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1920:52:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1920:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1981:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1992:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1997:6:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1988:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1988:16:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1981:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1726:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1733:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1741:3:7",
														"type": ""
													}
												],
												"src": "1637:373:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2108:272:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2118:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2132:32:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2132:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2122:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2180:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2246:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2251:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2187:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2187:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2180:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2293:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2300:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2289:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2289:16:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2307:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2312:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2267:21:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2267:52:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2267:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2328:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2339:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2366:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2344:21:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2344:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2335:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2335:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2328:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2089:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2096:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2104:3:7",
														"type": ""
													}
												],
												"src": "2016:364:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2532:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2542:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2608:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2613:2:7",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2549:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2549:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2542:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2714:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65",
																	"nodeType": "YulIdentifier",
																	"src": "2625:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2625:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2625:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2727:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2738:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2743:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2734:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2734:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2727:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2520:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2528:3:7",
														"type": ""
													}
												],
												"src": "2386:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2904:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2914:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2980:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2985:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2921:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2921:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2914:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3086:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																	"nodeType": "YulIdentifier",
																	"src": "2997:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2997:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2997:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3099:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3110:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3115:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3106:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3106:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3099:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2892:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2900:3:7",
														"type": ""
													}
												],
												"src": "2758:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3264:137:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3275:100:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3362:6:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3371:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3282:79:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3282:93:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3275:3:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3385:10:7",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "3392:3:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3385:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3243:3:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3249:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3260:3:7",
														"type": ""
													}
												],
												"src": "3130:271:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3525:195:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3535:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3547:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3558:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3543:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3543:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3535:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3582:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3593:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3578:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3578:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3601:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3607:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3597:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3597:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3571:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3571:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3571:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3627:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3699:6:7"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3708:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3635:63:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3635:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3627:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3497:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3509:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3520:4:7",
														"type": ""
													}
												],
												"src": "3407:313:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3897:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3907:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3919:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3930:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3915:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3915:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3907:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3954:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3965:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3950:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3950:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3973:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3979:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3969:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3969:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3943:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3943:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3943:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3999:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4133:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4007:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4007:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3999:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3877:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3892:4:7",
														"type": ""
													}
												],
												"src": "3726:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4322:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4332:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4344:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4355:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4340:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4340:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4332:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4379:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4390:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4375:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4375:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4398:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4404:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4394:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4394:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4368:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4368:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4368:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4424:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4558:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4432:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4432:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4424:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4302:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4317:4:7",
														"type": ""
													}
												],
												"src": "4151:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4617:88:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4627:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "4637:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4637:20:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "4627:6:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4686:6:7"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "4694:4:7"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "4666:19:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4666:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4666:33:7"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "4601:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4610:6:7",
														"type": ""
													}
												],
												"src": "4576:129:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4751:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4761:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4777:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4771:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4771:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "4761:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4744:6:7",
														"type": ""
													}
												],
												"src": "4711:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4858:241:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4963:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4965:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4965:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4965:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4935:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4943:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4932:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4932:30:7"
															},
															"nodeType": "YulIf",
															"src": "4929:56:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4995:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5025:6:7"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "5003:21:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5003:29:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "4995:4:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5069:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "5081:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5087:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5077:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5077:15:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "5069:4:7"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4842:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "4853:4:7",
														"type": ""
													}
												],
												"src": "4792:307:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5163:40:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5174:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5190:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5184:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5184:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5174:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5146:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5156:6:7",
														"type": ""
													}
												],
												"src": "5105:98:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5268:40:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5279:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5295:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5289:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5289:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5279:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5251:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5261:6:7",
														"type": ""
													}
												],
												"src": "5209:99:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5427:34:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5437:18:7",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "5452:3:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "5437:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5399:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5404:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "5415:11:7",
														"type": ""
													}
												],
												"src": "5314:147:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5563:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5580:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5585:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5573:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5573:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5573:19:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5601:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5620:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5625:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5616:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5616:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "5601:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5535:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5540:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "5551:11:7",
														"type": ""
													}
												],
												"src": "5467:169:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5687:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5697:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5726:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5708:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5708:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5697:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5669:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5679:7:7",
														"type": ""
													}
												],
												"src": "5642:96:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5789:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5799:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5814:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5821:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5810:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5810:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5799:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5771:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5781:7:7",
														"type": ""
													}
												],
												"src": "5744:126:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5925:258:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5935:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5944:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "5939:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6004:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "6029:3:7"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "6034:1:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6025:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6025:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "6048:3:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "6053:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6044:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6044:11:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "6038:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6038:18:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6018:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6018:39:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6018:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5965:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5968:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5962:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5962:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5976:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5978:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "5987:1:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5990:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5983:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5983:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "5978:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5958:3:7",
																"statements": []
															},
															"src": "5954:113:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6101:76:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "6151:3:7"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "6156:6:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6147:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6147:16:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6165:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6140:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6140:27:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6140:27:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6082:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6085:6:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6079:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6079:13:7"
															},
															"nodeType": "YulIf",
															"src": "6076:101:7"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "5907:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "5912:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5917:6:7",
														"type": ""
													}
												],
												"src": "5876:307:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6232:238:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6242:58:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "6264:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "6294:4:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "6272:21:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6272:27:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6260:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6260:40:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "6246:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6411:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "6413:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6413:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6413:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "6354:10:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6366:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6351:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6351:34:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "6390:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6402:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6387:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6387:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6348:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6348:62:7"
															},
															"nodeType": "YulIf",
															"src": "6345:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6449:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "6453:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6442:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6442:22:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6442:22:7"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6218:6:7",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "6226:4:7",
														"type": ""
													}
												],
												"src": "6189:281:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6504:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6521:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6524:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6514:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6514:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6514:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6618:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6621:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6611:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6611:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6611:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6642:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6645:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6635:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6635:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6635:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "6476:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6751:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6768:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6771:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6761:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6761:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6761:12:7"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "6662:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6874:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6891:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6894:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6884:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6884:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6884:12:7"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "6785:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6997:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7014:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7017:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7007:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7007:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7007:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "6908:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7120:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7137:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7140:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7130:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7130:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7130:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "7031:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7202:54:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7212:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7230:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7237:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7226:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7226:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7246:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "7242:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7242:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7222:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7222:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "7212:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7185:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "7195:6:7",
														"type": ""
													}
												],
												"src": "7154:102:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7368:126:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7390:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7398:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7386:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7386:14:7"
																	},
																	{
																		"hexValue": "455243313936373a206e657720696d706c656d656e746174696f6e206973206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7402:34:7",
																		"type": "",
																		"value": "ERC1967: new implementation is n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7379:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7379:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7379:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7458:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7466:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7454:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7454:15:7"
																	},
																	{
																		"hexValue": "6f74206120636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7471:15:7",
																		"type": "",
																		"value": "ot a contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7447:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7447:40:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7447:40:7"
														}
													]
												},
												"name": "store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7360:6:7",
														"type": ""
													}
												],
												"src": "7262:232:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7606:119:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7628:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7636:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7624:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7624:14:7"
																	},
																	{
																		"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7640:34:7",
																		"type": "",
																		"value": "Address: delegate call to non-co"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7617:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7617:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7617:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7696:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7704:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7692:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7692:15:7"
																	},
																	{
																		"hexValue": "6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7709:8:7",
																		"type": "",
																		"value": "ntract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7685:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7685:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7685:33:7"
														}
													]
												},
												"name": "store_literal_in_memory_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7598:6:7",
														"type": ""
													}
												],
												"src": "7500:225:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7774:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7831:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7840:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7843:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7833:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7833:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7833:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7797:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7822:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "7804:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7804:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7794:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7794:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7787:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7787:43:7"
															},
															"nodeType": "YulIf",
															"src": "7784:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7767:5:7",
														"type": ""
													}
												],
												"src": "7731:122:7"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_bytes_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1967: new implementation is n\")\n\n        mstore(add(memPtr, 32), \"ot a contract\")\n\n    }\n\n    function store_literal_in_memory_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: delegate call to non-co\")\n\n        mstore(add(memPtr, 32), \"ntract\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405260405162000c7938038062000c798339818101604052810190620000299190620003fd565b6200003d828260006200004560201b60201c565b5050620007e7565b62000056836200008860201b60201c565b600082511180620000645750805b156200008357620000818383620000df60201b620000371760201c565b505b505050565b62000099816200011560201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b60606200010d838360405180606001604052806027815260200162000c5260279139620001eb60201b60201c565b905092915050565b6200012b81620002cf60201b620000641760201c565b6200016d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001649062000566565b60405180910390fd5b80620001a77f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b620002f260201b620000871760201c565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6060620001fe84620002cf60201b60201c565b62000240576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002379062000588565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff16856040516200026a919062000529565b600060405180830381855af49150503d8060008114620002a7576040519150601f19603f3d011682016040523d82523d6000602084013e620002ac565b606091505b5091509150620002c4828286620002fc60201b60201c565b925050509392505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000819050919050565b606083156200030e5782905062000361565b600083511115620003225782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000358919062000542565b60405180910390fd5b9392505050565b60006200037f6200037984620005d3565b620005aa565b9050828152602081018484840111156200039e576200039d6200070f565b5b620003ab8482856200066f565b509392505050565b600081519050620003c481620007cd565b92915050565b600082601f830112620003e257620003e16200070a565b5b8151620003f484826020860162000368565b91505092915050565b6000806040838503121562000417576200041662000719565b5b60006200042785828601620003b3565b925050602083015167ffffffffffffffff8111156200044b576200044a62000714565b5b6200045985828601620003ca565b9150509250929050565b6000620004708262000609565b6200047c81856200061f565b93506200048e8185602086016200066f565b80840191505092915050565b6000620004a78262000614565b620004b381856200062a565b9350620004c58185602086016200066f565b620004d0816200071e565b840191505092915050565b6000620004ea602d836200062a565b9150620004f7826200072f565b604082019050919050565b6000620005116026836200062a565b91506200051e826200077e565b604082019050919050565b600062000537828462000463565b915081905092915050565b600060208201905081810360008301526200055e81846200049a565b905092915050565b600060208201905081810360008301526200058181620004db565b9050919050565b60006020820190508181036000830152620005a38162000502565b9050919050565b6000620005b6620005c9565b9050620005c48282620006a5565b919050565b6000604051905090565b600067ffffffffffffffff821115620005f157620005f0620006db565b5b620005fc826200071e565b9050602081019050919050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b600062000648826200064f565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b838110156200068f57808201518184015260208101905062000672565b838111156200069f576000848401525b50505050565b620006b0826200071e565b810181811067ffffffffffffffff82111715620006d257620006d1620006db565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60008201527f6f74206120636f6e747261637400000000000000000000000000000000000000602082015250565b7f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60008201527f6e74726163740000000000000000000000000000000000000000000000000000602082015250565b620007d8816200063b565b8114620007e457600080fd5b50565b61045b80620007f76000396000f3fe6080604052366100135761001161001d565b005b61001b61001d565b005b610025610091565b610035610030610093565b6100a2565b565b606061005c83836040518060600160405280602781526020016103ff602791396100c8565b905092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000819050919050565b565b600061009d610195565b905090565b3660008037600080366000845af43d6000803e80600081146100c3573d6000f35b3d6000fd5b60606100d384610064565b610112576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161010990610319565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff168560405161013a91906102e0565b600060405180830381855af49150503d8060008114610175576040519150601f19603f3d011682016040523d82523d6000602084013e61017a565b606091505b509150915061018a8282866101ec565b925050509392505050565b60006101c37f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b610087565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606083156101fc5782905061024c565b60008351111561020f5782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024391906102f7565b60405180910390fd5b9392505050565b600061025e82610339565b610268818561034f565b935061027881856020860161036b565b80840191505092915050565b600061028f82610344565b610299818561035a565b93506102a981856020860161036b565b6102b28161039e565b840191505092915050565b60006102ca60268361035a565b91506102d5826103af565b604082019050919050565b60006102ec8284610253565b915081905092915050565b600060208201905081810360008301526103118184610284565b905092915050565b60006020820190508181036000830152610332816102bd565b9050919050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60005b8381101561038957808201518184015260208101905061036e565b83811115610398576000848401525b50505050565b6000601f19601f8301169050919050565b7f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60008201527f6e7472616374000000000000000000000000000000000000000000000000000060208201525056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212207b30847ed0cc4b1818e297a773da5a21b9d1d00bb609df74b2ee14e9fb8398c864736f6c63430008070033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH3 0xC79 CODESIZE SUB DUP1 PUSH3 0xC79 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x29 SWAP2 SWAP1 PUSH3 0x3FD JUMP JUMPDEST PUSH3 0x3D DUP3 DUP3 PUSH1 0x0 PUSH3 0x45 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH3 0x7E7 JUMP JUMPDEST PUSH3 0x56 DUP4 PUSH3 0x88 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH3 0x64 JUMPI POP DUP1 JUMPDEST ISZERO PUSH3 0x83 JUMPI PUSH3 0x81 DUP4 DUP4 PUSH3 0xDF PUSH1 0x20 SHL PUSH3 0x37 OR PUSH1 0x20 SHR JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH3 0x99 DUP2 PUSH3 0x115 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH3 0x10D DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0xC52 PUSH1 0x27 SWAP2 CODECOPY PUSH3 0x1EB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x12B DUP2 PUSH3 0x2CF PUSH1 0x20 SHL PUSH3 0x64 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x16D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x164 SWAP1 PUSH3 0x566 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH3 0x1A7 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH3 0x2F2 PUSH1 0x20 SHL PUSH3 0x87 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH3 0x1FE DUP5 PUSH3 0x2CF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x240 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x237 SWAP1 PUSH3 0x588 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD PUSH3 0x26A SWAP2 SWAP1 PUSH3 0x529 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH3 0x2A7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH3 0x2AC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH3 0x2C4 DUP3 DUP3 DUP7 PUSH3 0x2FC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH3 0x30E JUMPI DUP3 SWAP1 POP PUSH3 0x361 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH3 0x322 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x358 SWAP2 SWAP1 PUSH3 0x542 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x37F PUSH3 0x379 DUP5 PUSH3 0x5D3 JUMP JUMPDEST PUSH3 0x5AA JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x39E JUMPI PUSH3 0x39D PUSH3 0x70F JUMP JUMPDEST JUMPDEST PUSH3 0x3AB DUP5 DUP3 DUP6 PUSH3 0x66F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x3C4 DUP2 PUSH3 0x7CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x3E2 JUMPI PUSH3 0x3E1 PUSH3 0x70A JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x3F4 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x368 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x417 JUMPI PUSH3 0x416 PUSH3 0x719 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x427 DUP6 DUP3 DUP7 ADD PUSH3 0x3B3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x44B JUMPI PUSH3 0x44A PUSH3 0x714 JUMP JUMPDEST JUMPDEST PUSH3 0x459 DUP6 DUP3 DUP7 ADD PUSH3 0x3CA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x470 DUP3 PUSH3 0x609 JUMP JUMPDEST PUSH3 0x47C DUP2 DUP6 PUSH3 0x61F JUMP JUMPDEST SWAP4 POP PUSH3 0x48E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x66F JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4A7 DUP3 PUSH3 0x614 JUMP JUMPDEST PUSH3 0x4B3 DUP2 DUP6 PUSH3 0x62A JUMP JUMPDEST SWAP4 POP PUSH3 0x4C5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x66F JUMP JUMPDEST PUSH3 0x4D0 DUP2 PUSH3 0x71E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4EA PUSH1 0x2D DUP4 PUSH3 0x62A JUMP JUMPDEST SWAP2 POP PUSH3 0x4F7 DUP3 PUSH3 0x72F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x511 PUSH1 0x26 DUP4 PUSH3 0x62A JUMP JUMPDEST SWAP2 POP PUSH3 0x51E DUP3 PUSH3 0x77E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x537 DUP3 DUP5 PUSH3 0x463 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x55E DUP2 DUP5 PUSH3 0x49A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x581 DUP2 PUSH3 0x4DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x5A3 DUP2 PUSH3 0x502 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5B6 PUSH3 0x5C9 JUMP JUMPDEST SWAP1 POP PUSH3 0x5C4 DUP3 DUP3 PUSH3 0x6A5 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x5F1 JUMPI PUSH3 0x5F0 PUSH3 0x6DB JUMP JUMPDEST JUMPDEST PUSH3 0x5FC DUP3 PUSH3 0x71E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x648 DUP3 PUSH3 0x64F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x68F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x672 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x69F JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH3 0x6B0 DUP3 PUSH3 0x71E JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x6D2 JUMPI PUSH3 0x6D1 PUSH3 0x6DB JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E74726163740000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH3 0x7D8 DUP2 PUSH3 0x63B JUMP JUMPDEST DUP2 EQ PUSH3 0x7E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x45B DUP1 PUSH3 0x7F7 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x13 JUMPI PUSH2 0x11 PUSH2 0x1D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B PUSH2 0x1D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25 PUSH2 0x91 JUMP JUMPDEST PUSH2 0x35 PUSH2 0x30 PUSH2 0x93 JUMP JUMPDEST PUSH2 0xA2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5C DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3FF PUSH1 0x27 SWAP2 CODECOPY PUSH2 0xC8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9D PUSH2 0x195 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xC3 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 PUSH2 0xD3 DUP5 PUSH2 0x64 JUMP JUMPDEST PUSH2 0x112 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x109 SWAP1 PUSH2 0x319 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x2E0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x175 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x17A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x18A DUP3 DUP3 DUP7 PUSH2 0x1EC JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C3 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x87 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1FC JUMPI DUP3 SWAP1 POP PUSH2 0x24C JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x20F JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x243 SWAP2 SWAP1 PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25E DUP3 PUSH2 0x339 JUMP JUMPDEST PUSH2 0x268 DUP2 DUP6 PUSH2 0x34F JUMP JUMPDEST SWAP4 POP PUSH2 0x278 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x36B JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28F DUP3 PUSH2 0x344 JUMP JUMPDEST PUSH2 0x299 DUP2 DUP6 PUSH2 0x35A JUMP JUMPDEST SWAP4 POP PUSH2 0x2A9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x36B JUMP JUMPDEST PUSH2 0x2B2 DUP2 PUSH2 0x39E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CA PUSH1 0x26 DUP4 PUSH2 0x35A JUMP JUMPDEST SWAP2 POP PUSH2 0x2D5 DUP3 PUSH2 0x3AF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EC DUP3 DUP5 PUSH2 0x253 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x311 DUP2 DUP5 PUSH2 0x284 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x332 DUP2 PUSH2 0x2BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x389 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x36E JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x398 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E74726163740000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x706673582212207B3084 PUSH31 0xD0CC4B1818E297A773DA5A21B9D1D00BB609DF74B2EE14E9FB8398C864736F PUSH13 0x63430008070033416464726573 PUSH20 0x3A206C6F772D6C6576656C2064656C6567617465 KECCAK256 PUSH4 0x616C6C20 PUSH7 0x61696C65640000 ",
							"sourceMap": "175:767:6:-:0;;;566:112;;;;;;;;;;;;;;;;;;;;;:::i;:::-;632:39;650:6;658:5;665;632:17;;;:39;;:::i;:::-;566:112;;175:767;;2183:295:1;2321:29;2332:17;2321:10;;;:29;;:::i;:::-;2378:1;2364:4;:11;:15;:28;;;;2383:9;2364:28;2360:112;;;2408:53;2437:17;2456:4;2408:28;;;;;:53;;:::i;:::-;;2360:112;2183:295;;;:::o;1897:152::-;1963:37;1982:17;1963:18;;;:37;;:::i;:::-;2024:17;2015:27;;;;;;;;;;;;1897:152;:::o;6570:198:4:-;6653:12;6684:77;6705:6;6713:4;6684:77;;;;;;;;;;;;;;;;;:20;;;:77;;:::i;:::-;6677:84;;6570:198;;;;:::o;1532:259:1:-;1613:37;1632:17;1613:18;;;;;:37;;:::i;:::-;1605:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;1767:17;1710:48;1030:66;1737:20;;1710:26;;;;;:48;;:::i;:::-;:54;;;:74;;;;;;;;;;;;;;;;;;1532:259;:::o;6954:387:4:-;7095:12;7127:18;7138:6;7127:10;;;:18;;:::i;:::-;7119:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;7200:12;7214:23;7241:6;:19;;7261:4;7241:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7199:67;;;;7283:51;7300:7;7309:10;7321:12;7283:16;;;:51;;:::i;:::-;7276:58;;;;6954:387;;;;;:::o;1175:320::-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;1614:190:5:-;1675:21;1784:4;1774:14;;1614:190;;;:::o;7561:742:4:-;7707:12;7735:7;7731:566;;;7765:10;7758:17;;;;7731:566;7896:1;7876:10;:17;:21;7872:415;;;8120:10;8114:17;8180:15;8167:10;8163:2;8159:19;8152:44;7872:415;8259:12;8252:20;;;;;;;;;;;:::i;:::-;;;;;;;;7561:742;;;;;;:::o;7:419:7:-;95:5;120:65;136:48;177:6;136:48;:::i;:::-;120:65;:::i;:::-;111:74;;208:6;201:5;194:21;246:4;239:5;235:16;284:3;275:6;270:3;266:16;263:25;260:112;;;291:79;;:::i;:::-;260:112;381:39;413:6;408:3;403;381:39;:::i;:::-;101:325;7:419;;;;;:::o;432:143::-;489:5;520:6;514:13;505:22;;536:33;563:5;536:33;:::i;:::-;432:143;;;;:::o;594:353::-;660:5;709:3;702:4;694:6;690:17;686:27;676:122;;717:79;;:::i;:::-;676:122;827:6;821:13;852:89;937:3;929:6;922:4;914:6;910:17;852:89;:::i;:::-;843:98;;666:281;594:353;;;;:::o;953:678::-;1041:6;1049;1098:2;1086:9;1077:7;1073:23;1069:32;1066:119;;;1104:79;;:::i;:::-;1066:119;1224:1;1249:64;1305:7;1296:6;1285:9;1281:22;1249:64;:::i;:::-;1239:74;;1195:128;1383:2;1372:9;1368:18;1362:25;1414:18;1406:6;1403:30;1400:117;;;1436:79;;:::i;:::-;1400:117;1541:73;1606:7;1597:6;1586:9;1582:22;1541:73;:::i;:::-;1531:83;;1333:291;953:678;;;;;:::o;1637:373::-;1741:3;1769:38;1801:5;1769:38;:::i;:::-;1823:88;1904:6;1899:3;1823:88;:::i;:::-;1816:95;;1920:52;1965:6;1960:3;1953:4;1946:5;1942:16;1920:52;:::i;:::-;1997:6;1992:3;1988:16;1981:23;;1745:265;1637:373;;;;:::o;2016:364::-;2104:3;2132:39;2165:5;2132:39;:::i;:::-;2187:71;2251:6;2246:3;2187:71;:::i;:::-;2180:78;;2267:52;2312:6;2307:3;2300:4;2293:5;2289:16;2267:52;:::i;:::-;2344:29;2366:6;2344:29;:::i;:::-;2339:3;2335:39;2328:46;;2108:272;2016:364;;;;:::o;2386:366::-;2528:3;2549:67;2613:2;2608:3;2549:67;:::i;:::-;2542:74;;2625:93;2714:3;2625:93;:::i;:::-;2743:2;2738:3;2734:12;2727:19;;2386:366;;;:::o;2758:::-;2900:3;2921:67;2985:2;2980:3;2921:67;:::i;:::-;2914:74;;2997:93;3086:3;2997:93;:::i;:::-;3115:2;3110:3;3106:12;3099:19;;2758:366;;;:::o;3130:271::-;3260:3;3282:93;3371:3;3362:6;3282:93;:::i;:::-;3275:100;;3392:3;3385:10;;3130:271;;;;:::o;3407:313::-;3520:4;3558:2;3547:9;3543:18;3535:26;;3607:9;3601:4;3597:20;3593:1;3582:9;3578:17;3571:47;3635:78;3708:4;3699:6;3635:78;:::i;:::-;3627:86;;3407:313;;;;:::o;3726:419::-;3892:4;3930:2;3919:9;3915:18;3907:26;;3979:9;3973:4;3969:20;3965:1;3954:9;3950:17;3943:47;4007:131;4133:4;4007:131;:::i;:::-;3999:139;;3726:419;;;:::o;4151:::-;4317:4;4355:2;4344:9;4340:18;4332:26;;4404:9;4398:4;4394:20;4390:1;4379:9;4375:17;4368:47;4432:131;4558:4;4432:131;:::i;:::-;4424:139;;4151:419;;;:::o;4576:129::-;4610:6;4637:20;;:::i;:::-;4627:30;;4666:33;4694:4;4686:6;4666:33;:::i;:::-;4576:129;;;:::o;4711:75::-;4744:6;4777:2;4771:9;4761:19;;4711:75;:::o;4792:307::-;4853:4;4943:18;4935:6;4932:30;4929:56;;;4965:18;;:::i;:::-;4929:56;5003:29;5025:6;5003:29;:::i;:::-;4995:37;;5087:4;5081;5077:15;5069:23;;4792:307;;;:::o;5105:98::-;5156:6;5190:5;5184:12;5174:22;;5105:98;;;:::o;5209:99::-;5261:6;5295:5;5289:12;5279:22;;5209:99;;;:::o;5314:147::-;5415:11;5452:3;5437:18;;5314:147;;;;:::o;5467:169::-;5551:11;5585:6;5580:3;5573:19;5625:4;5620:3;5616:14;5601:29;;5467:169;;;;:::o;5642:96::-;5679:7;5708:24;5726:5;5708:24;:::i;:::-;5697:35;;5642:96;;;:::o;5744:126::-;5781:7;5821:42;5814:5;5810:54;5799:65;;5744:126;;;:::o;5876:307::-;5944:1;5954:113;5968:6;5965:1;5962:13;5954:113;;;6053:1;6048:3;6044:11;6038:18;6034:1;6029:3;6025:11;6018:39;5990:2;5987:1;5983:10;5978:15;;5954:113;;;6085:6;6082:1;6079:13;6076:101;;;6165:1;6156:6;6151:3;6147:16;6140:27;6076:101;5925:258;5876:307;;;:::o;6189:281::-;6272:27;6294:4;6272:27;:::i;:::-;6264:6;6260:40;6402:6;6390:10;6387:22;6366:18;6354:10;6351:34;6348:62;6345:88;;;6413:18;;:::i;:::-;6345:88;6453:10;6449:2;6442:22;6232:238;6189:281;;:::o;6476:180::-;6524:77;6521:1;6514:88;6621:4;6618:1;6611:15;6645:4;6642:1;6635:15;6662:117;6771:1;6768;6761:12;6785:117;6894:1;6891;6884:12;6908:117;7017:1;7014;7007:12;7031:117;7140:1;7137;7130:12;7154:102;7195:6;7246:2;7242:7;7237:2;7230:5;7226:14;7222:28;7212:38;;7154:102;;;:::o;7262:232::-;7402:34;7398:1;7390:6;7386:14;7379:58;7471:15;7466:2;7458:6;7454:15;7447:40;7262:232;:::o;7500:225::-;7640:34;7636:1;7628:6;7624:14;7617:58;7709:8;7704:2;7696:6;7692:15;7685:33;7500:225;:::o;7731:122::-;7804:24;7822:5;7804:24;:::i;:::-;7797:5;7794:35;7784:63;;7843:1;7840;7833:12;7784:63;7731:122;:::o;175:767:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_365": {
									"entryPoint": null,
									"id": 365,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_373": {
									"entryPoint": null,
									"id": 373,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_beforeFallback_378": {
									"entryPoint": 145,
									"id": 378,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_delegate_338": {
									"entryPoint": 162,
									"id": 338,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_fallback_357": {
									"entryPoint": 29,
									"id": 357,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getImplementation_41": {
									"entryPoint": 405,
									"id": 41,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_implementation_779": {
									"entryPoint": 147,
									"id": 779,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@functionDelegateCall_617": {
									"entryPoint": 55,
									"id": 617,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@functionDelegateCall_652": {
									"entryPoint": 200,
									"id": 652,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getAddressSlot_710": {
									"entryPoint": 135,
									"id": 710,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isContract_407": {
									"entryPoint": 100,
									"id": 407,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@verifyCallResult_683": {
									"entryPoint": 492,
									"id": 683,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 595,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 644,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 701,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 736,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 759,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 793,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 825,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 836,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 847,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 858,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 875,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 926,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520": {
									"entryPoint": 943,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3335:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:265:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "125:52:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "171:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "139:31:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "139:38:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "129:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "186:95:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "269:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "274:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "193:75:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "193:88:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "186:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "316:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "323:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "312:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "312:16:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "330:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "335:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "290:21:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "290:52:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "290:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "351:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "362:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "367:6:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "358:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:16:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "351:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "96:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "103:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "111:3:7",
														"type": ""
													}
												],
												"src": "7:373:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "478:272:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "488:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "535:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "502:32:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "492:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "550:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "616:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "621:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "557:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "557:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "550:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "663:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "670:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "659:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "659:16:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "677:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "682:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "637:21:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "637:52:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "637:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "698:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "709:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "736:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "714:21:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "714:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "705:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "705:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "698:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "459:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "466:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "474:3:7",
														"type": ""
													}
												],
												"src": "386:364:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "902:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "912:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "978:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "983:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "919:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "919:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "912:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1084:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																	"nodeType": "YulIdentifier",
																	"src": "995:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "995:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "995:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1097:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1108:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1113:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1104:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1104:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1097:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "890:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "898:3:7",
														"type": ""
													}
												],
												"src": "756:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1262:137:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1273:100:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1360:6:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1369:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1280:79:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1280:93:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1273:3:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1383:10:7",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "1390:3:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1383:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1247:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1258:3:7",
														"type": ""
													}
												],
												"src": "1128:271:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1523:195:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1533:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1545:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1556:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1541:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1541:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1533:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1580:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1591:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1576:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1576:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1599:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1605:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1595:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1595:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1569:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1569:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1569:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1625:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1697:6:7"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1706:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1633:63:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1633:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1625:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1495:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1507:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1518:4:7",
														"type": ""
													}
												],
												"src": "1405:313:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1895:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1905:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1917:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1928:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1913:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1913:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1905:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1952:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1963:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1948:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1948:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1971:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1977:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1967:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1967:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1941:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1941:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1941:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1997:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2131:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2005:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2005:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1997:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1875:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1890:4:7",
														"type": ""
													}
												],
												"src": "1724:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2207:40:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2218:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2234:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2228:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2228:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2218:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2190:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2200:6:7",
														"type": ""
													}
												],
												"src": "2149:98:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2312:40:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2323:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2339:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2333:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2333:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2323:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2295:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2305:6:7",
														"type": ""
													}
												],
												"src": "2253:99:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2471:34:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2481:18:7",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "2496:3:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2481:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2443:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2448:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2459:11:7",
														"type": ""
													}
												],
												"src": "2358:147:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2607:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2624:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2629:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2617:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2617:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2617:19:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2645:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2664:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2669:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2660:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2660:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2645:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2579:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2584:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2595:11:7",
														"type": ""
													}
												],
												"src": "2511:169:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2735:258:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2745:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2754:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2749:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2814:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2839:3:7"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "2844:1:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2835:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2835:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "2858:3:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2863:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2854:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2854:11:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2848:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2848:18:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2828:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2828:39:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2828:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2775:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2778:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2772:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2772:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2786:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2788:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2797:1:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2800:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2793:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2793:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2788:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2768:3:7",
																"statements": []
															},
															"src": "2764:113:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2911:76:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2961:3:7"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "2966:6:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2957:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2957:16:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2975:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2950:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2950:27:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2950:27:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2892:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2895:6:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2889:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2889:13:7"
															},
															"nodeType": "YulIf",
															"src": "2886:101:7"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2717:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "2722:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2727:6:7",
														"type": ""
													}
												],
												"src": "2686:307:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3047:54:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3057:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3075:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3082:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3071:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3071:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3091:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3087:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3087:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3067:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3067:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3057:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3030:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "3040:6:7",
														"type": ""
													}
												],
												"src": "2999:102:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3213:119:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3235:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3243:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3231:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3231:14:7"
																	},
																	{
																		"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3247:34:7",
																		"type": "",
																		"value": "Address: delegate call to non-co"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3224:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3224:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3224:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3303:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3311:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3299:15:7"
																	},
																	{
																		"hexValue": "6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3316:8:7",
																		"type": "",
																		"value": "ntract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3292:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3292:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3292:33:7"
														}
													]
												},
												"name": "store_literal_in_memory_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3205:6:7",
														"type": ""
													}
												],
												"src": "3107:225:7"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: delegate call to non-co\")\n\n        mstore(add(memPtr, 32), \"ntract\")\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052366100135761001161001d565b005b61001b61001d565b005b610025610091565b610035610030610093565b6100a2565b565b606061005c83836040518060600160405280602781526020016103ff602791396100c8565b905092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000819050919050565b565b600061009d610195565b905090565b3660008037600080366000845af43d6000803e80600081146100c3573d6000f35b3d6000fd5b60606100d384610064565b610112576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161010990610319565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff168560405161013a91906102e0565b600060405180830381855af49150503d8060008114610175576040519150601f19603f3d011682016040523d82523d6000602084013e61017a565b606091505b509150915061018a8282866101ec565b925050509392505050565b60006101c37f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b610087565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606083156101fc5782905061024c565b60008351111561020f5782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024391906102f7565b60405180910390fd5b9392505050565b600061025e82610339565b610268818561034f565b935061027881856020860161036b565b80840191505092915050565b600061028f82610344565b610299818561035a565b93506102a981856020860161036b565b6102b28161039e565b840191505092915050565b60006102ca60268361035a565b91506102d5826103af565b604082019050919050565b60006102ec8284610253565b915081905092915050565b600060208201905081810360008301526103118184610284565b905092915050565b60006020820190508181036000830152610332816102bd565b9050919050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60005b8381101561038957808201518184015260208101905061036e565b83811115610398576000848401525b50505050565b6000601f19601f8301169050919050565b7f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60008201527f6e7472616374000000000000000000000000000000000000000000000000000060208201525056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212207b30847ed0cc4b1818e297a773da5a21b9d1d00bb609df74b2ee14e9fb8398c864736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x13 JUMPI PUSH2 0x11 PUSH2 0x1D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B PUSH2 0x1D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25 PUSH2 0x91 JUMP JUMPDEST PUSH2 0x35 PUSH2 0x30 PUSH2 0x93 JUMP JUMPDEST PUSH2 0xA2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5C DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3FF PUSH1 0x27 SWAP2 CODECOPY PUSH2 0xC8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9D PUSH2 0x195 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xC3 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 PUSH2 0xD3 DUP5 PUSH2 0x64 JUMP JUMPDEST PUSH2 0x112 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x109 SWAP1 PUSH2 0x319 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x2E0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x175 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x17A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x18A DUP3 DUP3 DUP7 PUSH2 0x1EC JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C3 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x87 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1FC JUMPI DUP3 SWAP1 POP PUSH2 0x24C JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x20F JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x243 SWAP2 SWAP1 PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25E DUP3 PUSH2 0x339 JUMP JUMPDEST PUSH2 0x268 DUP2 DUP6 PUSH2 0x34F JUMP JUMPDEST SWAP4 POP PUSH2 0x278 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x36B JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28F DUP3 PUSH2 0x344 JUMP JUMPDEST PUSH2 0x299 DUP2 DUP6 PUSH2 0x35A JUMP JUMPDEST SWAP4 POP PUSH2 0x2A9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x36B JUMP JUMPDEST PUSH2 0x2B2 DUP2 PUSH2 0x39E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CA PUSH1 0x26 DUP4 PUSH2 0x35A JUMP JUMPDEST SWAP2 POP PUSH2 0x2D5 DUP3 PUSH2 0x3AF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EC DUP3 DUP5 PUSH2 0x253 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x311 DUP2 DUP5 PUSH2 0x284 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x332 DUP2 PUSH2 0x2BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x389 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x36E JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x398 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E74726163740000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x706673582212207B3084 PUSH31 0xD0CC4B1818E297A773DA5A21B9D1D00BB609DF74B2EE14E9FB8398C864736F PUSH13 0x63430008070033000000000000 ",
							"sourceMap": "175:767:6:-:0;;;;;;2898:11:2;:9;:11::i;:::-;175:767:6;;2675:11:2;:9;:11::i;:::-;175:767:6;2322:110:2;2370:17;:15;:17::i;:::-;2397:28;2407:17;:15;:17::i;:::-;2397:9;:28::i;:::-;2322:110::o;6570:198:4:-;6653:12;6684:77;6705:6;6713:4;6684:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6677:84;;6570:198;;;;:::o;1175:320::-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;1614:190:5:-;1675:21;1784:4;1774:14;;1614:190;;;:::o;3198:46:2:-;:::o;756:184:6:-;863:12;898:35;:33;:35::i;:::-;891:42;;756:184;:::o;948:895:2:-;1286:14;1283:1;1280;1267:34;1500:1;1497;1481:14;1478:1;1462:14;1455:5;1442:60;1576:16;1573:1;1570;1555:38;1614:6;1686:1;1681:66;;;;1796:16;1793:1;1786:27;1681:66;1716:16;1713:1;1706:27;6954:387:4;7095:12;7127:18;7138:6;7127:10;:18::i;:::-;7119:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;7200:12;7214:23;7241:6;:19;;7261:4;7241:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7199:67;;;;7283:51;7300:7;7309:10;7321:12;7283:16;:51::i;:::-;7276:58;;;;6954:387;;;;;:::o;1301:140:1:-;1354:7;1380:48;1030:66;1407:20;;1380:26;:48::i;:::-;:54;;;;;;;;;;;;1373:61;;1301:140;:::o;7561:742:4:-;7707:12;7735:7;7731:566;;;7765:10;7758:17;;;;7731:566;7896:1;7876:10;:17;:21;7872:415;;;8120:10;8114:17;8180:15;8167:10;8163:2;8159:19;8152:44;7872:415;8259:12;8252:20;;;;;;;;;;;:::i;:::-;;;;;;;;7561:742;;;;;;:::o;7:373:7:-;111:3;139:38;171:5;139:38;:::i;:::-;193:88;274:6;269:3;193:88;:::i;:::-;186:95;;290:52;335:6;330:3;323:4;316:5;312:16;290:52;:::i;:::-;367:6;362:3;358:16;351:23;;115:265;7:373;;;;:::o;386:364::-;474:3;502:39;535:5;502:39;:::i;:::-;557:71;621:6;616:3;557:71;:::i;:::-;550:78;;637:52;682:6;677:3;670:4;663:5;659:16;637:52;:::i;:::-;714:29;736:6;714:29;:::i;:::-;709:3;705:39;698:46;;478:272;386:364;;;;:::o;756:366::-;898:3;919:67;983:2;978:3;919:67;:::i;:::-;912:74;;995:93;1084:3;995:93;:::i;:::-;1113:2;1108:3;1104:12;1097:19;;756:366;;;:::o;1128:271::-;1258:3;1280:93;1369:3;1360:6;1280:93;:::i;:::-;1273:100;;1390:3;1383:10;;1128:271;;;;:::o;1405:313::-;1518:4;1556:2;1545:9;1541:18;1533:26;;1605:9;1599:4;1595:20;1591:1;1580:9;1576:17;1569:47;1633:78;1706:4;1697:6;1633:78;:::i;:::-;1625:86;;1405:313;;;;:::o;1724:419::-;1890:4;1928:2;1917:9;1913:18;1905:26;;1977:9;1971:4;1967:20;1963:1;1952:9;1948:17;1941:47;2005:131;2131:4;2005:131;:::i;:::-;1997:139;;1724:419;;;:::o;2149:98::-;2200:6;2234:5;2228:12;2218:22;;2149:98;;;:::o;2253:99::-;2305:6;2339:5;2333:12;2323:22;;2253:99;;;:::o;2358:147::-;2459:11;2496:3;2481:18;;2358:147;;;;:::o;2511:169::-;2595:11;2629:6;2624:3;2617:19;2669:4;2664:3;2660:14;2645:29;;2511:169;;;;:::o;2686:307::-;2754:1;2764:113;2778:6;2775:1;2772:13;2764:113;;;2863:1;2858:3;2854:11;2848:18;2844:1;2839:3;2835:11;2828:39;2800:2;2797:1;2793:10;2788:15;;2764:113;;;2895:6;2892:1;2889:13;2886:101;;;2975:1;2966:6;2961:3;2957:16;2950:27;2886:101;2735:258;2686:307;;;:::o;2999:102::-;3040:6;3091:2;3087:7;3082:2;3075:5;3071:14;3067:28;3057:38;;2999:102;;;:::o;3107:225::-;3247:34;3243:1;3235:6;3231:14;3224:58;3316:8;3311:2;3303:6;3299:15;3292:33;3107:225;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "223000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite"
							},
							"internal": {
								"_implementation()": "2249"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 175,
									"end": 942,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 175,
									"end": 942,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 175,
									"end": 942,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 566,
									"end": 678,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 566,
									"end": 678,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 566,
									"end": 678,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 566,
									"end": 678,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 566,
									"end": 678,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 566,
									"end": 678,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 566,
									"end": 678,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 566,
									"end": 678,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 566,
									"end": 678,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 566,
									"end": 678,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 566,
									"end": 678,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 566,
									"end": 678,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 566,
									"end": 678,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 566,
									"end": 678,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 566,
									"end": 678,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 566,
									"end": 678,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 566,
									"end": 678,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 566,
									"end": 678,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 566,
									"end": 678,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 566,
									"end": 678,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 566,
									"end": 678,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 566,
									"end": 678,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 566,
									"end": 678,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 566,
									"end": 678,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 632,
									"end": 671,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 650,
									"end": 656,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 658,
									"end": 663,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 665,
									"end": 670,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 632,
									"end": 649,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 632,
									"end": 649,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 632,
									"end": 649,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 632,
									"end": 671,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 632,
									"end": 671,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 632,
									"end": 671,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 632,
									"end": 671,
									"name": "tag",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 632,
									"end": 671,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 566,
									"end": 678,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 566,
									"end": 678,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 175,
									"end": 942,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 175,
									"end": 942,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2183,
									"end": 2478,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2183,
									"end": 2478,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2321,
									"end": 2350,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 2332,
									"end": 2349,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2321,
									"end": 2331,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 2321,
									"end": 2331,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2321,
									"end": 2331,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2321,
									"end": 2350,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2321,
									"end": 2350,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2321,
									"end": 2350,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2321,
									"end": 2350,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 2321,
									"end": 2350,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2379,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2364,
									"end": 2368,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2375,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2379,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2392,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2392,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 2364,
									"end": 2392,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2392,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2383,
									"end": 2392,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2392,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 2364,
									"end": 2392,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2360,
									"end": 2472,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2360,
									"end": 2472,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 2360,
									"end": 2472,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2408,
									"end": 2461,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 2437,
									"end": 2454,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2456,
									"end": 2460,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2408,
									"end": 2436,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 2408,
									"end": 2436,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2408,
									"end": 2436,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2408,
									"end": 2436,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18446744073709551626"
								},
								{
									"begin": 2408,
									"end": 2436,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2408,
									"end": 2461,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2408,
									"end": 2461,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2408,
									"end": 2461,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2408,
									"end": 2461,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 2408,
									"end": 2461,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2408,
									"end": 2461,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2360,
									"end": 2472,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 2360,
									"end": 2472,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2183,
									"end": 2478,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2183,
									"end": 2478,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2183,
									"end": 2478,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2183,
									"end": 2478,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1897,
									"end": 2049,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1897,
									"end": 2049,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2000,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1982,
									"end": 1999,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 1981,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1963,
									"end": 1981,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1963,
									"end": 1981,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2000,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1963,
									"end": 2000,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 2000,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1963,
									"end": 2000,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1963,
									"end": 2000,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2024,
									"end": 2041,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2015,
									"end": 2042,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2015,
									"end": 2042,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2015,
									"end": 2042,
									"name": "PUSH",
									"source": 1,
									"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
								},
								{
									"begin": 2015,
									"end": 2042,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2015,
									"end": 2042,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2015,
									"end": 2042,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2015,
									"end": 2042,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2015,
									"end": 2042,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2015,
									"end": 2042,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2015,
									"end": 2042,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2015,
									"end": 2042,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2015,
									"end": 2042,
									"name": "LOG2",
									"source": 1
								},
								{
									"begin": 1897,
									"end": 2049,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1897,
									"end": 2049,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 6570,
									"end": 6768,
									"name": "tag",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 6570,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6653,
									"end": 6665,
									"name": "PUSH",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 6684,
									"end": 6761,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 6705,
									"end": 6711,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6713,
									"end": 6717,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6684,
									"end": 6761,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6684,
									"end": 6761,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 6684,
									"end": 6761,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6684,
									"end": 6761,
									"name": "PUSH",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 6684,
									"end": 6761,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6684,
									"end": 6761,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6684,
									"end": 6761,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6684,
									"end": 6761,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6684,
									"end": 6761,
									"name": "PUSH",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 6684,
									"end": 6761,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6684,
									"end": 6761,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6684,
									"end": 6761,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6684,
									"end": 6761,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6684,
									"end": 6761,
									"name": "PUSH data",
									"source": 4,
									"value": "9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398"
								},
								{
									"begin": 6684,
									"end": 6761,
									"name": "PUSH",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 6684,
									"end": 6761,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6684,
									"end": 6761,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 6684,
									"end": 6704,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6684,
									"end": 6704,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6684,
									"end": 6704,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 6684,
									"end": 6761,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6684,
									"end": 6761,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 6684,
									"end": 6761,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 6684,
									"end": 6761,
									"name": "tag",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 6684,
									"end": 6761,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6677,
									"end": 6761,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6677,
									"end": 6761,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6768,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6768,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6768,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6768,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6768,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 1532,
									"end": 1791,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1532,
									"end": 1791,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1613,
									"end": 1650,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1632,
									"end": 1649,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1613,
									"end": 1631,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 1613,
									"end": 1631,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1613,
									"end": 1631,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1613,
									"end": 1631,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18446744073709551627"
								},
								{
									"begin": 1613,
									"end": 1631,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1613,
									"end": 1650,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1613,
									"end": 1650,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1613,
									"end": 1650,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1613,
									"end": 1650,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1613,
									"end": 1650,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1605,
									"end": 1700,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1605,
									"end": 1700,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1605,
									"end": 1700,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1605,
									"end": 1700,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1605,
									"end": 1700,
									"name": "PUSH",
									"source": 1,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1605,
									"end": 1700,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1605,
									"end": 1700,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1605,
									"end": 1700,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1605,
									"end": 1700,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1605,
									"end": 1700,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 1605,
									"end": 1700,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1605,
									"end": 1700,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 1605,
									"end": 1700,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1605,
									"end": 1700,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 1605,
									"end": 1700,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1605,
									"end": 1700,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1605,
									"end": 1700,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1605,
									"end": 1700,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1605,
									"end": 1700,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1605,
									"end": 1700,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1605,
									"end": 1700,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1605,
									"end": 1700,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1605,
									"end": 1700,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1605,
									"end": 1700,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1767,
									"end": 1784,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1710,
									"end": 1758,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 1030,
									"end": 1096,
									"name": "PUSH",
									"source": 1,
									"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
								},
								{
									"begin": 1737,
									"end": 1757,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1737,
									"end": 1757,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1710,
									"end": 1736,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1710,
									"end": 1736,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1710,
									"end": 1736,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1710,
									"end": 1736,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18446744073709551628"
								},
								{
									"begin": 1710,
									"end": 1736,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1710,
									"end": 1758,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1710,
									"end": 1758,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1710,
									"end": 1758,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1710,
									"end": 1758,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 1710,
									"end": 1758,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1710,
									"end": 1764,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1710,
									"end": 1764,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1710,
									"end": 1764,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1710,
									"end": 1784,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 1710,
									"end": 1784,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 1710,
									"end": 1784,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1710,
									"end": 1784,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1710,
									"end": 1784,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1710,
									"end": 1784,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1710,
									"end": 1784,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1710,
									"end": 1784,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1710,
									"end": 1784,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1710,
									"end": 1784,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1710,
									"end": 1784,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1710,
									"end": 1784,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1710,
									"end": 1784,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1710,
									"end": 1784,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1710,
									"end": 1784,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1710,
									"end": 1784,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1710,
									"end": 1784,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1710,
									"end": 1784,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 1791,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 1791,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 6954,
									"end": 7341,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6954,
									"end": 7341,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7095,
									"end": 7107,
									"name": "PUSH",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 7127,
									"end": 7145,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 7138,
									"end": 7144,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 7127,
									"end": 7137,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 7127,
									"end": 7137,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7127,
									"end": 7137,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 7127,
									"end": 7145,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7127,
									"end": 7145,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 7127,
									"end": 7145,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 7127,
									"end": 7145,
									"name": "tag",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 7127,
									"end": 7145,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7119,
									"end": 7188,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 7119,
									"end": 7188,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 7119,
									"end": 7188,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7119,
									"end": 7188,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7119,
									"end": 7188,
									"name": "PUSH",
									"source": 4,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7119,
									"end": 7188,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7119,
									"end": 7188,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 7119,
									"end": 7188,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 7119,
									"end": 7188,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7119,
									"end": 7188,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 7119,
									"end": 7188,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7119,
									"end": 7188,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 7119,
									"end": 7188,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 7119,
									"end": 7188,
									"name": "tag",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 7119,
									"end": 7188,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7119,
									"end": 7188,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7119,
									"end": 7188,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7119,
									"end": 7188,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7119,
									"end": 7188,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7119,
									"end": 7188,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7119,
									"end": 7188,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7119,
									"end": 7188,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 7119,
									"end": 7188,
									"name": "tag",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 7119,
									"end": 7188,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7200,
									"end": 7212,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7214,
									"end": 7237,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7241,
									"end": 7247,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 7241,
									"end": 7260,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7241,
									"end": 7260,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7261,
									"end": 7265,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "tag",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "GAS",
									"source": 4
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "DELEGATECALL",
									"source": 4
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "RETURNDATASIZE",
									"source": 4
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "PUSH",
									"source": 4,
									"value": "3F"
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "RETURNDATASIZE",
									"source": 4
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "RETURNDATASIZE",
									"source": 4
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "RETURNDATASIZE",
									"source": 4
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "RETURNDATACOPY",
									"source": 4
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "tag",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "PUSH",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "tag",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7199,
									"end": 7266,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7199,
									"end": 7266,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7199,
									"end": 7266,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7199,
									"end": 7266,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7283,
									"end": 7334,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 7300,
									"end": 7307,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7309,
									"end": 7319,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7321,
									"end": 7333,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 7283,
									"end": 7299,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7283,
									"end": 7299,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7283,
									"end": 7299,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 7283,
									"end": 7334,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7283,
									"end": 7334,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 7283,
									"end": 7334,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 7283,
									"end": 7334,
									"name": "tag",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 7283,
									"end": 7334,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7276,
									"end": 7334,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 7276,
									"end": 7334,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7276,
									"end": 7334,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7276,
									"end": 7334,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6954,
									"end": 7341,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 6954,
									"end": 7341,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 6954,
									"end": 7341,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6954,
									"end": 7341,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6954,
									"end": 7341,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6954,
									"end": 7341,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 1175,
									"end": 1495,
									"name": "tag",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 1175,
									"end": 1495,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1235,
									"end": 1239,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1487,
									"end": 1488,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1465,
									"end": 1472,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1465,
									"end": 1484,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1465,
									"end": 1484,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1465,
									"end": 1484,
									"name": "EXTCODESIZE",
									"source": 4
								},
								{
									"begin": 1465,
									"end": 1488,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1458,
									"end": 1488,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1458,
									"end": 1488,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1175,
									"end": 1495,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1175,
									"end": 1495,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1175,
									"end": 1495,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1175,
									"end": 1495,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 1614,
									"end": 1804,
									"name": "tag",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 1614,
									"end": 1804,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1675,
									"end": 1696,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1784,
									"end": 1788,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1774,
									"end": 1788,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1774,
									"end": 1788,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1614,
									"end": 1804,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1614,
									"end": 1804,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1614,
									"end": 1804,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1614,
									"end": 1804,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 7561,
									"end": 8303,
									"name": "tag",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7561,
									"end": 8303,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7707,
									"end": 7719,
									"name": "PUSH",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 7735,
									"end": 7742,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7731,
									"end": 8297,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 7731,
									"end": 8297,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 7731,
									"end": 8297,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 7765,
									"end": 7775,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7758,
									"end": 7775,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7758,
									"end": 7775,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7758,
									"end": 7775,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 7758,
									"end": 7775,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7731,
									"end": 8297,
									"name": "tag",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 7731,
									"end": 8297,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7896,
									"end": 7897,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7876,
									"end": 7886,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7876,
									"end": 7893,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7876,
									"end": 7897,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 7872,
									"end": 8287,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 7872,
									"end": 8287,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 7872,
									"end": 8287,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 8120,
									"end": 8130,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 8114,
									"end": 8131,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 8180,
									"end": 8195,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 8167,
									"end": 8177,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 8163,
									"end": 8165,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 8159,
									"end": 8178,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 8152,
									"end": 8196,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 7872,
									"end": 8287,
									"name": "tag",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 7872,
									"end": 8287,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 8259,
									"end": 8271,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 8252,
									"end": 8272,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 8252,
									"end": 8272,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 8252,
									"end": 8272,
									"name": "PUSH",
									"source": 4,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8252,
									"end": 8272,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 8252,
									"end": 8272,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 8252,
									"end": 8272,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 8252,
									"end": 8272,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 8252,
									"end": 8272,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 8252,
									"end": 8272,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 8252,
									"end": 8272,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 8252,
									"end": 8272,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 8252,
									"end": 8272,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 8252,
									"end": 8272,
									"name": "tag",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 8252,
									"end": 8272,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 8252,
									"end": 8272,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 8252,
									"end": 8272,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 8252,
									"end": 8272,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 8252,
									"end": 8272,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 8252,
									"end": 8272,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 8252,
									"end": 8272,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 8252,
									"end": 8272,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 7561,
									"end": 8303,
									"name": "tag",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 7561,
									"end": 8303,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7561,
									"end": 8303,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 7561,
									"end": 8303,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 7561,
									"end": 8303,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7561,
									"end": 8303,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7561,
									"end": 8303,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7561,
									"end": 8303,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 426,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 7,
									"end": 426,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 95,
									"end": 100,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 136,
									"end": 184,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 177,
									"end": 183,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 136,
									"end": 184,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 136,
									"end": 184,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 136,
									"end": 184,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 136,
									"end": 184,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 120,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 120,
									"end": 185,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 120,
									"end": 185,
									"name": "tag",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 120,
									"end": 185,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 111,
									"end": 185,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 111,
									"end": 185,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 208,
									"end": 214,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 201,
									"end": 206,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 194,
									"end": 215,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 239,
									"end": 244,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 235,
									"end": 251,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 284,
									"end": 287,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 275,
									"end": 281,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 270,
									"end": 273,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 266,
									"end": 282,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 263,
									"end": 288,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 260,
									"end": 372,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 260,
									"end": 372,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 260,
									"end": 372,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 291,
									"end": 370,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 291,
									"end": 370,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 291,
									"end": 370,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 291,
									"end": 370,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 291,
									"end": 370,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 260,
									"end": 372,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 260,
									"end": 372,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 381,
									"end": 420,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 413,
									"end": 419,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 408,
									"end": 411,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 403,
									"end": 406,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 381,
									"end": 420,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 381,
									"end": 420,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 381,
									"end": 420,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 381,
									"end": 420,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 101,
									"end": 426,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 426,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 7,
									"end": 426,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7,
									"end": 426,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 426,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 426,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 426,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 432,
									"end": 575,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 432,
									"end": 575,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 489,
									"end": 494,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 520,
									"end": 526,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 514,
									"end": 527,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 505,
									"end": 527,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 505,
									"end": 527,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 536,
									"end": 569,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 563,
									"end": 568,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 536,
									"end": 569,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 536,
									"end": 569,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 536,
									"end": 569,
									"name": "tag",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 536,
									"end": 569,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 432,
									"end": 575,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 432,
									"end": 575,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 432,
									"end": 575,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 432,
									"end": 575,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 432,
									"end": 575,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 594,
									"end": 947,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 594,
									"end": 947,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 660,
									"end": 665,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 709,
									"end": 712,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 702,
									"end": 706,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 694,
									"end": 700,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 690,
									"end": 707,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 686,
									"end": 713,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 676,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 676,
									"end": 798,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 717,
									"end": 796,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 717,
									"end": 796,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 717,
									"end": 796,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 717,
									"end": 796,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 717,
									"end": 796,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 676,
									"end": 798,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 676,
									"end": 798,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 827,
									"end": 833,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 821,
									"end": 834,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 852,
									"end": 941,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 937,
									"end": 940,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 929,
									"end": 935,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 922,
									"end": 926,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 914,
									"end": 920,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 910,
									"end": 927,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 852,
									"end": 941,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 852,
									"end": 941,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 852,
									"end": 941,
									"name": "tag",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 852,
									"end": 941,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 843,
									"end": 941,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 843,
									"end": 941,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 666,
									"end": 947,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 594,
									"end": 947,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 594,
									"end": 947,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 594,
									"end": 947,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 594,
									"end": 947,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 594,
									"end": 947,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 953,
									"end": 1631,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 953,
									"end": 1631,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1041,
									"end": 1047,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1049,
									"end": 1055,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1098,
									"end": 1100,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1086,
									"end": 1095,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1077,
									"end": 1084,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1073,
									"end": 1096,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1069,
									"end": 1101,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 1066,
									"end": 1185,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1066,
									"end": 1185,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 1066,
									"end": 1185,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1104,
									"end": 1183,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 1104,
									"end": 1183,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 1104,
									"end": 1183,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1104,
									"end": 1183,
									"name": "tag",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 1104,
									"end": 1183,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1066,
									"end": 1185,
									"name": "tag",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 1066,
									"end": 1185,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1224,
									"end": 1225,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1249,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 1305,
									"end": 1312,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1296,
									"end": 1302,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1285,
									"end": 1294,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1281,
									"end": 1303,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1249,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 1249,
									"end": 1313,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1249,
									"end": 1313,
									"name": "tag",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 1249,
									"end": 1313,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1239,
									"end": 1313,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1239,
									"end": 1313,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1195,
									"end": 1323,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1383,
									"end": 1385,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1372,
									"end": 1381,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1368,
									"end": 1386,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1362,
									"end": 1387,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1414,
									"end": 1432,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1406,
									"end": 1412,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1433,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1400,
									"end": 1517,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1400,
									"end": 1517,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 1400,
									"end": 1517,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1436,
									"end": 1515,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 1436,
									"end": 1515,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 1436,
									"end": 1515,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1436,
									"end": 1515,
									"name": "tag",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 1436,
									"end": 1515,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1400,
									"end": 1517,
									"name": "tag",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 1400,
									"end": 1517,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1541,
									"end": 1614,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 1606,
									"end": 1613,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1597,
									"end": 1603,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1586,
									"end": 1595,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1582,
									"end": 1604,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1541,
									"end": 1614,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 1541,
									"end": 1614,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1541,
									"end": 1614,
									"name": "tag",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 1541,
									"end": 1614,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1531,
									"end": 1614,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1531,
									"end": 1614,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1333,
									"end": 1624,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 953,
									"end": 1631,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 953,
									"end": 1631,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 953,
									"end": 1631,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 953,
									"end": 1631,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 953,
									"end": 1631,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 953,
									"end": 1631,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 1637,
									"end": 2010,
									"name": "tag",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 1637,
									"end": 2010,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1741,
									"end": 1744,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1769,
									"end": 1807,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 1801,
									"end": 1806,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1769,
									"end": 1807,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 1769,
									"end": 1807,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1769,
									"end": 1807,
									"name": "tag",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 1769,
									"end": 1807,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1823,
									"end": 1911,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 1904,
									"end": 1910,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1899,
									"end": 1902,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1823,
									"end": 1911,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 1823,
									"end": 1911,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1823,
									"end": 1911,
									"name": "tag",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 1823,
									"end": 1911,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1816,
									"end": 1911,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1816,
									"end": 1911,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1920,
									"end": 1972,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 1965,
									"end": 1971,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1960,
									"end": 1963,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1953,
									"end": 1957,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1946,
									"end": 1951,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1942,
									"end": 1958,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1920,
									"end": 1972,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 1920,
									"end": 1972,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1920,
									"end": 1972,
									"name": "tag",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 1920,
									"end": 1972,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1997,
									"end": 2003,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1992,
									"end": 1995,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1988,
									"end": 2004,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1981,
									"end": 2004,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1981,
									"end": 2004,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1745,
									"end": 2010,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1637,
									"end": 2010,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1637,
									"end": 2010,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1637,
									"end": 2010,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1637,
									"end": 2010,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1637,
									"end": 2010,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 2016,
									"end": 2380,
									"name": "tag",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 2016,
									"end": 2380,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2104,
									"end": 2107,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2132,
									"end": 2171,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 2165,
									"end": 2170,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2132,
									"end": 2171,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 2132,
									"end": 2171,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 2132,
									"end": 2171,
									"name": "tag",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 2132,
									"end": 2171,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2187,
									"end": 2258,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 2251,
									"end": 2257,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2246,
									"end": 2249,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2187,
									"end": 2258,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 2187,
									"end": 2258,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 2187,
									"end": 2258,
									"name": "tag",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 2187,
									"end": 2258,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2180,
									"end": 2258,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 2180,
									"end": 2258,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2267,
									"end": 2319,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 2312,
									"end": 2318,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2307,
									"end": 2310,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2304,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2293,
									"end": 2298,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2289,
									"end": 2305,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2267,
									"end": 2319,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 2267,
									"end": 2319,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 2267,
									"end": 2319,
									"name": "tag",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 2267,
									"end": 2319,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2344,
									"end": 2373,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 2366,
									"end": 2372,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2344,
									"end": 2373,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 2344,
									"end": 2373,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 2344,
									"end": 2373,
									"name": "tag",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 2344,
									"end": 2373,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2339,
									"end": 2342,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2335,
									"end": 2374,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2328,
									"end": 2374,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2328,
									"end": 2374,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2108,
									"end": 2380,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2016,
									"end": 2380,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2016,
									"end": 2380,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2016,
									"end": 2380,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2016,
									"end": 2380,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2016,
									"end": 2380,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 2386,
									"end": 2752,
									"name": "tag",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 2386,
									"end": 2752,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2528,
									"end": 2531,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2549,
									"end": 2616,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 2613,
									"end": 2615,
									"name": "PUSH",
									"source": 7,
									"value": "2D"
								},
								{
									"begin": 2608,
									"end": 2611,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2549,
									"end": 2616,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 2549,
									"end": 2616,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 2549,
									"end": 2616,
									"name": "tag",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 2549,
									"end": 2616,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2542,
									"end": 2616,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2542,
									"end": 2616,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2625,
									"end": 2718,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 2714,
									"end": 2717,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2625,
									"end": 2718,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 2625,
									"end": 2718,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 2625,
									"end": 2718,
									"name": "tag",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 2625,
									"end": 2718,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2743,
									"end": 2745,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2738,
									"end": 2741,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2734,
									"end": 2746,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2727,
									"end": 2746,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2727,
									"end": 2746,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2386,
									"end": 2752,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2386,
									"end": 2752,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2386,
									"end": 2752,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2386,
									"end": 2752,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 2758,
									"end": 3124,
									"name": "tag",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 2758,
									"end": 3124,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2900,
									"end": 2903,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2921,
									"end": 2988,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 2985,
									"end": 2987,
									"name": "PUSH",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 2980,
									"end": 2983,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2921,
									"end": 2988,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 2921,
									"end": 2988,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 2921,
									"end": 2988,
									"name": "tag",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 2921,
									"end": 2988,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2914,
									"end": 2988,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2914,
									"end": 2988,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2997,
									"end": 3090,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 3086,
									"end": 3089,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2997,
									"end": 3090,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 2997,
									"end": 3090,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 2997,
									"end": 3090,
									"name": "tag",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 2997,
									"end": 3090,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3115,
									"end": 3117,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 3110,
									"end": 3113,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3106,
									"end": 3118,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3099,
									"end": 3118,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3099,
									"end": 3118,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2758,
									"end": 3124,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2758,
									"end": 3124,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2758,
									"end": 3124,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2758,
									"end": 3124,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 3130,
									"end": 3401,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 3130,
									"end": 3401,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3260,
									"end": 3263,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3282,
									"end": 3375,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 3371,
									"end": 3374,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3362,
									"end": 3368,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3282,
									"end": 3375,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 3282,
									"end": 3375,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 3282,
									"end": 3375,
									"name": "tag",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 3282,
									"end": 3375,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3275,
									"end": 3375,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3275,
									"end": 3375,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3392,
									"end": 3395,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3385,
									"end": 3395,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3385,
									"end": 3395,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3130,
									"end": 3401,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3130,
									"end": 3401,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3130,
									"end": 3401,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3130,
									"end": 3401,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3130,
									"end": 3401,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 3407,
									"end": 3720,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 3407,
									"end": 3720,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3520,
									"end": 3524,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3558,
									"end": 3560,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3547,
									"end": 3556,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3543,
									"end": 3561,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3535,
									"end": 3561,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3535,
									"end": 3561,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3607,
									"end": 3616,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3601,
									"end": 3605,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3597,
									"end": 3617,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 3593,
									"end": 3594,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3582,
									"end": 3591,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3578,
									"end": 3595,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3571,
									"end": 3618,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3635,
									"end": 3713,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "110"
								},
								{
									"begin": 3708,
									"end": 3712,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3699,
									"end": 3705,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3635,
									"end": 3713,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 3635,
									"end": 3713,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 3635,
									"end": 3713,
									"name": "tag",
									"source": 7,
									"value": "110"
								},
								{
									"begin": 3635,
									"end": 3713,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3627,
									"end": 3713,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3627,
									"end": 3713,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3407,
									"end": 3720,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3407,
									"end": 3720,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3407,
									"end": 3720,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3407,
									"end": 3720,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3407,
									"end": 3720,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 3726,
									"end": 4145,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 3726,
									"end": 4145,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3892,
									"end": 3896,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3930,
									"end": 3932,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3919,
									"end": 3928,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3915,
									"end": 3933,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3907,
									"end": 3933,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3907,
									"end": 3933,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3979,
									"end": 3988,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3973,
									"end": 3977,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3969,
									"end": 3989,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 3965,
									"end": 3966,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3954,
									"end": 3963,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 3967,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3943,
									"end": 3990,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4007,
									"end": 4138,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "112"
								},
								{
									"begin": 4133,
									"end": 4137,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4007,
									"end": 4138,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 4007,
									"end": 4138,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 4007,
									"end": 4138,
									"name": "tag",
									"source": 7,
									"value": "112"
								},
								{
									"begin": 4007,
									"end": 4138,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3999,
									"end": 4138,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3999,
									"end": 4138,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3726,
									"end": 4145,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3726,
									"end": 4145,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3726,
									"end": 4145,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3726,
									"end": 4145,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 4151,
									"end": 4570,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 4151,
									"end": 4570,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4317,
									"end": 4321,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4355,
									"end": 4357,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4344,
									"end": 4353,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4340,
									"end": 4358,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4332,
									"end": 4358,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4332,
									"end": 4358,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4404,
									"end": 4413,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4398,
									"end": 4402,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4394,
									"end": 4414,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 4390,
									"end": 4391,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4379,
									"end": 4388,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4375,
									"end": 4392,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4368,
									"end": 4415,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4432,
									"end": 4563,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 4558,
									"end": 4562,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4432,
									"end": 4563,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 4432,
									"end": 4563,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 4432,
									"end": 4563,
									"name": "tag",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 4432,
									"end": 4563,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4424,
									"end": 4563,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4424,
									"end": 4563,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4151,
									"end": 4570,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4151,
									"end": 4570,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4151,
									"end": 4570,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4151,
									"end": 4570,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 4576,
									"end": 4705,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 4576,
									"end": 4705,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4610,
									"end": 4616,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4637,
									"end": 4657,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 4637,
									"end": 4657,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 4637,
									"end": 4657,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 4637,
									"end": 4657,
									"name": "tag",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 4637,
									"end": 4657,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4627,
									"end": 4657,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4627,
									"end": 4657,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4666,
									"end": 4699,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 4694,
									"end": 4698,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4686,
									"end": 4692,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4666,
									"end": 4699,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 4666,
									"end": 4699,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 4666,
									"end": 4699,
									"name": "tag",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 4666,
									"end": 4699,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4576,
									"end": 4705,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4576,
									"end": 4705,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4576,
									"end": 4705,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4576,
									"end": 4705,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 4711,
									"end": 4786,
									"name": "tag",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 4711,
									"end": 4786,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4744,
									"end": 4750,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4777,
									"end": 4779,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 4771,
									"end": 4780,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4761,
									"end": 4780,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4761,
									"end": 4780,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4711,
									"end": 4786,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4711,
									"end": 4786,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 4792,
									"end": 5099,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 4792,
									"end": 5099,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4853,
									"end": 4857,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4943,
									"end": 4961,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4935,
									"end": 4941,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4932,
									"end": 4962,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4929,
									"end": 4985,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4929,
									"end": 4985,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "122"
								},
								{
									"begin": 4929,
									"end": 4985,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4965,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "123"
								},
								{
									"begin": 4965,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 4965,
									"end": 4983,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 4965,
									"end": 4983,
									"name": "tag",
									"source": 7,
									"value": "123"
								},
								{
									"begin": 4965,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4929,
									"end": 4985,
									"name": "tag",
									"source": 7,
									"value": "122"
								},
								{
									"begin": 4929,
									"end": 4985,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5003,
									"end": 5032,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "125"
								},
								{
									"begin": 5025,
									"end": 5031,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5003,
									"end": 5032,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 5003,
									"end": 5032,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 5003,
									"end": 5032,
									"name": "tag",
									"source": 7,
									"value": "125"
								},
								{
									"begin": 5003,
									"end": 5032,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4995,
									"end": 5032,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4995,
									"end": 5032,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5087,
									"end": 5091,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5081,
									"end": 5085,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5077,
									"end": 5092,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5069,
									"end": 5092,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5069,
									"end": 5092,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4792,
									"end": 5099,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4792,
									"end": 5099,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4792,
									"end": 5099,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4792,
									"end": 5099,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 5105,
									"end": 5203,
									"name": "tag",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 5105,
									"end": 5203,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5156,
									"end": 5162,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5190,
									"end": 5195,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5184,
									"end": 5196,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 5174,
									"end": 5196,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5174,
									"end": 5196,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5105,
									"end": 5203,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5105,
									"end": 5203,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5105,
									"end": 5203,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5105,
									"end": 5203,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 5209,
									"end": 5308,
									"name": "tag",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 5209,
									"end": 5308,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5261,
									"end": 5267,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5295,
									"end": 5300,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5289,
									"end": 5301,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 5279,
									"end": 5301,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5279,
									"end": 5301,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5209,
									"end": 5308,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5209,
									"end": 5308,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5209,
									"end": 5308,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5209,
									"end": 5308,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 5314,
									"end": 5461,
									"name": "tag",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 5314,
									"end": 5461,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5415,
									"end": 5426,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5452,
									"end": 5455,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5437,
									"end": 5455,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5437,
									"end": 5455,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5314,
									"end": 5461,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5314,
									"end": 5461,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5314,
									"end": 5461,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5314,
									"end": 5461,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5314,
									"end": 5461,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 5467,
									"end": 5636,
									"name": "tag",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 5467,
									"end": 5636,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5551,
									"end": 5562,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5585,
									"end": 5591,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5580,
									"end": 5583,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5573,
									"end": 5592,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5625,
									"end": 5629,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5620,
									"end": 5623,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5616,
									"end": 5630,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5601,
									"end": 5630,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5601,
									"end": 5630,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5467,
									"end": 5636,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5467,
									"end": 5636,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5467,
									"end": 5636,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5467,
									"end": 5636,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5467,
									"end": 5636,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 5642,
									"end": 5738,
									"name": "tag",
									"source": 7,
									"value": "130"
								},
								{
									"begin": 5642,
									"end": 5738,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5679,
									"end": 5686,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5708,
									"end": 5732,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 5726,
									"end": 5731,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5708,
									"end": 5732,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 5708,
									"end": 5732,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 5708,
									"end": 5732,
									"name": "tag",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 5708,
									"end": 5732,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5697,
									"end": 5732,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5697,
									"end": 5732,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5642,
									"end": 5738,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5642,
									"end": 5738,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5642,
									"end": 5738,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5642,
									"end": 5738,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 5744,
									"end": 5870,
									"name": "tag",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 5744,
									"end": 5870,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5781,
									"end": 5788,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5821,
									"end": 5863,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5814,
									"end": 5819,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5810,
									"end": 5864,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5799,
									"end": 5864,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5799,
									"end": 5864,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5744,
									"end": 5870,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5744,
									"end": 5870,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5744,
									"end": 5870,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5744,
									"end": 5870,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 5876,
									"end": 6183,
									"name": "tag",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 5876,
									"end": 6183,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5944,
									"end": 5945,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5954,
									"end": 6067,
									"name": "tag",
									"source": 7,
									"value": "136"
								},
								{
									"begin": 5954,
									"end": 6067,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5968,
									"end": 5974,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5965,
									"end": 5966,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5962,
									"end": 5975,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 5954,
									"end": 6067,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5954,
									"end": 6067,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "138"
								},
								{
									"begin": 5954,
									"end": 6067,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6053,
									"end": 6054,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 6048,
									"end": 6051,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6044,
									"end": 6055,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6038,
									"end": 6056,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 6034,
									"end": 6035,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6029,
									"end": 6032,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6025,
									"end": 6036,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6018,
									"end": 6057,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5990,
									"end": 5992,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5987,
									"end": 5988,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5983,
									"end": 5993,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5978,
									"end": 5993,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5978,
									"end": 5993,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5954,
									"end": 6067,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "136"
								},
								{
									"begin": 5954,
									"end": 6067,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5954,
									"end": 6067,
									"name": "tag",
									"source": 7,
									"value": "138"
								},
								{
									"begin": 5954,
									"end": 6067,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6085,
									"end": 6091,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6082,
									"end": 6083,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6079,
									"end": 6092,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 6076,
									"end": 6177,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6076,
									"end": 6177,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "139"
								},
								{
									"begin": 6076,
									"end": 6177,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6165,
									"end": 6166,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6156,
									"end": 6162,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6151,
									"end": 6154,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6147,
									"end": 6163,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6140,
									"end": 6167,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6076,
									"end": 6177,
									"name": "tag",
									"source": 7,
									"value": "139"
								},
								{
									"begin": 6076,
									"end": 6177,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5925,
									"end": 6183,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5876,
									"end": 6183,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5876,
									"end": 6183,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5876,
									"end": 6183,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5876,
									"end": 6183,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 6189,
									"end": 6470,
									"name": "tag",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 6189,
									"end": 6470,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6272,
									"end": 6299,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 6294,
									"end": 6298,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6272,
									"end": 6299,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 6272,
									"end": 6299,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 6272,
									"end": 6299,
									"name": "tag",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 6272,
									"end": 6299,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6264,
									"end": 6270,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6260,
									"end": 6300,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6402,
									"end": 6408,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6390,
									"end": 6400,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6387,
									"end": 6409,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 6366,
									"end": 6384,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6354,
									"end": 6364,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6351,
									"end": 6385,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 6348,
									"end": 6410,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 6345,
									"end": 6433,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6345,
									"end": 6433,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 6345,
									"end": 6433,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6413,
									"end": 6431,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "143"
								},
								{
									"begin": 6413,
									"end": 6431,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 6413,
									"end": 6431,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 6413,
									"end": 6431,
									"name": "tag",
									"source": 7,
									"value": "143"
								},
								{
									"begin": 6413,
									"end": 6431,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6345,
									"end": 6433,
									"name": "tag",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 6345,
									"end": 6433,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6453,
									"end": 6463,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 6449,
									"end": 6451,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 6442,
									"end": 6464,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6232,
									"end": 6470,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6189,
									"end": 6470,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6189,
									"end": 6470,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6189,
									"end": 6470,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 6476,
									"end": 6656,
									"name": "tag",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 6476,
									"end": 6656,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6524,
									"end": 6601,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6521,
									"end": 6522,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6514,
									"end": 6602,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6621,
									"end": 6625,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 6618,
									"end": 6619,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 6611,
									"end": 6626,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6645,
									"end": 6649,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 6642,
									"end": 6643,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6635,
									"end": 6650,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 6662,
									"end": 6779,
									"name": "tag",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 6662,
									"end": 6779,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6771,
									"end": 6772,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6768,
									"end": 6769,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 6761,
									"end": 6773,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 6785,
									"end": 6902,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 6785,
									"end": 6902,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6894,
									"end": 6895,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6891,
									"end": 6892,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 6884,
									"end": 6896,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 6908,
									"end": 7025,
									"name": "tag",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 6908,
									"end": 7025,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7017,
									"end": 7018,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7014,
									"end": 7015,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 7007,
									"end": 7019,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 7031,
									"end": 7148,
									"name": "tag",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 7031,
									"end": 7148,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7140,
									"end": 7141,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7137,
									"end": 7138,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 7130,
									"end": 7142,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 7154,
									"end": 7256,
									"name": "tag",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 7154,
									"end": 7256,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7195,
									"end": 7201,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7246,
									"end": 7248,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 7242,
									"end": 7249,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 7237,
									"end": 7239,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 7230,
									"end": 7235,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7226,
									"end": 7240,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7222,
									"end": 7250,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 7212,
									"end": 7250,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7212,
									"end": 7250,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7154,
									"end": 7256,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7154,
									"end": 7256,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7154,
									"end": 7256,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7154,
									"end": 7256,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 7262,
									"end": 7494,
									"name": "tag",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 7262,
									"end": 7494,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7402,
									"end": 7436,
									"name": "PUSH",
									"source": 7,
									"value": "455243313936373A206E657720696D706C656D656E746174696F6E206973206E"
								},
								{
									"begin": 7398,
									"end": 7399,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7390,
									"end": 7396,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7386,
									"end": 7400,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7379,
									"end": 7437,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 7471,
									"end": 7486,
									"name": "PUSH",
									"source": 7,
									"value": "6F74206120636F6E747261637400000000000000000000000000000000000000"
								},
								{
									"begin": 7466,
									"end": 7468,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7458,
									"end": 7464,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7454,
									"end": 7469,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7447,
									"end": 7487,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 7262,
									"end": 7494,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7262,
									"end": 7494,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 7500,
									"end": 7725,
									"name": "tag",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 7500,
									"end": 7725,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7640,
									"end": 7674,
									"name": "PUSH",
									"source": 7,
									"value": "416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F"
								},
								{
									"begin": 7636,
									"end": 7637,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7628,
									"end": 7634,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7624,
									"end": 7638,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7617,
									"end": 7675,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 7709,
									"end": 7717,
									"name": "PUSH",
									"source": 7,
									"value": "6E74726163740000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7704,
									"end": 7706,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7696,
									"end": 7702,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7692,
									"end": 7707,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7685,
									"end": 7718,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 7500,
									"end": 7725,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7500,
									"end": 7725,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 7731,
									"end": 7853,
									"name": "tag",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 7731,
									"end": 7853,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7804,
									"end": 7828,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 7822,
									"end": 7827,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7804,
									"end": 7828,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "130"
								},
								{
									"begin": 7804,
									"end": 7828,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 7804,
									"end": 7828,
									"name": "tag",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 7804,
									"end": 7828,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7797,
									"end": 7802,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7794,
									"end": 7829,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 7784,
									"end": 7847,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 7784,
									"end": 7847,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7843,
									"end": 7844,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7840,
									"end": 7841,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 7833,
									"end": 7845,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 7784,
									"end": 7847,
									"name": "tag",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 7784,
									"end": 7847,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7731,
									"end": 7853,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7731,
									"end": 7853,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 175,
									"end": 942,
									"name": "tag",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 175,
									"end": 942,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 175,
									"end": 942,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 175,
									"end": 942,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 175,
									"end": 942,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 175,
									"end": 942,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 175,
									"end": 942,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 175,
									"end": 942,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 175,
									"end": 942,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207b30847ed0cc4b1818e297a773da5a21b9d1d00bb609df74b2ee14e9fb8398c864736f6c63430008070033",
									".code": [
										{
											"begin": 175,
											"end": 942,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 175,
											"end": 942,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 175,
											"end": 942,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 175,
											"end": 942,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 175,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 175,
											"end": 942,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2898,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2898,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2898,
											"end": 2909,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2898,
											"end": 2909,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2898,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 175,
											"end": 942,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 175,
											"end": 942,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 175,
											"end": 942,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2675,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 2675,
											"end": 2684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2675,
											"end": 2686,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2675,
											"end": 2686,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 2675,
											"end": 2686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 175,
											"end": 942,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2322,
											"end": 2432,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2322,
											"end": 2432,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2387,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2370,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2370,
											"end": 2387,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2370,
											"end": 2387,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2370,
											"end": 2387,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2407,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2407,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2407,
											"end": 2424,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2407,
											"end": 2424,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2407,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2397,
											"end": 2406,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2322,
											"end": 2432,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6570,
											"end": 6768,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 6570,
											"end": 6768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6653,
											"end": 6665,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 6684,
											"end": 6761,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 6705,
											"end": 6711,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6713,
											"end": 6717,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6684,
											"end": 6761,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6684,
											"end": 6761,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6684,
											"end": 6761,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6684,
											"end": 6761,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 6684,
											"end": 6761,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6684,
											"end": 6761,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6684,
											"end": 6761,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6684,
											"end": 6761,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6684,
											"end": 6761,
											"name": "PUSH",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 6684,
											"end": 6761,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6684,
											"end": 6761,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6684,
											"end": 6761,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6684,
											"end": 6761,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6684,
											"end": 6761,
											"name": "PUSH data",
											"source": 4,
											"value": "9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398"
										},
										{
											"begin": 6684,
											"end": 6761,
											"name": "PUSH",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 6684,
											"end": 6761,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6684,
											"end": 6761,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 6684,
											"end": 6704,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 6684,
											"end": 6761,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6684,
											"end": 6761,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 6684,
											"end": 6761,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6677,
											"end": 6761,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6677,
											"end": 6761,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6768,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6768,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6768,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6768,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6768,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1488,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1614,
											"end": 1804,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 1614,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1675,
											"end": 1696,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1784,
											"end": 1788,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1774,
											"end": 1788,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1774,
											"end": 1788,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1804,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1804,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1804,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1804,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3198,
											"end": 3244,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3198,
											"end": 3244,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3198,
											"end": 3244,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 756,
											"end": 940,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 756,
											"end": 940,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 863,
											"end": 875,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 898,
											"end": 933,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 898,
											"end": 931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 898,
											"end": 933,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 898,
											"end": 933,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 898,
											"end": 933,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 891,
											"end": 933,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 891,
											"end": 933,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 756,
											"end": 940,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 756,
											"end": 940,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 948,
											"end": 1843,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 948,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1300,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1284,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1281,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1267,
											"end": 1301,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 1500,
											"end": 1501,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1497,
											"end": 1498,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1481,
											"end": 1495,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1478,
											"end": 1479,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1462,
											"end": 1476,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1455,
											"end": 1460,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1442,
											"end": 1502,
											"name": "DELEGATECALL",
											"source": 2
										},
										{
											"begin": 1576,
											"end": 1592,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1574,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1570,
											"end": 1571,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1555,
											"end": 1593,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1686,
											"end": 1687,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1812,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1793,
											"end": 1794,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1786,
											"end": 1813,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1732,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1706,
											"end": 1733,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6954,
											"end": 7341,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 6954,
											"end": 7341,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7095,
											"end": 7107,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 7127,
											"end": 7145,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 7138,
											"end": 7144,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7127,
											"end": 7137,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 7127,
											"end": 7145,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7127,
											"end": 7145,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 7127,
											"end": 7145,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7119,
											"end": 7188,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 7119,
											"end": 7188,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7119,
											"end": 7188,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7119,
											"end": 7188,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7119,
											"end": 7188,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7119,
											"end": 7188,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7119,
											"end": 7188,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7119,
											"end": 7188,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7119,
											"end": 7188,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7119,
											"end": 7188,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 7119,
											"end": 7188,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7119,
											"end": 7188,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 7119,
											"end": 7188,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7119,
											"end": 7188,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 7119,
											"end": 7188,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7119,
											"end": 7188,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7119,
											"end": 7188,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7119,
											"end": 7188,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7119,
											"end": 7188,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7119,
											"end": 7188,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7119,
											"end": 7188,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7119,
											"end": 7188,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7119,
											"end": 7188,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 7119,
											"end": 7188,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7200,
											"end": 7212,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7214,
											"end": 7237,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7241,
											"end": 7247,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7241,
											"end": 7260,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7241,
											"end": 7260,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7261,
											"end": 7265,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "DELEGATECALL",
											"source": 4
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7241,
											"end": 7266,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7199,
											"end": 7266,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7199,
											"end": 7266,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7199,
											"end": 7266,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7199,
											"end": 7266,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7283,
											"end": 7334,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 7300,
											"end": 7307,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7309,
											"end": 7319,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7321,
											"end": 7333,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7283,
											"end": 7299,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 7283,
											"end": 7334,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7283,
											"end": 7334,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 7283,
											"end": 7334,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7276,
											"end": 7334,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7276,
											"end": 7334,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7276,
											"end": 7334,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7276,
											"end": 7334,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6954,
											"end": 7341,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6954,
											"end": 7341,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6954,
											"end": 7341,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6954,
											"end": 7341,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6954,
											"end": 7341,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6954,
											"end": 7341,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1301,
											"end": 1441,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1301,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1354,
											"end": 1361,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1380,
											"end": 1428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1030,
											"end": 1096,
											"name": "PUSH",
											"source": 1,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1407,
											"end": 1427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 1427,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1380,
											"end": 1428,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1380,
											"end": 1428,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1380,
											"end": 1428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1434,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1380,
											"end": 1434,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1434,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1380,
											"end": 1434,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1434,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1434,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1434,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1380,
											"end": 1434,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1434,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1434,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1434,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1380,
											"end": 1434,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1373,
											"end": 1434,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1373,
											"end": 1434,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1301,
											"end": 1441,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1301,
											"end": 1441,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7561,
											"end": 8303,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 7561,
											"end": 8303,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7707,
											"end": 7719,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 7735,
											"end": 7742,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7731,
											"end": 8297,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7731,
											"end": 8297,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 7731,
											"end": 8297,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7765,
											"end": 7775,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7731,
											"end": 8297,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 7731,
											"end": 8297,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7896,
											"end": 7897,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7876,
											"end": 7886,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7876,
											"end": 7893,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7876,
											"end": 7897,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 7872,
											"end": 8287,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7872,
											"end": 8287,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 7872,
											"end": 8287,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8120,
											"end": 8130,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8114,
											"end": 8131,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8180,
											"end": 8195,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8167,
											"end": 8177,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8163,
											"end": 8165,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8159,
											"end": 8178,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8152,
											"end": 8196,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7872,
											"end": 8287,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 7872,
											"end": 8287,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8259,
											"end": 8271,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8252,
											"end": 8272,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7561,
											"end": 8303,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 7561,
											"end": 8303,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7561,
											"end": 8303,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7561,
											"end": 8303,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7561,
											"end": 8303,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7561,
											"end": 8303,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7561,
											"end": 8303,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7561,
											"end": 8303,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 380,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 7,
											"end": 380,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 111,
											"end": 114,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 177,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 171,
											"end": 176,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 139,
											"end": 177,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 139,
											"end": 177,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 139,
											"end": 177,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 139,
											"end": 177,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 193,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 274,
											"end": 280,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 269,
											"end": 272,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 193,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 193,
											"end": 281,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 193,
											"end": 281,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 193,
											"end": 281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 186,
											"end": 281,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 186,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 290,
											"end": 342,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 335,
											"end": 341,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 330,
											"end": 333,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 323,
											"end": 327,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 316,
											"end": 321,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 312,
											"end": 328,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 290,
											"end": 342,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 290,
											"end": 342,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 290,
											"end": 342,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 290,
											"end": 342,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 367,
											"end": 373,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 362,
											"end": 365,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 358,
											"end": 374,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 351,
											"end": 374,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 351,
											"end": 374,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 115,
											"end": 380,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 380,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7,
											"end": 380,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 380,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 380,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 380,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 386,
											"end": 750,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 386,
											"end": 750,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 474,
											"end": 477,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 541,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 535,
											"end": 540,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 502,
											"end": 541,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 502,
											"end": 541,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 502,
											"end": 541,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 502,
											"end": 541,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 557,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 621,
											"end": 627,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 616,
											"end": 619,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 557,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 557,
											"end": 628,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 557,
											"end": 628,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 557,
											"end": 628,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 550,
											"end": 628,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 550,
											"end": 628,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 637,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 682,
											"end": 688,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 677,
											"end": 680,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 670,
											"end": 674,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 663,
											"end": 668,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 659,
											"end": 675,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 637,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 637,
											"end": 689,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 637,
											"end": 689,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 637,
											"end": 689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 714,
											"end": 743,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 736,
											"end": 742,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 714,
											"end": 743,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 714,
											"end": 743,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 714,
											"end": 743,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 714,
											"end": 743,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 712,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 705,
											"end": 744,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 698,
											"end": 744,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 698,
											"end": 744,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 478,
											"end": 750,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 386,
											"end": 750,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 386,
											"end": 750,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 386,
											"end": 750,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 386,
											"end": 750,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 386,
											"end": 750,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 756,
											"end": 1122,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 756,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 898,
											"end": 901,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 919,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 983,
											"end": 985,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 978,
											"end": 981,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 919,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 919,
											"end": 986,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 919,
											"end": 986,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 919,
											"end": 986,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 912,
											"end": 986,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 912,
											"end": 986,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 995,
											"end": 1088,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 1084,
											"end": 1087,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 995,
											"end": 1088,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 995,
											"end": 1088,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 995,
											"end": 1088,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 995,
											"end": 1088,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1113,
											"end": 1115,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1108,
											"end": 1111,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1097,
											"end": 1116,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1097,
											"end": 1116,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 756,
											"end": 1122,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 756,
											"end": 1122,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 756,
											"end": 1122,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 756,
											"end": 1122,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1128,
											"end": 1399,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 1128,
											"end": 1399,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1258,
											"end": 1261,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 1369,
											"end": 1372,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1366,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1280,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 1280,
											"end": 1373,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1280,
											"end": 1373,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 1280,
											"end": 1373,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1273,
											"end": 1373,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1273,
											"end": 1373,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1390,
											"end": 1393,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1393,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1393,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1128,
											"end": 1399,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1128,
											"end": 1399,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1128,
											"end": 1399,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1128,
											"end": 1399,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1128,
											"end": 1399,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1405,
											"end": 1718,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 1405,
											"end": 1718,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1518,
											"end": 1522,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1556,
											"end": 1558,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1545,
											"end": 1554,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1559,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1533,
											"end": 1559,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1533,
											"end": 1559,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1605,
											"end": 1614,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1599,
											"end": 1603,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1595,
											"end": 1615,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1591,
											"end": 1592,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1580,
											"end": 1589,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1576,
											"end": 1593,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1616,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1633,
											"end": 1711,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 1706,
											"end": 1710,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1697,
											"end": 1703,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1633,
											"end": 1711,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 1633,
											"end": 1711,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1633,
											"end": 1711,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 1633,
											"end": 1711,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1625,
											"end": 1711,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1625,
											"end": 1711,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1405,
											"end": 1718,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1405,
											"end": 1718,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1405,
											"end": 1718,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1405,
											"end": 1718,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1405,
											"end": 1718,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1724,
											"end": 2143,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 1724,
											"end": 2143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1890,
											"end": 1894,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1928,
											"end": 1930,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1917,
											"end": 1926,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1913,
											"end": 1931,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1905,
											"end": 1931,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1905,
											"end": 1931,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1977,
											"end": 1986,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1971,
											"end": 1975,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1967,
											"end": 1987,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 1964,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1952,
											"end": 1961,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1948,
											"end": 1965,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1941,
											"end": 1988,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2005,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 2131,
											"end": 2135,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2005,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 2005,
											"end": 2136,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2005,
											"end": 2136,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 2005,
											"end": 2136,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1997,
											"end": 2136,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1997,
											"end": 2136,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1724,
											"end": 2143,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1724,
											"end": 2143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1724,
											"end": 2143,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1724,
											"end": 2143,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2149,
											"end": 2247,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 2149,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2234,
											"end": 2239,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2228,
											"end": 2240,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2218,
											"end": 2240,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2218,
											"end": 2240,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2149,
											"end": 2247,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2149,
											"end": 2247,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2149,
											"end": 2247,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2149,
											"end": 2247,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2253,
											"end": 2352,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 2253,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2305,
											"end": 2311,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2339,
											"end": 2344,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2333,
											"end": 2345,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2345,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2345,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2253,
											"end": 2352,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2253,
											"end": 2352,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2253,
											"end": 2352,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2253,
											"end": 2352,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2358,
											"end": 2505,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 2358,
											"end": 2505,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2459,
											"end": 2470,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2496,
											"end": 2499,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2481,
											"end": 2499,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2481,
											"end": 2499,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2358,
											"end": 2505,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2358,
											"end": 2505,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2358,
											"end": 2505,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2358,
											"end": 2505,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2358,
											"end": 2505,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2511,
											"end": 2680,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 2511,
											"end": 2680,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2595,
											"end": 2606,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2629,
											"end": 2635,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2624,
											"end": 2627,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2617,
											"end": 2636,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2669,
											"end": 2673,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2664,
											"end": 2667,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2660,
											"end": 2674,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2645,
											"end": 2674,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2511,
											"end": 2680,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2511,
											"end": 2680,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2511,
											"end": 2680,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2511,
											"end": 2680,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2511,
											"end": 2680,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2686,
											"end": 2993,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 2686,
											"end": 2993,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2754,
											"end": 2755,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2764,
											"end": 2877,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 2764,
											"end": 2877,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2778,
											"end": 2784,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2776,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2772,
											"end": 2785,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2764,
											"end": 2877,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2764,
											"end": 2877,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 2764,
											"end": 2877,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2863,
											"end": 2864,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2858,
											"end": 2861,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2854,
											"end": 2865,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2848,
											"end": 2866,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2844,
											"end": 2845,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2842,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2835,
											"end": 2846,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2828,
											"end": 2867,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2800,
											"end": 2802,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2797,
											"end": 2798,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2793,
											"end": 2803,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2788,
											"end": 2803,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2788,
											"end": 2803,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2764,
											"end": 2877,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 2764,
											"end": 2877,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2764,
											"end": 2877,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 2764,
											"end": 2877,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2895,
											"end": 2901,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2892,
											"end": 2893,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2889,
											"end": 2902,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2886,
											"end": 2987,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2886,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 2886,
											"end": 2987,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2975,
											"end": 2976,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2966,
											"end": 2972,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2961,
											"end": 2964,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2957,
											"end": 2973,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2950,
											"end": 2977,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2886,
											"end": 2987,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 2886,
											"end": 2987,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2735,
											"end": 2993,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2686,
											"end": 2993,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2686,
											"end": 2993,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2686,
											"end": 2993,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2686,
											"end": 2993,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2999,
											"end": 3101,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 2999,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3040,
											"end": 3046,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3091,
											"end": 3093,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3087,
											"end": 3094,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3082,
											"end": 3084,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3075,
											"end": 3080,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3071,
											"end": 3085,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3067,
											"end": 3095,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3057,
											"end": 3095,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3057,
											"end": 3095,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2999,
											"end": 3101,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2999,
											"end": 3101,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2999,
											"end": 3101,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2999,
											"end": 3101,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3107,
											"end": 3332,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 3107,
											"end": 3332,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3247,
											"end": 3281,
											"name": "PUSH",
											"source": 7,
											"value": "416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F"
										},
										{
											"begin": 3243,
											"end": 3244,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3235,
											"end": 3241,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3231,
											"end": 3245,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3224,
											"end": 3282,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3316,
											"end": 3324,
											"name": "PUSH",
											"source": 7,
											"value": "6E74726163740000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3311,
											"end": 3313,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3303,
											"end": 3309,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3314,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3292,
											"end": 3325,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3107,
											"end": 3332,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3107,
											"end": 3332,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										}
									],
									".data": {
										"9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564"
									}
								},
								"9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564"
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the upgradeable proxy with an initial implementation specified by `_logic`. If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyTokenProxy.sol\":\"MyTokenProxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0xabf3f59bc0e5423eae45e459dbe92e7052c6983628d39008590edc852a62f94a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89c2a0f70157c13845be5cb49b078a6374fee3a78fa950052a3af26190255da8\",\"dweb:/ipfs/QmUcvMEQH1oMM2pUyMuDiBUKdvvnTz1NRB8bmPHrVq8725\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xd5c50c54bf02740ebd122ff06832546cb5fa84486d52695a9ccfd11666e0c81d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39e096c60a6eb1c6a257122d515496bd92d0c6a693a8f07acb6aa4b1263e95d4\",\"dweb:/ipfs/QmPs5trJBacCiSkezP6tpevapuRYWNY6mqSFzsMCJj7e6B\"]},\"contracts/MyTokenProxy.sol\":{\"keccak256\":\"0xe7da3b21cb12b40382b2f6ad13e3504af332266577ab1cba2491e18545019233\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac71d2d9ec59b3aff85363ccb93f0befca07da8539bcc23c8e6512fdfee452e4\",\"dweb:/ipfs/QmVy8VccZFyr6j9mUUMvkSDUXNxkoe3H21FtvtJ9L16KpM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
					"exportedSymbols": {
						"IERC1822Proxiable": [
							9
						]
					},
					"id": 10,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:203:0",
								"text": " @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
							},
							"fullyImplemented": false,
							"id": 9,
							"linearizedBaseContracts": [
								9
							],
							"name": "IERC1822Proxiable",
							"nameLocation": "352:17:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "376:438:0",
										"text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
									},
									"functionSelector": "52d1902d",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proxiableUUID",
									"nameLocation": "828:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "841:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "867:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 5,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:9:0"
									},
									"scope": 9,
									"src": "819:57:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 10,
							"src": "342:536:0",
							"usedErrors": []
						}
					],
					"src": "113:766:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
					"exportedSymbols": {
						"Address": [
							684
						],
						"ERC1967Upgrade": [
							327
						],
						"IBeacon": [
							389
						],
						"IERC1822Proxiable": [
							9
						],
						"StorageSlot": [
							744
						]
					},
					"id": 328,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 11,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
							"file": "../beacon/IBeacon.sol",
							"id": 12,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 328,
							"sourceUnit": 390,
							"src": "141:31:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"file": "../../interfaces/draft-IERC1822.sol",
							"id": 13,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 328,
							"sourceUnit": 10,
							"src": "173:45:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 14,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 328,
							"sourceUnit": 685,
							"src": "219:33:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "../../utils/StorageSlot.sol",
							"id": 15,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 328,
							"sourceUnit": 745,
							"src": "253:37:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 16,
								"nodeType": "StructuredDocumentation",
								"src": "292:236:1",
								"text": " @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n _Available since v4.1._\n @custom:oz-upgrades-unsafe-allow delegatecall"
							},
							"fullyImplemented": true,
							"id": 327,
							"linearizedBaseContracts": [
								327
							],
							"name": "ERC1967Upgrade",
							"nameLocation": "547:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 19,
									"mutability": "constant",
									"name": "_ROLLBACK_SLOT",
									"nameLocation": "672:14:1",
									"nodeType": "VariableDeclaration",
									"scope": 327,
									"src": "647:108:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 17,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "647:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307834393130666466613136666564333236306564306537313437663763633664613131613630323038623562393430366431326136333536313466666439313433",
										"id": 18,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "689:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_33048860383849004559742813297059419343339852917517107368639918720169455489347_by_1",
											"typeString": "int_const 3304...(69 digits omitted)...9347"
										},
										"value": "0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "762:214:1",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n validated in the constructor."
									},
									"id": 23,
									"mutability": "constant",
									"name": "_IMPLEMENTATION_SLOT",
									"nameLocation": "1007:20:1",
									"nodeType": "VariableDeclaration",
									"scope": 327,
									"src": "981:115:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 21,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "981:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 22,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1030:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "1103:68:1",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"id": 28,
									"name": "Upgraded",
									"nameLocation": "1182:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1207:14:1",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "1191:30:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1191:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1190:32:1"
									},
									"src": "1176:47:1"
								},
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "1363:78:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 36,
																"name": "_IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 23,
																"src": "1407:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 34,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 744,
																"src": "1380:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$744_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 710,
															"src": "1380:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$690_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 37,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1380:48:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$690_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 38,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 689,
													"src": "1380:54:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 33,
												"id": 39,
												"nodeType": "Return",
												"src": "1373:61:1"
											}
										]
									},
									"documentation": {
										"id": 29,
										"nodeType": "StructuredDocumentation",
										"src": "1229:67:1",
										"text": " @dev Returns the current implementation address."
									},
									"id": 41,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getImplementation",
									"nameLocation": "1310:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1328:2:1"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1354:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 31,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1354:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1353:9:1"
									},
									"scope": 327,
									"src": "1301:140:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 64,
										"nodeType": "Block",
										"src": "1595:196:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 50,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 44,
																	"src": "1632:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 48,
																	"name": "Address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 684,
																	"src": "1613:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Address_$684_$",
																		"typeString": "type(library Address)"
																	}
																},
																"id": 49,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 407,
																"src": "1613:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 51,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1613:37:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
															"id": 52,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1652:47:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65",
																"typeString": "literal_string \"ERC1967: new implementation is not a contract\""
															},
															"value": "ERC1967: new implementation is not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65",
																"typeString": "literal_string \"ERC1967: new implementation is not a contract\""
															}
														],
														"id": 47,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1605:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1605:95:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 54,
												"nodeType": "ExpressionStatement",
												"src": "1605:95:1"
											},
											{
												"expression": {
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 58,
																	"name": "_IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "1737:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 55,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 744,
																	"src": "1710:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$744_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 57,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 710,
																"src": "1710:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$690_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 59,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1710:48:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$690_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 60,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 689,
														"src": "1710:54:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 61,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "1767:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1710:74:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 63,
												"nodeType": "ExpressionStatement",
												"src": "1710:74:1"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "1447:80:1",
										"text": " @dev Stores a new address in the EIP1967 implementation slot."
									},
									"id": 65,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "1541:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1568:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "1560:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1559:27:1"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1595:0:1"
									},
									"scope": 327,
									"src": "1532:259:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "1953:96:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 72,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 68,
															"src": "1982:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 71,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "1963:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1963:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 74,
												"nodeType": "ExpressionStatement",
												"src": "1963:37:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 76,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 68,
															"src": "2024:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 75,
														"name": "Upgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "2015:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2015:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 78,
												"nodeType": "EmitStatement",
												"src": "2010:32:1"
											}
										]
									},
									"documentation": {
										"id": 66,
										"nodeType": "StructuredDocumentation",
										"src": "1797:95:1",
										"text": " @dev Perform implementation upgrade\n Emits an {Upgraded} event."
									},
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeTo",
									"nameLocation": "1906:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1925:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "1917:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 67,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1917:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1916:27:1"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1953:0:1"
									},
									"scope": 327,
									"src": "1897:152:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "2311:167:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 91,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "2332:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_upgradeTo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "2321:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2321:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 93,
												"nodeType": "ExpressionStatement",
												"src": "2321:29:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 97,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 94,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "2364:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 95,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2364:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2378:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2364:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"id": 98,
														"name": "forceCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "2383:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2364:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 108,
												"nodeType": "IfStatement",
												"src": "2360:112:1",
												"trueBody": {
													"id": 107,
													"nodeType": "Block",
													"src": "2394:78:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 103,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 83,
																		"src": "2437:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 104,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 85,
																		"src": "2456:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 100,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 684,
																		"src": "2408:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$684_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 102,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 617,
																	"src": "2408:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2408:53:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 106,
															"nodeType": "ExpressionStatement",
															"src": "2408:53:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2055:123:1",
										"text": " @dev Perform implementation upgrade with additional setup call.\n Emits an {Upgraded} event."
									},
									"id": 110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCall",
									"nameLocation": "2192:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2227:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "2219:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2219:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2267:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "2254:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 84,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2254:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "forceCall",
												"nameLocation": "2286:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "2281:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 86,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2281:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2209:92:1"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2311:0:1"
									},
									"scope": 327,
									"src": "2183:295:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 162,
										"nodeType": "Block",
										"src": "2782:820:1",
										"statements": [
											{
												"condition": {
													"expression": {
														"arguments": [
															{
																"id": 122,
																"name": "_ROLLBACK_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "3123:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 120,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 744,
																"src": "3096:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$744_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "getBooleanSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 721,
															"src": "3096:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_BooleanSlot_$693_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.BooleanSlot storage pointer)"
															}
														},
														"id": 123,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3096:42:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BooleanSlot_$693_storage_ptr",
															"typeString": "struct StorageSlot.BooleanSlot storage pointer"
														}
													},
													"id": 124,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 692,
													"src": "3096:48:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 160,
													"nodeType": "Block",
													"src": "3214:382:1",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 145,
																		"nodeType": "Block",
																		"src": "3308:115:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							},
																							"id": 141,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 139,
																								"name": "slot",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 136,
																								"src": "3334:4:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "==",
																							"rightExpression": {
																								"id": 140,
																								"name": "_IMPLEMENTATION_SLOT",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 23,
																								"src": "3342:20:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"src": "3334:28:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						{
																							"hexValue": "45524331393637557067726164653a20756e737570706f727465642070726f786961626c6555554944",
																							"id": 142,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3364:43:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c",
																								"typeString": "literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""
																							},
																							"value": "ERC1967Upgrade: unsupported proxiableUUID"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							},
																							{
																								"typeIdentifier": "t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c",
																								"typeString": "literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""
																							}
																						],
																						"id": 138,
																						"name": "require",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967278,
																							4294967278
																						],
																						"referencedDeclaration": 4294967278,
																						"src": "3326:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (bool,string memory) pure"
																						}
																					},
																					"id": 143,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3326:82:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 144,
																				"nodeType": "ExpressionStatement",
																				"src": "3326:82:1"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 146,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 137,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 136,
																				"mutability": "mutable",
																				"name": "slot",
																				"nameLocation": "3302:4:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 146,
																				"src": "3294:12:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 135,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "3294:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "3293:14:1"
																	},
																	"src": "3285:138:1"
																},
																{
																	"block": {
																		"id": 151,
																		"nodeType": "Block",
																		"src": "3430:89:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "45524331393637557067726164653a206e657720696d706c656d656e746174696f6e206973206e6f742055555053",
																							"id": 148,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3455:48:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24",
																								"typeString": "literal_string \"ERC1967Upgrade: new implementation is not UUPS\""
																							},
																							"value": "ERC1967Upgrade: new implementation is not UUPS"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24",
																								"typeString": "literal_string \"ERC1967Upgrade: new implementation is not UUPS\""
																							}
																						],
																						"id": 147,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "3448:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 149,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3448:56:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 150,
																				"nodeType": "ExpressionStatement",
																				"src": "3448:56:1"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 152,
																	"nodeType": "TryCatchClause",
																	"src": "3424:95:1"
																}
															],
															"externalCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 131,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 113,
																				"src": "3250:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 130,
																			"name": "IERC1822Proxiable",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 9,
																			"src": "3232:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1822Proxiable_$9_$",
																				"typeString": "type(contract IERC1822Proxiable)"
																			}
																		},
																		"id": 132,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3232:36:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1822Proxiable_$9",
																			"typeString": "contract IERC1822Proxiable"
																		}
																	},
																	"id": 133,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "proxiableUUID",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 8,
																	"src": "3232:50:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
																		"typeString": "function () view external returns (bytes32)"
																	}
																},
																"id": 134,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3232:52:1",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 153,
															"nodeType": "TryStatement",
															"src": "3228:291:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 155,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 113,
																		"src": "3550:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 156,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 115,
																		"src": "3569:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 157,
																		"name": "forceCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 117,
																		"src": "3575:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 154,
																	"name": "_upgradeToAndCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 110,
																	"src": "3532:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
																		"typeString": "function (address,bytes memory,bool)"
																	}
																},
																"id": 158,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3532:53:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 159,
															"nodeType": "ExpressionStatement",
															"src": "3532:53:1"
														}
													]
												},
												"id": 161,
												"nodeType": "IfStatement",
												"src": "3092:504:1",
												"trueBody": {
													"id": 129,
													"nodeType": "Block",
													"src": "3146:62:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 126,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 113,
																		"src": "3179:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 125,
																	"name": "_setImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "3160:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3160:37:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 128,
															"nodeType": "ExpressionStatement",
															"src": "3160:37:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "2484:161:1",
										"text": " @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n Emits an {Upgraded} event."
									},
									"id": 163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCallUUPS",
									"nameLocation": "2659:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2698:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2690:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2690:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2738:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2725:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 114,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2725:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "forceCall",
												"nameLocation": "2757:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2752:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 116,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2752:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2680:92:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2782:0:1"
									},
									"scope": 327,
									"src": "2650:952:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "3608:189:1",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n validated in the constructor."
									},
									"id": 167,
									"mutability": "constant",
									"name": "_ADMIN_SLOT",
									"nameLocation": "3828:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 327,
									"src": "3802:106:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 165,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3802:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 166,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3842:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "3915:67:1",
										"text": " @dev Emitted when the admin account has changed."
									},
									"id": 174,
									"name": "AdminChanged",
									"nameLocation": "3993:12:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "4014:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "4006:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4006:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4037:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "4029:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:41:1"
									},
									"src": "3987:60:1"
								},
								{
									"body": {
										"id": 186,
										"nodeType": "Block",
										"src": "4161:69:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 182,
																"name": "_ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 167,
																"src": "4205:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 180,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 744,
																"src": "4178:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$744_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 710,
															"src": "4178:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$690_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 183,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4178:39:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$690_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 184,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 689,
													"src": "4178:45:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 179,
												"id": 185,
												"nodeType": "Return",
												"src": "4171:52:1"
											}
										]
									},
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "4053:50:1",
										"text": " @dev Returns the current admin."
									},
									"id": 187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAdmin",
									"nameLocation": "4117:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4126:2:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "4152:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4152:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4151:9:1"
									},
									"scope": 327,
									"src": "4108:122:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 212,
										"nodeType": "Block",
										"src": "4357:156:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 194,
																"name": "newAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 190,
																"src": "4375:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4395:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4387:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 195,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4387:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 198,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4387:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4375:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a206e65772061646d696e20697320746865207a65726f2061646472657373",
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4399:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5",
																"typeString": "literal_string \"ERC1967: new admin is the zero address\""
															},
															"value": "ERC1967: new admin is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5",
																"typeString": "literal_string \"ERC1967: new admin is the zero address\""
															}
														],
														"id": 193,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4367:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4367:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 202,
												"nodeType": "ExpressionStatement",
												"src": "4367:73:1"
											},
											{
												"expression": {
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 206,
																	"name": "_ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "4477:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 203,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 744,
																	"src": "4450:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$744_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 710,
																"src": "4450:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$690_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4450:39:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$690_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 208,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 689,
														"src": "4450:45:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 209,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 190,
														"src": "4498:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4450:56:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "4450:56:1"
											}
										]
									},
									"documentation": {
										"id": 188,
										"nodeType": "StructuredDocumentation",
										"src": "4236:71:1",
										"text": " @dev Stores a new address in the EIP1967 admin slot."
									},
									"id": 213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "4321:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "4331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4330:18:1"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4357:0:1"
									},
									"scope": 327,
									"src": "4312:201:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 229,
										"nodeType": "Block",
										"src": "4673:86:1",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 220,
																"name": "_getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 187,
																"src": "4701:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4701:11:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 222,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "4714:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 219,
														"name": "AdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "4688:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4688:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 224,
												"nodeType": "EmitStatement",
												"src": "4683:40:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 226,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "4743:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 225,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 213,
														"src": "4733:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4733:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 228,
												"nodeType": "ExpressionStatement",
												"src": "4733:19:1"
											}
										]
									},
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "4519:100:1",
										"text": " @dev Changes the admin of the proxy.\n Emits an {AdminChanged} event."
									},
									"id": 230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_changeAdmin",
									"nameLocation": "4633:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4654:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "4646:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4646:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4645:18:1"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4673:0:1"
									},
									"scope": 327,
									"src": "4624:135:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "4765:232:1",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."
									},
									"id": 234,
									"mutability": "constant",
									"name": "_BEACON_SLOT",
									"nameLocation": "5028:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 327,
									"src": "5002:107:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 232,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "5002:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 233,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5043:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 235,
										"nodeType": "StructuredDocumentation",
										"src": "5116:60:1",
										"text": " @dev Emitted when the beacon is upgraded."
									},
									"id": 239,
									"name": "BeaconUpgraded",
									"nameLocation": "5187:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "5218:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "5202:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5202:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5201:24:1"
									},
									"src": "5181:45:1"
								},
								{
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "5342:70:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 247,
																"name": "_BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 234,
																"src": "5386:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 245,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 744,
																"src": "5359:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$744_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 710,
															"src": "5359:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$690_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 248,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5359:40:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$690_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 249,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 689,
													"src": "5359:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 244,
												"id": 250,
												"nodeType": "Return",
												"src": "5352:53:1"
											}
										]
									},
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "5232:51:1",
										"text": " @dev Returns the current beacon."
									},
									"id": 252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getBeacon",
									"nameLocation": "5297:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5307:2:1"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "5333:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5333:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5332:9:1"
									},
									"scope": 327,
									"src": "5288:124:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 287,
										"nodeType": "Block",
										"src": "5541:324:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 261,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 255,
																	"src": "5578:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 259,
																	"name": "Address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 684,
																	"src": "5559:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Address_$684_$",
																		"typeString": "type(library Address)"
																	}
																},
																"id": 260,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 407,
																"src": "5559:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5559:29:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a206e657720626561636f6e206973206e6f74206120636f6e7472616374",
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5590:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470",
																"typeString": "literal_string \"ERC1967: new beacon is not a contract\""
															},
															"value": "ERC1967: new beacon is not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470",
																"typeString": "literal_string \"ERC1967: new beacon is not a contract\""
															}
														],
														"id": 258,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5551:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5551:79:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 265,
												"nodeType": "ExpressionStatement",
												"src": "5551:79:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"arguments": [
																				{
																					"id": 270,
																					"name": "newBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 255,
																					"src": "5688:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 269,
																				"name": "IBeacon",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 389,
																				"src": "5680:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IBeacon_$389_$",
																					"typeString": "type(contract IBeacon)"
																				}
																			},
																			"id": 271,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5680:18:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBeacon_$389",
																				"typeString": "contract IBeacon"
																			}
																		},
																		"id": 272,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "implementation",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 388,
																		"src": "5680:33:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																			"typeString": "function () view external returns (address)"
																		}
																	},
																	"id": 273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5680:35:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 267,
																	"name": "Address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 684,
																	"src": "5661:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Address_$684_$",
																		"typeString": "type(library Address)"
																	}
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 407,
																"src": "5661:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5661:55:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a20626561636f6e20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
															"id": 275,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5730:50:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8",
																"typeString": "literal_string \"ERC1967: beacon implementation is not a contract\""
															},
															"value": "ERC1967: beacon implementation is not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8",
																"typeString": "literal_string \"ERC1967: beacon implementation is not a contract\""
															}
														],
														"id": 266,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5640:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5640:150:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "5640:150:1"
											},
											{
												"expression": {
													"id": 285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 281,
																	"name": "_BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 234,
																	"src": "5827:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 278,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 744,
																	"src": "5800:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$744_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 710,
																"src": "5800:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$690_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5800:40:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$690_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 283,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 689,
														"src": "5800:46:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 284,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 255,
														"src": "5849:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5800:58:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 286,
												"nodeType": "ExpressionStatement",
												"src": "5800:58:1"
											}
										]
									},
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "5418:71:1",
										"text": " @dev Stores a new beacon in the EIP1967 beacon slot."
									},
									"id": 288,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "5503:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5522:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "5514:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5514:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5513:19:1"
									},
									"returnParameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5541:0:1"
									},
									"scope": 327,
									"src": "5494:371:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "6294:217:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 299,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 291,
															"src": "6315:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 298,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 288,
														"src": "6304:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6304:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 301,
												"nodeType": "ExpressionStatement",
												"src": "6304:21:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 303,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 291,
															"src": "6355:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 302,
														"name": "BeaconUpgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 239,
														"src": "6340:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6340:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 305,
												"nodeType": "EmitStatement",
												"src": "6335:30:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 309,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 306,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 293,
																"src": "6379:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "6379:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6393:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6379:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"id": 310,
														"name": "forceCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "6398:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6379:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 324,
												"nodeType": "IfStatement",
												"src": "6375:130:1",
												"trueBody": {
													"id": 323,
													"nodeType": "Block",
													"src": "6409:96:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 316,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 291,
																						"src": "6460:9:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 315,
																					"name": "IBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 389,
																					"src": "6452:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeacon_$389_$",
																						"typeString": "type(contract IBeacon)"
																					}
																				},
																				"id": 317,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6452:18:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeacon_$389",
																					"typeString": "contract IBeacon"
																				}
																			},
																			"id": 318,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 388,
																			"src": "6452:33:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 319,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6452:35:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 320,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 293,
																		"src": "6489:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 312,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 684,
																		"src": "6423:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$684_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 617,
																	"src": "6423:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6423:71:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 322,
															"nodeType": "ExpressionStatement",
															"src": "6423:71:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 289,
										"nodeType": "StructuredDocumentation",
										"src": "5871:292:1",
										"text": " @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n Emits a {BeaconUpgraded} event."
									},
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeBeaconToAndCall",
									"nameLocation": "6177:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "6218:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "6210:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6210:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6250:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "6237:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 292,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6237:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "forceCall",
												"nameLocation": "6269:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "6264:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 294,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6264:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6200:84:1"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6294:0:1"
									},
									"scope": 327,
									"src": "6168:343:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 328,
							"src": "529:5984:1",
							"usedErrors": []
						}
					],
					"src": "116:6398:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/proxy/Proxy.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/Proxy.sol",
					"exportedSymbols": {
						"Proxy": [
							379
						]
					},
					"id": 380,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 329,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 330,
								"nodeType": "StructuredDocumentation",
								"src": "124:598:2",
								"text": " @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n be specified by overriding the virtual {_implementation} function.\n Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n different contract through the {_delegate} function.\n The success and return data of the delegated call will be returned back to the caller of the proxy."
							},
							"fullyImplemented": false,
							"id": 379,
							"linearizedBaseContracts": [
								379
							],
							"name": "Proxy",
							"nameLocation": "741:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "1008:835:2",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1027:810:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1280:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1283:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nodeType": "YulIdentifier",
																			"src": "1286:12:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1286:14:2"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1267:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1267:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1267:34:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1428:74:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "1455:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1455:5:2"
																	},
																	{
																		"name": "implementation",
																		"nodeType": "YulIdentifier",
																		"src": "1462:14:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1478:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nodeType": "YulIdentifier",
																			"src": "1481:12:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1481:14:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1497:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1500:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "delegatecall",
																	"nodeType": "YulIdentifier",
																	"src": "1442:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1442:60:2"
															},
															"variables": [
																{
																	"name": "result",
																	"nodeType": "YulTypedName",
																	"src": "1432:6:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1570:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1573:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "1576:14:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1576:16:2"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1555:14:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1555:38:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1555:38:2"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1688:59:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1713:1:2",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nodeType": "YulIdentifier",
																								"src": "1716:14:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1716:16:2"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "1706:6:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1706:27:2"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1706:27:2"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1681:66:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1686:1:2",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1768:59:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1793:1:2",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nodeType": "YulIdentifier",
																								"src": "1796:14:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1796:16:2"
																						}
																					],
																					"functionName": {
																						"name": "return",
																						"nodeType": "YulIdentifier",
																						"src": "1786:6:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1786:27:2"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1786:27:2"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1760:67:2",
																	"value": "default"
																}
															],
															"expression": {
																"name": "result",
																"nodeType": "YulIdentifier",
																"src": "1614:6:2"
															},
															"nodeType": "YulSwitch",
															"src": "1607:220:2"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 333,
														"isOffset": false,
														"isSlot": false,
														"src": "1462:14:2",
														"valueSize": 1
													}
												],
												"id": 336,
												"nodeType": "InlineAssembly",
												"src": "1018:819:2"
											}
										]
									},
									"documentation": {
										"id": 331,
										"nodeType": "StructuredDocumentation",
										"src": "753:190:2",
										"text": " @dev Delegates the current call to `implementation`.\n This function does not return to its internal call site, it will return directly to the external caller."
									},
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_delegate",
									"nameLocation": "957:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "975:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "967:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "967:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "966:24:2"
									},
									"returnParameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1008:0:2"
									},
									"scope": 379,
									"src": "948:895:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "1849:173:2",
										"text": " @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\n and {_fallback} should delegate."
									},
									"id": 344,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_implementation",
									"nameLocation": "2036:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2051:2:2"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "2085:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2085:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2084:9:2"
									},
									"scope": 379,
									"src": "2027:67:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "2360:72:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 348,
														"name": "_beforeFallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 378,
														"src": "2370:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2370:17:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 350,
												"nodeType": "ExpressionStatement",
												"src": "2370:17:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 352,
																"name": "_implementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 344,
																"src": "2407:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2407:17:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 351,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 338,
														"src": "2397:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2397:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 355,
												"nodeType": "ExpressionStatement",
												"src": "2397:28:2"
											}
										]
									},
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "2100:217:2",
										"text": " @dev Delegates the current call to the address returned by `_implementation()`.\n This function does not return to its internal call site, it will return directly to the external caller."
									},
									"id": 357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_fallback",
									"nameLocation": "2331:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2340:2:2"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2360:0:2"
									},
									"scope": 379,
									"src": "2322:110:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 364,
										"nodeType": "Block",
										"src": "2665:28:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 361,
														"name": "_fallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 357,
														"src": "2675:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2675:11:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "2675:11:2"
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "2438:186:2",
										"text": " @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n function in the contract matches the call data."
									},
									"id": 365,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2637:2:2"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2665:0:2"
									},
									"scope": 379,
									"src": "2629:64:2",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 372,
										"nodeType": "Block",
										"src": "2888:28:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 369,
														"name": "_fallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 357,
														"src": "2898:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2898:11:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 371,
												"nodeType": "ExpressionStatement",
												"src": "2898:11:2"
											}
										]
									},
									"documentation": {
										"id": 366,
										"nodeType": "StructuredDocumentation",
										"src": "2699:149:2",
										"text": " @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\n is empty."
									},
									"id": 373,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2860:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2888:0:2"
									},
									"scope": 379,
									"src": "2853:63:2",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 377,
										"nodeType": "Block",
										"src": "3242:2:2",
										"statements": []
									},
									"documentation": {
										"id": 374,
										"nodeType": "StructuredDocumentation",
										"src": "2922:271:2",
										"text": " @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\n call, or as part of the Solidity `fallback` or `receive` functions.\n If overridden should call `super._beforeFallback()`."
									},
									"id": 378,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeFallback",
									"nameLocation": "3207:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3222:2:2"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3242:0:2"
									},
									"scope": 379,
									"src": "3198:46:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 380,
							"src": "723:2523:2",
							"usedErrors": []
						}
					],
					"src": "99:3148:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
					"exportedSymbols": {
						"IBeacon": [
							389
						]
					},
					"id": 390,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 381,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "93:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 382,
								"nodeType": "StructuredDocumentation",
								"src": "118:79:3",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 389,
							"linearizedBaseContracts": [
								389
							],
							"name": "IBeacon",
							"nameLocation": "208:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "222:162:3",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {BeaconProxy} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 388,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "398:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "412:2:3"
									},
									"returnParameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "438:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "438:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "437:9:3"
									},
									"scope": 389,
									"src": "389:58:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 390,
							"src": "198:251:3",
							"usedErrors": []
						}
					],
					"src": "93:357:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							684
						]
					},
					"id": 685,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 391,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 392,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:4",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 684,
							"linearizedBaseContracts": [
								684
							],
							"name": "Address",
							"nameLocation": "202:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 406,
										"nodeType": "Block",
										"src": "1241:254:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 400,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 395,
																"src": "1465:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 401,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 402,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 403,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 399,
												"id": 405,
												"nodeType": "Return",
												"src": "1458:30:4"
											}
										]
									},
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:4",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "1195:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:4"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "1235:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 397,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:4"
									},
									"scope": 684,
									"src": "1175:320:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 440,
										"nodeType": "Block",
										"src": "2483:241:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 418,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$684",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$684",
																				"typeString": "library Address"
																			}
																		],
																		"id": 417,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 416,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 421,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 412,
																"src": "2526:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 423,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 415,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 425,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:4"
											},
											{
												"assignments": [
													427,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 427,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 440,
														"src": "2578:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 426,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 434,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 428,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 410,
																"src": "2596:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 430,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 412,
																"src": "2618:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 436,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "2647:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 435,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 439,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:4"
											}
										]
									},
									"documentation": {
										"id": 408,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 441,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "2431:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "2458:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:4"
									},
									"returnParameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:4"
									},
									"scope": 684,
									"src": "2412:312:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "3555:84:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 452,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "3585:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "3593:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 454,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 451,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															458,
															478
														],
														"referencedDeclaration": 478,
														"src": "3572:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 450,
												"id": 456,
												"nodeType": "Return",
												"src": "3565:67:4"
											}
										]
									},
									"documentation": {
										"id": 442,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "3488:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "3504:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 445,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:4"
									},
									"returnParameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "3541:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 448,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:4"
									},
									"scope": 684,
									"src": "3466:173:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 477,
										"nodeType": "Block",
										"src": "4008:76:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 471,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "4047:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 472,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4055:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 474,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "4064:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 470,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															498,
															548
														],
														"referencedDeclaration": 548,
														"src": "4025:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 469,
												"id": 476,
												"nodeType": "Return",
												"src": "4018:59:4"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "3892:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "3916:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 462,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "3943:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 464,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:4"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "3994:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 467,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:4"
									},
									"scope": 684,
									"src": "3861:223:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 497,
										"nodeType": "Block",
										"src": "4589:111:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 491,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "4628:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 492,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "4636:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 493,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "4642:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 490,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															498,
															548
														],
														"referencedDeclaration": 548,
														"src": "4606:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 489,
												"id": 496,
												"nodeType": "Return",
												"src": "4599:94:4"
											}
										]
									},
									"documentation": {
										"id": 479,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "4486:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "4510:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 482,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "4537:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:4"
									},
									"returnParameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "4575:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 487,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:4"
									},
									"scope": 684,
									"src": "4446:254:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 547,
										"nodeType": "Block",
										"src": "5127:320:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 515,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$684",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$684",
																				"typeString": "library Address"
																			}
																		],
																		"id": 514,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 513,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 518,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 505,
																"src": "5170:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 520,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 512,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 525,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 501,
																	"src": "5247:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 524,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 407,
																"src": "5236:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 527,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 523,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 529,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:4"
											},
											{
												"assignments": [
													531,
													533
												],
												"declarations": [
													{
														"constant": false,
														"id": 531,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 547,
														"src": "5300:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 530,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 533,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 547,
														"src": "5314:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 532,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 540,
												"initialValue": {
													"arguments": [
														{
															"id": 538,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "5367:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 534,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 501,
																"src": "5341:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 537,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 536,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 505,
																"src": "5360:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 542,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "5406:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 543,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "5415:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 544,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 507,
															"src": "5427:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 541,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 683,
														"src": "5389:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 511,
												"id": 546,
												"nodeType": "Return",
												"src": "5382:58:4"
											}
										]
									},
									"documentation": {
										"id": 499,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:4",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 548,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "4988:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "5012:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 502,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "5039:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "5062:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 506,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:4"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "5113:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 509,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:4"
									},
									"scope": 684,
									"src": "4948:499:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 564,
										"nodeType": "Block",
										"src": "5724:97:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 559,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 551,
															"src": "5760:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 560,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 553,
															"src": "5768:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 561,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 558,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															565,
															600
														],
														"referencedDeclaration": 600,
														"src": "5741:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 557,
												"id": 563,
												"nodeType": "Return",
												"src": "5734:80:4"
											}
										]
									},
									"documentation": {
										"id": 549,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "5652:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "5668:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 552,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:4"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "5710:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 555,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:4"
									},
									"scope": 684,
									"src": "5624:197:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 599,
										"nodeType": "Block",
										"src": "6163:228:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 579,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 568,
																	"src": "6192:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 578,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 407,
																"src": "6181:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 581,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 577,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 583,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:4"
											},
											{
												"assignments": [
													585,
													587
												],
												"declarations": [
													{
														"constant": false,
														"id": 585,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 599,
														"src": "6252:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 584,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 587,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 599,
														"src": "6266:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 586,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 592,
												"initialValue": {
													"arguments": [
														{
															"id": 590,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "6311:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 588,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "6293:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 589,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 594,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "6350:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 595,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 587,
															"src": "6359:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 596,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "6371:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 593,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 683,
														"src": "6333:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 576,
												"id": 598,
												"nodeType": "Return",
												"src": "6326:58:4"
											}
										]
									},
									"documentation": {
										"id": 566,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "6042:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "6066:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 569,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "6093:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 571,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:4"
									},
									"returnParameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "6149:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 574,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:4"
									},
									"scope": 684,
									"src": "6005:386:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 616,
										"nodeType": "Block",
										"src": "6667:101:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 611,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "6705:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 612,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "6713:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 613,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 610,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															617,
															652
														],
														"referencedDeclaration": 652,
														"src": "6684:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 609,
												"id": 615,
												"nodeType": "Return",
												"src": "6677:84:4"
											}
										]
									},
									"documentation": {
										"id": 601,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 617,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "6600:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "6616:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 604,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:4"
									},
									"returnParameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "6653:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 607,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:4"
									},
									"scope": 684,
									"src": "6570:198:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 651,
										"nodeType": "Block",
										"src": "7109:232:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 631,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 620,
																	"src": "7138:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 630,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 407,
																"src": "7127:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 629,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 635,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:4"
											},
											{
												"assignments": [
													637,
													639
												],
												"declarations": [
													{
														"constant": false,
														"id": 637,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 651,
														"src": "7200:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 636,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 639,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 651,
														"src": "7214:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 638,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 644,
												"initialValue": {
													"arguments": [
														{
															"id": 642,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "7261:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 640,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 620,
															"src": "7241:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 641,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 646,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "7300:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 647,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "7309:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 648,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "7321:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 645,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 683,
														"src": "7283:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 628,
												"id": 650,
												"nodeType": "Return",
												"src": "7276:58:4"
											}
										]
									},
									"documentation": {
										"id": 618,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 652,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "6993:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "7017:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 621,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "7044:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 623,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:4"
									},
									"returnParameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "7095:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 626,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:4"
									},
									"scope": 684,
									"src": "6954:387:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 682,
										"nodeType": "Block",
										"src": "7721:582:4",
										"statements": [
											{
												"condition": {
													"id": 664,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 655,
													"src": "7735:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 680,
													"nodeType": "Block",
													"src": "7792:505:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 671,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 668,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 657,
																		"src": "7876:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 669,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 670,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 678,
																"nodeType": "Block",
																"src": "8234:53:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 675,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 659,
																					"src": "8259:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 674,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8252:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 676,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8252:20:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 677,
																		"nodeType": "ExpressionStatement",
																		"src": "8252:20:4"
																	}
																]
															},
															"id": 679,
															"nodeType": "IfStatement",
															"src": "7872:415:4",
															"trueBody": {
																"id": 673,
																"nodeType": "Block",
																"src": "7899:329:4",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8069:145:4",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8091:40:4",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8120:10:4"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8114:5:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8114:17:4"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8095:15:4",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8163:2:4",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8167:10:4"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8159:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8159:19:4"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8180:15:4"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8152:6:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8152:44:4"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8152:44:4"
																				}
																			]
																		},
																		"documentation": "@solidity memory-safe-assembly",
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 657,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8120:10:4",
																				"valueSize": 1
																			},
																			{
																				"declaration": 657,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8167:10:4",
																				"valueSize": 1
																			}
																		],
																		"id": 672,
																		"nodeType": "InlineAssembly",
																		"src": "8060:154:4"
																	}
																]
															}
														}
													]
												},
												"id": 681,
												"nodeType": "IfStatement",
												"src": "7731:566:4",
												"trueBody": {
													"id": 667,
													"nodeType": "Block",
													"src": "7744:42:4",
													"statements": [
														{
															"expression": {
																"id": 665,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 657,
																"src": "7765:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 663,
															"id": 666,
															"nodeType": "Return",
															"src": "7758:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 653,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:4",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 683,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "7596:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 654,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "7618:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 656,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "7651:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 658,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:4"
									},
									"returnParameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "7707:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 661,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:4"
									},
									"scope": 684,
									"src": "7561:742:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 685,
							"src": "194:8111:4",
							"usedErrors": []
						}
					],
					"src": "101:8205:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							744
						]
					},
					"id": 745,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 686,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 687,
								"nodeType": "StructuredDocumentation",
								"src": "130:1148:5",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._"
							},
							"fullyImplemented": true,
							"id": 744,
							"linearizedBaseContracts": [
								744
							],
							"name": "StorageSlot",
							"nameLocation": "1287:11:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 690,
									"members": [
										{
											"constant": false,
											"id": 689,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1342:5:5",
											"nodeType": "VariableDeclaration",
											"scope": 690,
											"src": "1334:13:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 688,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1334:7:5",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1312:11:5",
									"nodeType": "StructDefinition",
									"scope": 744,
									"src": "1305:49:5",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 693,
									"members": [
										{
											"constant": false,
											"id": 692,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1394:5:5",
											"nodeType": "VariableDeclaration",
											"scope": 693,
											"src": "1389:10:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 691,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1389:4:5",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1367:11:5",
									"nodeType": "StructDefinition",
									"scope": 744,
									"src": "1360:46:5",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 696,
									"members": [
										{
											"constant": false,
											"id": 695,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1449:5:5",
											"nodeType": "VariableDeclaration",
											"scope": 696,
											"src": "1441:13:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 694,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1441:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1419:11:5",
									"nodeType": "StructDefinition",
									"scope": 744,
									"src": "1412:49:5",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 699,
									"members": [
										{
											"constant": false,
											"id": 698,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1504:5:5",
											"nodeType": "VariableDeclaration",
											"scope": 699,
											"src": "1496:13:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 697,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1496:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1474:11:5",
									"nodeType": "StructDefinition",
									"scope": 744,
									"src": "1467:49:5",
									"visibility": "public"
								},
								{
									"body": {
										"id": 709,
										"nodeType": "Block",
										"src": "1698:106:5",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1760:38:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1774:14:5",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "1784:4:5"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "1774:6:5"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 706,
														"isOffset": false,
														"isSlot": true,
														"src": "1774:6:5",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 702,
														"isOffset": false,
														"isSlot": false,
														"src": "1784:4:5",
														"valueSize": 1
													}
												],
												"id": 708,
												"nodeType": "InlineAssembly",
												"src": "1751:47:5"
											}
										]
									},
									"documentation": {
										"id": 700,
										"nodeType": "StructuredDocumentation",
										"src": "1522:87:5",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1623:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1646:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "1638:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 701,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1638:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1637:14:5"
									},
									"returnParameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1695:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "1675:21:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$690_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 705,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 704,
														"name": "AddressSlot",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 690,
														"src": "1675:11:5"
													},
													"referencedDeclaration": 690,
													"src": "1675:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$690_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1674:23:5"
									},
									"scope": 744,
									"src": "1614:190:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 720,
										"nodeType": "Block",
										"src": "1986:106:5",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2048:38:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2062:14:5",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2072:4:5"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2062:6:5"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 717,
														"isOffset": false,
														"isSlot": true,
														"src": "2062:6:5",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 713,
														"isOffset": false,
														"isSlot": false,
														"src": "2072:4:5",
														"valueSize": 1
													}
												],
												"id": 719,
												"nodeType": "InlineAssembly",
												"src": "2039:47:5"
											}
										]
									},
									"documentation": {
										"id": 711,
										"nodeType": "StructuredDocumentation",
										"src": "1810:87:5",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 721,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "1911:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1934:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "1926:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 712,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1925:14:5"
									},
									"returnParameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1983:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "1963:21:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$693_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 716,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 715,
														"name": "BooleanSlot",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 693,
														"src": "1963:11:5"
													},
													"referencedDeclaration": 693,
													"src": "1963:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$693_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1962:23:5"
									},
									"scope": 744,
									"src": "1902:190:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 731,
										"nodeType": "Block",
										"src": "2274:106:5",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2336:38:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2350:14:5",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2360:4:5"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2350:6:5"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 728,
														"isOffset": false,
														"isSlot": true,
														"src": "2350:6:5",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 724,
														"isOffset": false,
														"isSlot": false,
														"src": "2360:4:5",
														"valueSize": 1
													}
												],
												"id": 730,
												"nodeType": "InlineAssembly",
												"src": "2327:47:5"
											}
										]
									},
									"documentation": {
										"id": 722,
										"nodeType": "StructuredDocumentation",
										"src": "2098:87:5",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 732,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2199:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2222:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "2214:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 723,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2214:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2213:14:5"
									},
									"returnParameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2271:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "2251:21:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$696_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 727,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 726,
														"name": "Bytes32Slot",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 696,
														"src": "2251:11:5"
													},
													"referencedDeclaration": 696,
													"src": "2251:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$696_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2250:23:5"
									},
									"scope": 744,
									"src": "2190:190:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 742,
										"nodeType": "Block",
										"src": "2562:106:5",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2624:38:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2638:14:5",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2648:4:5"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2638:6:5"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 739,
														"isOffset": false,
														"isSlot": true,
														"src": "2638:6:5",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 735,
														"isOffset": false,
														"isSlot": false,
														"src": "2648:4:5",
														"valueSize": 1
													}
												],
												"id": 741,
												"nodeType": "InlineAssembly",
												"src": "2615:47:5"
											}
										]
									},
									"documentation": {
										"id": 733,
										"nodeType": "StructuredDocumentation",
										"src": "2386:87:5",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 743,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2487:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2510:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "2502:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 734,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2502:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2501:14:5"
									},
									"returnParameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2559:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "2539:21:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$699_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 738,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 737,
														"name": "Uint256Slot",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 699,
														"src": "2539:11:5"
													},
													"referencedDeclaration": 699,
													"src": "2539:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$699_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2538:23:5"
									},
									"scope": 744,
									"src": "2478:190:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 745,
							"src": "1279:1391:5",
							"usedErrors": []
						}
					],
					"src": "105:2566:5"
				},
				"id": 5
			},
			"contracts/MyTokenProxy.sol": {
				"ast": {
					"absolutePath": "contracts/MyTokenProxy.sol",
					"exportedSymbols": {
						"Address": [
							684
						],
						"ERC1967Upgrade": [
							327
						],
						"IBeacon": [
							389
						],
						"IERC1822Proxiable": [
							9
						],
						"MyTokenProxy": [
							780
						],
						"Proxy": [
							379
						],
						"StorageSlot": [
							744
						]
					},
					"id": 781,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 746,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/Proxy.sol",
							"file": "@openzeppelin/contracts/proxy/Proxy.sol",
							"id": 747,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 781,
							"sourceUnit": 380,
							"src": "57:49:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
							"file": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
							"id": 748,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 781,
							"sourceUnit": 328,
							"src": "107:66:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 749,
										"name": "Proxy",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 379,
										"src": "200:5:6"
									},
									"id": 750,
									"nodeType": "InheritanceSpecifier",
									"src": "200:5:6"
								},
								{
									"baseName": {
										"id": 751,
										"name": "ERC1967Upgrade",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 327,
										"src": "207:14:6"
									},
									"id": 752,
									"nodeType": "InheritanceSpecifier",
									"src": "207:14:6"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 780,
							"linearizedBaseContracts": [
								780,
								327,
								379
							],
							"name": "MyTokenProxy",
							"nameLocation": "184:12:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "622:56:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 761,
															"name": "_logic",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "650:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 762,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "658:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 763,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "665:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 760,
														"name": "_upgradeToAndCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "632:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,bytes memory,bool)"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "632:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 765,
												"nodeType": "ExpressionStatement",
												"src": "632:39:6"
											}
										]
									},
									"documentation": {
										"id": 753,
										"nodeType": "StructuredDocumentation",
										"src": "228:333:6",
										"text": " @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\n If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\n function call, and allows initializing the storage of the proxy like a Solidity constructor."
									},
									"id": 767,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "_logic",
												"nameLocation": "586:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "578:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "578:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "607:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "594:18:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 756,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "594:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "577:36:6"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "622:0:6"
									},
									"scope": 780,
									"src": "566:112:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										344
									],
									"body": {
										"id": 778,
										"nodeType": "Block",
										"src": "881:59:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 774,
															"name": "ERC1967Upgrade",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 327,
															"src": "898:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC1967Upgrade_$327_$",
																"typeString": "type(contract ERC1967Upgrade)"
															}
														},
														"id": 775,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_getImplementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 41,
														"src": "898:33:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "898:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 773,
												"id": 777,
												"nodeType": "Return",
												"src": "891:42:6"
											}
										]
									},
									"documentation": {
										"id": 768,
										"nodeType": "StructuredDocumentation",
										"src": "684:67:6",
										"text": " @dev Returns the current implementation address."
									},
									"id": 779,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_implementation",
									"nameLocation": "765:15:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 770,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "837:8:6"
									},
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "780:2:6"
									},
									"returnParameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "impl",
												"nameLocation": "871:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "863:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 771,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "863:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "862:14:6"
									},
									"scope": 780,
									"src": "756:184:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 781,
							"src": "175:767:6",
							"usedErrors": []
						}
					],
					"src": "32:911:6"
				},
				"id": 6
			}
		}
	}
}